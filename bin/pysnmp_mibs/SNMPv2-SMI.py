# PySNMP SMI module. Autogenerated from smidump -f python SNMPv2-SMI
# by libsmi2pysnmp-0.1.3 at Sun Apr 24 22:10:54 2016,
# Python version sys.version_info(major=2, minor=7, micro=11, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( Bits, Integer32, MibIdentifier, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "MibIdentifier", "TimeTicks")

# Types

class Counter32(Unsigned32):
    subtypeSpec = Unsigned32.subtypeSpec+ValueRangeConstraint(0,4294967295)
    
class Counter64(Unsigned64):
    subtypeSpec = Unsigned64.subtypeSpec+ValueRangeConstraint(0,18446744073709551615)
    
class ExtUTCTime(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ConstraintsUnion(ValueSizeConstraint(11,11),ValueSizeConstraint(13,13),)
    
class Gauge32(Unsigned32):
    subtypeSpec = Unsigned32.subtypeSpec+ValueRangeConstraint(0,4294967295)
    
class Integer32(Integer32):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(-2147483648,2147483647)
    
class IpAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(4,4)
    fixedLength = 4
    
class NotificationName(ObjectIdentifier):
    pass

class ObjectName(ObjectIdentifier):
    pass

class Opaque(OctetString):
    pass

class TimeTicks(Unsigned32):
    subtypeSpec = Unsigned32.subtypeSpec+ValueRangeConstraint(0,4294967295)
    
class Unsigned32(Unsigned32):
    subtypeSpec = Unsigned32.subtypeSpec+ValueRangeConstraint(0,4294967295)
    

# Objects

zeroDotZero = ObjectIdentity((0, 0))
if mibBuilder.loadTexts: zeroDotZero.setDescription("A value used for null identifiers.")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
directory = MibIdentifier((1, 3, 6, 1, 1))
mgmt = MibIdentifier((1, 3, 6, 1, 2))
mib_2 = MibIdentifier((1, 3, 6, 1, 2, 1)).setLabel("mib-2")
transmission = MibIdentifier((1, 3, 6, 1, 2, 1, 10))
experimental = MibIdentifier((1, 3, 6, 1, 3))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
security = MibIdentifier((1, 3, 6, 1, 5))
snmpV2 = MibIdentifier((1, 3, 6, 1, 6))
snmpDomains = MibIdentifier((1, 3, 6, 1, 6, 1))
snmpProxys = MibIdentifier((1, 3, 6, 1, 6, 2))
snmpModules = MibIdentifier((1, 3, 6, 1, 6, 3))

# Augmentions

# Exports

# Types
mibBuilder.exportSymbols("SNMPv2-SMI", Counter32=Counter32, Counter64=Counter64, ExtUTCTime=ExtUTCTime, Gauge32=Gauge32, Integer32=Integer32, IpAddress=IpAddress, NotificationName=NotificationName, ObjectName=ObjectName, Opaque=Opaque, TimeTicks=TimeTicks, Unsigned32=Unsigned32)

# Objects
mibBuilder.exportSymbols("SNMPv2-SMI", zeroDotZero=zeroDotZero, org=org, dod=dod, internet=internet, directory=directory, mgmt=mgmt, mib_2=mib_2, transmission=transmission, experimental=experimental, private=private, enterprises=enterprises, security=security, snmpV2=snmpV2, snmpDomains=snmpDomains, snmpProxys=snmpProxys, snmpModules=snmpModules)

