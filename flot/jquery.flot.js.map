{"version":3,"sources":["jquery.canvaswrapper.js","jquery.colorhelpers.js","jquery.flot.js","jquery.flot.saturated.js","jquery.flot.browser.js","jquery.flot.drawSeries.js","jquery.flot.errorbars.js","jquery.flot.uiConstants.js","jquery.flot.logaxis.js","jquery.flot.symbol.js","jquery.flot.flatdata.js","jquery.flot.navigate.js","jquery.flot.fillbetween.js","jquery.flot.categories.js","jquery.flot.stack.js","jquery.flot.touchNavigate.js","jquery.flot.hover.js","jquery.flot.touch.js","jquery.flot.time.js","jquery.flot.axislabels.js","jquery.flot.selection.js","jquery.flot.composeImages.js","jquery.flot.legend.js"],"names":["$","Canvas","cls","container","element","getElementsByClassName","document","createElement","className","style","direction","position","left","top","appendChild","getContext","Error","this","context","pixelRatio","plot","browser","getPixelRatio","width","height","resize","SVGContainer","SVG","_textCache","updateTransforms","transforms","transform","baseVal","clear","forEach","t","appendItem","prototype","restore","save","scale","clearRect","render","layerKey","cache","hasOwnProperty","call","styleKey","layer","getSVGLayer","layerCache","display","key","styleCache","val","positions","i","active","rendered","splice","firstChild","removeChild","parentNode","length","measured","classes","svgElement","pointerEvents","createElementNS","setAttribute","bottom","right","getTextInfo","text","font","angle","textStyle","_typeof","variant","weight","size","lineHeight","family","replace","info","elementRect","indexOf","addTspanElements","textNode","createTextNode","maxWidth","setAttributeNS","fill","getBBox","addText","x","y","halign","valign","textContent","cloneNode","push","textAlign","tspan","lines","split","childNodes","removeText","htmlYCoord","clearCache","window","Flot","jQuery","color","make","r","g","b","a","o","add","c","d","charAt","normalize","f","toString","join","clamp","min","value","max","parseInt","clone","extract","elem","css","toLowerCase","parent","nodeName","get","parse","str","m","res","exec","parseFloat","name","trim","lookupColors","aqua","azure","beige","black","blue","brown","cyan","darkblue","darkcyan","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkviolet","fuchsia","gold","green","indigo","khaki","lightblue","lightcyan","lightgreen","lightgrey","lightpink","lightyellow","lime","magenta","maroon","navy","olive","orange","pink","purple","violet","red","silver","white","yellow","defaultTickGenerator","axis","prev","ticks","start","saturated","saturate","floorInBase","tickSize","v","Number","NaN","MAX_VALUE","multiplyAdd","precision","tickDecimals","decimalPrecision","factor","formatted","Math","round","minSize","decimal","substr","oldTickDecimals","expPosition","tenExponent","exponentValue","floor","log","LN10","roundWith","updatedPrecision","recomputePrecision","toFixed","log10Value","abs","num","LOG10E","newPrecision","Plot","placeholder","data_","options_","plugins","series","options","colors","xaxis","mode","tickColor","inverseTransform","autoScaleMargin","autoScale","windowSize","growOnly","showTickLabels","labelWidth","labelHeight","gridLines","minTickSize","above","boxPosition","centerY","yaxis","offset","xaxes","yaxes","points","fillColor","symbol","lineWidth","steps","bars","show","horizontal","barWidth","align","zero","shadowSize","margin","labelMargin","markings","markingsColor","markingsLineWidth","hooks","surface","overlay","eventHolder","ctx","octx","plotOffset","plotWidth","plotHeight","processOptions","processRawData","processDatapoints","processOffset","setupGrid","adjustSeriesDataRange","setRange","drawBackground","drawSeries","drawAxis","draw","findNearbyItems","axisReserveSpace","bindEvents","drawOverlay","shutdown","eventManager","redrawTimeout","setData","getPlaceholder","getCanvas","getSurface","getEventHolder","each","concat","_","n","getYAxes","pos","used","c2p","undefined","x1","y1","p2c","triggerRedrawOverlay","pointOffset","point","axisNumber","destroy","removeData","empty","clearTextCache","autoScaleAxis","force","isValid","canvas1","anyDataInSeries","datapoints","pointsize","format","topSentry","POSITIVE_INFINITY","bottomSentry","NEGATIVE_INFINITY","xmin","ymax","j","ps","unshift","newTick","computeRange","Infinity","associatedSeries","range","xmax","ymin","backgroundColor","aboveData","executeHooks","delta","useAbsoluteBarWidth","extractRange","ranges","xValues","minDistance","translate","fillStyle","getColorOrGradient","drawMarkings","isFinite","axes","index","self","sort","distance","xrange","allAxes","coord","from","to","mouseX","mouseY","seriesFilter","radius","computeDistance","items","findNearbyInterpolationPoint","posX","posY","dx","dy","item","smallestDistance","moveTo","comparer","drawGridLines","x2","bw","p1x","overlappedWithBorder","p2x","p1y","p2y","dist","strokeStyle","bc","seriesIndex","computeValuePrecision","computeTickSize","addEventHandler","event","handler","priority","eventData","unbind","bind","eventList","uiConstants","MINOR_TICKS_COUNT_CONSTANT","p","init","extend","children","filter","hasClass","hoverable","remove","mouseActiveRadius","redrawOverlayInterval","existing","data","opts","grid","borderColor","axisOptions","axisCount","fontSizeDefault","fontSize","fontDefaults","getOrCreateAxis","centerX","args","hook","oldseries","s","maxIndex","sc","neededColors","colorPool","colorPoolSize","variation","definedColors","colori","defaultTickFormatter","processData","decimals","k","prevSeries","updateAxis","datamin","datamax","required","defaultValue","number","stack","below","nullify","isNaN","every","computeRangeForDataSeries","borderWidth","obj","setTransformationHelpers","identity","it","tp","canvasToCartesianAxisCoords","box","ceil","showGrid","axisOpts","reserveSpace","tickFormatter","Array","slice","arguments","apply","autoScaledMin","autoScaledMax","tmp","allocatedAxes","grep","setupTickGeneration","noTicks","sqrt","tickGenerator","setupCanvases","alignTicksWithAxis","otherAxis","niceTicks","extraDec","ts","test","clearTimeout","oticks","isFunction","label","some","e","notAllBarSeries","measureTickLabels","showMajorTickLabels","showEndpointsTickLabels","findNearbyItem","lw","lh","tickLength","showTicks","showMinorTicks","initPlugins","axisMargin","padding","innermost","isXAxis","found","TICK_LENGTH_CONSTANT","minMargin","minBorderMargin","fillInSeriesOptions","parseData","margins","alignAxisWithGrid","tick","newLabelBox","overlapsOtherLabels","labelBoxes","nullBox","getAxisTickSize","x11","y11","x12","y12","x21","y21","x22","y22","previousLabelBoxes","labelBox","overlapping","drawAxisLabel","minimum","maximum","widen","wmin","widenedMinMax","fixupNumberOfTicks","dec","norm","expectedPs","magn","ticksOption","type","canvas2","point2","fillRect","drawGrid","getEndpointPrecision","drawSymbol","drawSeriesPoints","outermost","findEdges","alignPosition","beginPath","xoff","yoff","lineTo","getAxes","subPixel","allocateAxisBoxSecondPhase","adjustLayoutForThingsStickingOut","yrange","xequal","stroke","setupTickFormatter","setMajorTicks","step","v1","minorTicksNr","minorTicks","setEndpointTicks","edges","allocateAxisBoxFirstPhase","drawAxisLabels","yminor","xminor","strokeRect","foundItems","yequal","foundIndex","foundPoint","maxDistance","my","maxx","maxy","mx","drawTickMarks","dataIndex","barLeft","barRight","fillTowards","v2","defaultBottom","itemDistance","datapoint","interaction","setTimeout","CustomEvent","dispatchEvent","trigger","spec","defaultColor","createLinearGradient","l","co","brightness","opacity","addColorStop","gradient","fn","linearTickGenerator","expRepTickFormatter","multiply","bInt","result","base","getPageXY","doc","documentElement","X","clientX","pageXOffset","scrollLeft","clientLeft","Y","clientY","pageYOffset","scrollTop","clientTop","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","isSafari","HTMLElement","safari","pushNotification","isMobileSafari","navigator","userAgent","match","isOpera","opr","addons","opera","isFirefox","InstallTrigger","isIE","documentMode","isEdge","StyleMedia","isChrome","chrome","webstore","isBlink","CSS","plotLine","xoffset","yoffset","axisx","axisy","initPoints","y2","handleSteps","handleYMinClipping","handleYMaxClipping","handleXMinClipping","handleXMaxClipping","drawLine","prevx","prevy","drawBar","fillStyleCallback","drawRight","drawTop","drawBottom","drawLeft","getFillStyle","filloptions","seriesColor","drawSeriesLines","lineJoin","dashes","setLineDash","decimate","plotLineArea","ypos","areaOpen","segmentStart","segmentEnd","x1old","x2old","drawCircle","shadow","arc","PI","drawSymbolFn","decimatePoints","drawSeriesBars","errors","errorbars","xerr","asymmetric","yerr","drawError","err","upper","lower","drawUpper","drawLower","minmax","drawPath","upperCap","lowerCap","pts","getPlotOffset","getData","drawSeriesErrors","ax","invertX","invertY","exl","exu","eyl","eyu","eb","errRanges","w","sw","version","SNAPPING_CONSTANT","PANHINT_LENGTH_CONSTANT","ZOOM_DISTANCE_MARGIN","PREFERRED_LOG_TICK_VALUES","computePreferedLogTickValues","EXTENDED_LOG_TICK_VALUES","endLimit","rangeStep","log10End","vals","power","mult","logTickGenerator","pixelCoord","minIdx","maxIdx","logTickValues","clampAxis","lastDisplayed","inverseNoTicks","idx","tickValue","idealPixelCoord","reverse","logTickFormatter","formattedValue","lastZero","lastIndexOf","invertedTransform","invertedLogTransform","logTransform","invertedLogInverseTransform","logInverseTransform","processAxisOffset","exp","setDataminRange","map","axisName","inverted","logTicksGenerator","square","rect","rectangle","diamond","triangle","sin","ellipse","handlers","cross","plus","process1DRawData","flatdata","initNevigation","panAxes","canDrag","useManualPan","pan","smartPanLock","useSmartPan","plotState","prevCursor","panHint","panTimeout","prevDragPosition","isPanAction","onMouseWheel","ec","amount","originalEvent","deltaY","onDragEnd","getOptions","zoom","preventDefault","zoomOut","page","getXAxes","center","onMouseDown","onMouseUp","onDragStart","button","cursor","navigationState","onDrag","frameRate","smartPan","startPageX","startPageY","end","onDblClick","activate","recenter","interactive","getTouchedAxis","Event","detail","axisTouched","onClick","Object","keys","navigationOffset","axisMin","axisMax","diagMode","h","xf","yf","axisZoom","plotZoom","zoomRange","offsetBelow","offsetAbove","preventEvent","navigationOffsetBelow","navigationOffsetAbove","axisPan","plotPan","minD","panRange","maxD","lockedDirection","prevDelta","initialState","smartLock","snap","touchPointX","touchPointY","startx","starty","endx","endy","dirX","mousewheel","dblclick","click","fillBetween","id","plotData","other","allseries","px","intery","qx","qy","otherps","otherpoints","newpoints","withlines","withbottom","withsteps","fromgap","py","xCategories","yCategories","categoriesTickGenerator","categories","setupCategoriesForAxis","isArray","transformPointsOnAxis","formatColumn","needsBottom","hasBottom","addBottomPoints","formattedPoints","keyOffset","accumulateOffset","initTouchNavigation","pinch","doubleTap","pinchDragTimeout","gestureState","zoomEnable","prevDistance","prevTapTime","prevPanPosition","prevTapPosition","prevTouchedAxis","currentTouchedAxis","touchedAxis","navigationConstraint","touchMode","presetNavigationState","touches","pageX","pageY","axisTouch1","axisTouch2","noAxisTouched","updateData","getPoint","drag","updatePrevPanPosition","updateprevPanPosition","pinchDistance","zoomAmount","recenterPlot","firstTouch","secondTouch","enableTouch","addEventListener","removeEventListener","gesture","axisDir","t1","t2","eventType","lastMouseMoveEvent","highlights","generatePlothoverEvent","newEvent","changedTouches","doTriggerClickHoverEvent","searchDistance","seriesFlag","triggerClickHoverEvent","onMouseMove","onMouseLeave","triggerCleanupEvent","unhighlight","eventname","canvasX","canvasY","autoHighlight","auto","highlight","indexOfHighlight","highlightColor","hi","pointRadius","closePath","clickable","mainEventHolder","twoTouches","currentTapStart","currentTapEnd","prevTap","currentTap","interceptedLongTap","isUnsupportedGesture","tapStartTime","longTapTriggerId","maxDistanceBetweenTaps","maxIntervalBetweenTaps","interpretGestures","isPinchEvent","executeAction","wasPinchEvent","currentTime","Date","getTime","intervalBetweenTaps","onDoubleTap","longTap","tap","touchstart","updateCurrentForDoubleTap","touchmove","preventEventBehaviors","touchend","waitForLongTap","isLongTap","isTap","propagateSupportedGesture","stopPropagation","target","CreateMicroSecondDate","DateType","microEpoch","newDate","oldSetTime","setTime","oldGetTime","update","microseconds","getMicroseconds","setMicroseconds","epochWithoutMicroseconds","setUTCMicroseconds","getUTCMicroseconds","formatDate","fmt","monthNames","dayNames","strftime","hours12","leftPad","pad","escape","hours","getHours","isAM","getDay","getMonth","getDate","getMinutes","getSeconds","milliseconds","numberDecimalPlaces","totalMicroseconds","magnitude","getMilliseconds","getFullYear","makeUtcWrapper","addProxyMethod","sourceObj","sourceMethod","targetObj","targetMethod","utc","date","props","dateGenerator","maxDateValue","timeBase","timezone","timezoneJS","setTimezone","timeUnitSizeSeconds","microsecond","millisecond","second","minute","hour","day","month","quarter","year","timeUnitSizeMilliseconds","timeUnitSizeMicroseconds","baseSpec","specMonths","specQuarters","dateTickGenerator","timeUnitSize","unit","carry","setMilliseconds","setSeconds","setMinutes","setHours","setMonth","setFullYear","setDate","v1000","useQuarters","suffix","hourCode","timeformat","span","twelveHourClock","log10","String","AxisLabel","axisLabel","calculateSize","axisId","degrees","svgLayer","createSVGTransform","setTranslate","rotate","setRotate","calculateOffsets","offsets","cleanup","layerId","white-space","axisLabels","axisLabelPadding","flotAxisName","selection","first","currentMode","savedhandlers","mouseUpHandler","updateSelection","getSelection","which","body","focus","onselectstart","ondrag","setSelectionPos","selectionIsSane","triggerSelectedEvent","one","c1","c2","selectionDirection","p1","p2","clearSelection","setSelection","mousemove","mousedown","oX","oY","visualization","displaySelectionDecorations","shape","earWidth","GENERALFAILURECALLBACKERROR","SUCCESSFULIMAGEPREPARATION","EMPTYARRAYOFIMAGESOURCES","NEGATIVEIMAGESIZE","composeImages","canvasOrSvgSources","destinationCanvas","validCanvasOrSvgSources","isValidSource","allImgCompositionPromises","validCanvasOrSvgSource","tempImg","canvasOrSvgSource","Image","Promise","sourceDescription","tagName","sourceComponent","successCallbackFunc","failureCallbackFunc","onload","evt","successfullyLoaded","onabort","console","onerror","generateTempImageFromCanvasOrSvg","svg","img","srcCanvasOrSvg","destImg","src","toDataURL","rules","source","patchSVGSource","embedCSSRulesInSVG","getCSSRules","utf8BinaryString","arrayBuffer","binaryString","utf8Array","Uint8Array","fromCharCode","subarray","TextEncoder","TextEncoderLite","encode","btoa","blob","Blob","url","URL","webkitURL","createObjectURL","srcImgTagName","genLeft","getBoundingClientRect","genTop","genRight","genBottom","all","then","tempImgs","sources","destination","prepareImagesResult","minX","minY","maxX","maxY","xCompOffset","yCompOffset","find","destinationCtx","drawImage","failureCallback","isValidFromCanvas","isValidFromContent","getComputedStyle","visibility","styleSheets","rulesList","cssRules","rule","cssText","classList","innerHTML","svgSource","getEntryIconHtml","html","xPos","yPos","strokeColor","strokeWidth","svgShapeDefs","checkOptions","opts1","opts2","prop","ascending","lf","labelFormatter","legend","oldEntries","legendEntries","oldPlotOffset","newEntries","sorted","reduce","validEntries","labelEval","entry","newPlotOffset","newEntry","oldEntry","insertLegend","iconHtml","entries","columnWidths","querySelector","columnIndex","noColumns","fontStyle","fontVariant","fontWeight","fontFamily","legendEl","appendTo"],"mappings":"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","file":"jquery.flot.js","sourcesContent":["/** ## jquery.flot.canvaswrapper\n\nThis plugin contains the function for creating and manipulating both the canvas\nlayers and svg layers.\n\nThe Canvas object is a wrapper around an HTML5 canvas tag.\nThe constructor Canvas(cls, container) takes as parameters cls,\nthe list of classes to apply to the canvas adnd the containter,\nelement onto which to append the canvas. The canvas operations\ndon't work unless the canvas is attached to the DOM.\n\n### jquery.canvaswrapper.js API functions\n*/\n\n(function($) {\n    var Canvas = function(cls, container) {\n        var element = container.getElementsByClassName(cls)[0];\n\n        if (!element) {\n            element = document.createElement('canvas');\n            element.className = cls;\n            element.style.direction = 'ltr';\n            element.style.position = 'absolute';\n            element.style.left = '0px';\n            element.style.top = '0px';\n\n            container.appendChild(element);\n\n            // If HTML5 Canvas isn't available, throw\n\n            if (!element.getContext) {\n                throw new Error('Canvas is not available.');\n            }\n        }\n\n        this.element = element;\n\n        var context = this.context = element.getContext('2d');\n        this.pixelRatio = $.plot.browser.getPixelRatio(context);\n\n        // Size the canvas to match the internal dimensions of its container\n        var width = $(container).width();\n        var height = $(container).height();\n        this.resize(width, height);\n\n        // Collection of HTML div layers for text overlaid onto the canvas\n\n        this.SVGContainer = null;\n        this.SVG = {};\n\n        // Cache of text fragments and metrics, so we can avoid expensively\n        // re-calculating them when the plot is re-rendered in a loop.\n\n        this._textCache = {};\n    }\n\n    /**\n    - resize(width, height)\n\n     Resizes the canvas to the given dimensions.\n     The width represents the new width of the canvas, meanwhile the height\n     is the new height of the canvas, both of them in pixels.\n    */\n\n    Canvas.prototype.resize = function(width, height) {\n        var minSize = 10;\n        width = width < minSize ? minSize : width;\n        height = height < minSize ? minSize : height;\n\n        var element = this.element,\n            context = this.context,\n            pixelRatio = this.pixelRatio;\n\n        // Resize the canvas, increasing its density based on the display's\n        // pixel ratio; basically giving it more pixels without increasing the\n        // size of its element, to take advantage of the fact that retina\n        // displays have that many more pixels in the same advertised space.\n\n        // Resizing should reset the state (excanvas seems to be buggy though)\n\n        if (this.width !== width) {\n            element.width = width * pixelRatio;\n            element.style.width = width + 'px';\n            this.width = width;\n        }\n\n        if (this.height !== height) {\n            element.height = height * pixelRatio;\n            element.style.height = height + 'px';\n            this.height = height;\n        }\n\n        // Save the context, so we can reset in case we get replotted.  The\n        // restore ensure that we're really back at the initial state, and\n        // should be safe even if we haven't saved the initial state yet.\n\n        context.restore();\n        context.save();\n\n        // Scale the coordinate space to match the display density; so even though we\n        // may have twice as many pixels, we still want lines and other drawing to\n        // appear at the same size; the extra pixels will just make them crisper.\n\n        context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n    - clear()\n\n     Clears the entire canvas area, not including any overlaid HTML text\n    */\n    Canvas.prototype.clear = function() {\n        this.context.clearRect(0, 0, this.width, this.height);\n    };\n\n    /**\n    - render()\n\n     Finishes rendering the canvas, including managing the text overlay.\n    */\n    Canvas.prototype.render = function() {\n        var cache = this._textCache;\n\n        // For each text layer, add elements marked as active that haven't\n        // already been rendered, and remove those that are no longer active.\n\n        for (var layerKey in cache) {\n            if (hasOwnProperty.call(cache, layerKey)) {\n                var layer = this.getSVGLayer(layerKey),\n                    layerCache = cache[layerKey];\n\n                var display = layer.style.display;\n                layer.style.display = 'none';\n\n                for (var styleKey in layerCache) {\n                    if (hasOwnProperty.call(layerCache, styleKey)) {\n                        var styleCache = layerCache[styleKey];\n                        for (var key in styleCache) {\n                            if (hasOwnProperty.call(styleCache, key)) {\n                                var val = styleCache[key],\n                                    positions = val.positions;\n\n                                for (var i = 0, position; positions[i]; i++) {\n                                    position = positions[i];\n                                    if (position.active) {\n                                        if (!position.rendered) {\n                                            layer.appendChild(position.element);\n                                            position.rendered = true;\n                                        }\n                                    } else {\n                                        positions.splice(i--, 1);\n                                        if (position.rendered) {\n                                            while (position.element.firstChild) {\n                                                position.element.removeChild(position.element.firstChild);\n                                            }\n                                            position.element.parentNode.removeChild(position.element);\n                                        }\n                                    }\n                                }\n\n                                if (positions.length === 0) {\n                                    if (val.measured) {\n                                        val.measured = false;\n                                    } else {\n                                        delete styleCache[key];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                layer.style.display = display;\n            }\n        }\n    };\n\n    /**\n    - getSVGLayer(classes)\n\n     Creates (if necessary) and returns the SVG overlay container.\n     The classes string represents the string of space-separated CSS classes\n     used to uniquely identify the text layer. It return the svg-layer div.\n    */\n    Canvas.prototype.getSVGLayer = function(classes) {\n        var layer = this.SVG[classes];\n\n        // Create the SVG layer if it doesn't exist\n\n        if (!layer) {\n            // Create the svg layer container, if it doesn't exist\n\n            var svgElement;\n\n            if (!this.SVGContainer) {\n                this.SVGContainer = document.createElement('div');\n                this.SVGContainer.className = 'flot-svg';\n                this.SVGContainer.style.position = 'absolute';\n                this.SVGContainer.style.top = '0px';\n                this.SVGContainer.style.left = '0px';\n                this.SVGContainer.style.height = '100%';\n                this.SVGContainer.style.width = '100%';\n                this.SVGContainer.style.pointerEvents = 'none';\n                this.element.parentNode.appendChild(this.SVGContainer);\n\n                svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                svgElement.style.width = '100%';\n                svgElement.style.height = '100%';\n\n                this.SVGContainer.appendChild(svgElement);\n            } else {\n                svgElement = this.SVGContainer.firstChild;\n            }\n\n            layer = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            layer.setAttribute('class', classes);\n            layer.style.position = 'absolute';\n            layer.style.top = '0px';\n            layer.style.left = '0px';\n            layer.style.bottom = '0px';\n            layer.style.right = '0px';\n            svgElement.appendChild(layer);\n            this.SVG[classes] = layer;\n        }\n\n        return layer;\n    };\n\n    /**\n    - getTextInfo(layer, text, font, angle, width)\n\n     Creates (if necessary) and returns a text info object.\n     The object looks like this:\n     ```js\n     {\n         width //Width of the text's wrapper div.\n         height //Height of the text's wrapper div.\n         element //The HTML div containing the text.\n         positions //Array of positions at which this text is drawn.\n      }\n      ```\n      The positions array contains objects that look like this:\n      ```js\n      {\n         active //Flag indicating whether the text should be visible.\n         rendered //Flag indicating whether the text is currently visible.\n         element //The HTML div containing the text.\n         text //The actual text and is identical with element[0].textContent.\n         x //X coordinate at which to draw the text.\n         y //Y coordinate at which to draw the text.\n      }\n      ```\n      Each position after the first receives a clone of the original element.\n      The idea is that that the width, height, and general 'identity' of the\n      text is constant no matter where it is placed; the placements are a\n      secondary property.\n\n      Canvas maintains a cache of recently-used text info objects; getTextInfo\n      either returns the cached element or creates a new entry.\n\n     The layer parameter is string of space-separated CSS classes uniquely\n     identifying the layer containing this text.\n     Text is the text string to retrieve info for.\n     Font is either a string of space-separated CSS classes or a font-spec object,\n     defining the text's font and style.\n     Angle is the angle at which to rotate the text, in degrees. Angle is currently unused,\n     it will be implemented in the future.\n     The last parameter is the Maximum width of the text before it wraps.\n     The method returns a text info object.\n    */\n    Canvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n        var textStyle, layerCache, styleCache, info;\n\n        // Cast the value to a string, in case we were given a number or such\n\n        text = '' + text;\n\n        // If the font is a font-spec object, generate a CSS font definition\n\n        if (typeof font === 'object') {\n            textStyle = font.style + ' ' + font.variant + ' ' + font.weight + ' ' + font.size + 'px/' + font.lineHeight + 'px ' + font.family;\n        } else {\n            textStyle = font;\n        }\n\n        // Retrieve (or create) the cache for the text's layer and styles\n\n        layerCache = this._textCache[layer];\n\n        if (layerCache == null) {\n            layerCache = this._textCache[layer] = {};\n        }\n\n        styleCache = layerCache[textStyle];\n\n        if (styleCache == null) {\n            styleCache = layerCache[textStyle] = {};\n        }\n\n        var key = generateKey(text);\n        info = styleCache[key];\n\n        // If we can't find a matching element in our cache, create a new one\n\n        if (!info) {\n            var element = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n            if (text.indexOf('<br>') !== -1) {\n                addTspanElements(text, element, -9999);\n            } else {\n                var textNode = document.createTextNode(text);\n                element.appendChild(textNode);\n            }\n\n            element.style.position = 'absolute';\n            element.style.maxWidth = width;\n            element.setAttributeNS(null, 'x', -9999);\n            element.setAttributeNS(null, 'y', -9999);\n\n            if (typeof font === 'object') {\n                element.style.font = textStyle;\n                element.style.fill = font.fill;\n            } else if (typeof font === 'string') {\n                element.setAttribute('class', font);\n            }\n\n            this.getSVGLayer(layer).appendChild(element);\n            var elementRect = element.getBBox();\n\n            info = styleCache[key] = {\n                width: elementRect.width,\n                height: elementRect.height,\n                measured: true,\n                element: element,\n                positions: []\n            };\n\n            //remove elements from dom\n            while (element.firstChild) {\n                element.removeChild(element.firstChild);\n            }\n            element.parentNode.removeChild(element);\n        }\n\n        info.measured = true;\n        return info;\n    };\n\n    function updateTransforms (element, transforms) {\n        element.transform.baseVal.clear();\n        if (transforms) {\n            transforms.forEach(function(t) {\n                element.transform.baseVal.appendItem(t);\n            });\n        }\n    }\n\n    /**\n    - addText (layer, x, y, text, font, angle, width, halign, valign, transforms)\n\n     Adds a text string to the canvas text overlay.\n     The text isn't drawn immediately; it is marked as rendering, which will\n     result in its addition to the canvas on the next render pass.\n\n     The layer is string of space-separated CSS classes uniquely\n     identifying the layer containing this text.\n     X and Y represents the X and Y coordinate at which to draw the text.\n     and text is the string to draw\n    */\n    Canvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign, transforms) {\n        var info = this.getTextInfo(layer, text, font, angle, width),\n            positions = info.positions;\n\n        // Tweak the div's position to match the text's alignment\n\n        if (halign === 'center') {\n            x -= info.width / 2;\n        } else if (halign === 'right') {\n            x -= info.width;\n        }\n\n        if (valign === 'middle') {\n            y -= info.height / 2;\n        } else if (valign === 'bottom') {\n            y -= info.height;\n        }\n\n        y += 0.75 * info.height;\n\n        // Determine whether this text already exists at this position.\n        // If so, mark it for inclusion in the next render pass.\n\n        for (var i = 0, position; positions[i]; i++) {\n            position = positions[i];\n            if (position.x === x && position.y === y && position.text === text) {\n                position.active = true;\n                // update the transforms\n                updateTransforms(position.element, transforms);\n\n                return;\n            } else if (position.active === false) {\n                position.active = true;\n                position.text = text;\n                if (text.indexOf('<br>') !== -1) {\n                    y -= 0.25 * info.height;\n                    addTspanElements(text, position.element, x);\n                } else {\n                    position.element.textContent = text;\n                }\n                position.element.setAttributeNS(null, 'x', x);\n                position.element.setAttributeNS(null, 'y', y);\n                position.x = x;\n                position.y = y;\n                // update the transforms\n                updateTransforms(position.element, transforms);\n\n                return;\n            }\n        }\n\n        // If the text doesn't exist at this position, create a new entry\n\n        // For the very first position we'll re-use the original element,\n        // while for subsequent ones we'll clone it.\n\n        position = {\n            active: true,\n            rendered: false,\n            element: positions.length ? info.element.cloneNode() : info.element,\n            text: text,\n            x: x,\n            y: y\n        };\n\n        positions.push(position);\n\n        if (text.indexOf('<br>') !== -1) {\n            y -= 0.25 * info.height;\n            addTspanElements(text, position.element, x);\n        } else {\n            position.element.textContent = text;\n        }\n\n        // Move the element to its final position within the container\n        position.element.setAttributeNS(null, 'x', x);\n        position.element.setAttributeNS(null, 'y', y);\n        position.element.style.textAlign = halign;\n        // update the transforms\n        updateTransforms(position.element, transforms);\n    };\n\n    var addTspanElements = function(text, element, x) {\n        var lines = text.split('<br>'),\n            tspan, i, offset;\n\n        for (i = 0; i < lines.length; i++) {\n            if (!element.childNodes[i]) {\n                tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                element.appendChild(tspan);\n            } else {\n                tspan = element.childNodes[i];\n            }\n            tspan.textContent = lines[i];\n            offset = (i === 0 ? 0 : 1) + 'em';\n            tspan.setAttributeNS(null, 'dy', offset);\n            tspan.setAttributeNS(null, 'x', x);\n        }\n    }\n\n    /**\n    - removeText (layer, x, y, text, font, angle)\n\n      The function removes one or more text strings from the canvas text overlay.\n      If no parameters are given, all text within the layer is removed.\n\n      Note that the text is not immediately removed; it is simply marked as\n      inactive, which will result in its removal on the next render pass.\n      This avoids the performance penalty for 'clear and redraw' behavior,\n      where we potentially get rid of all text on a layer, but will likely\n      add back most or all of it later, as when redrawing axes, for example.\n\n      The layer is a string of space-separated CSS classes uniquely\n      identifying the layer containing this text. The following parameter are\n      X and Y coordinate of the text.\n      Text is the string to remove, while the font is either a string of space-separated CSS\n      classes or a font-spec object, defining the text's font and style.\n     */\n    Canvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n        var info, htmlYCoord;\n        if (text == null) {\n            var layerCache = this._textCache[layer];\n            if (layerCache != null) {\n                for (var styleKey in layerCache) {\n                    if (hasOwnProperty.call(layerCache, styleKey)) {\n                        var styleCache = layerCache[styleKey];\n                        for (var key in styleCache) {\n                            if (hasOwnProperty.call(styleCache, key)) {\n                                var positions = styleCache[key].positions;\n                                positions.forEach(function(position) {\n                                    position.active = false;\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        } else {\n            info = this.getTextInfo(layer, text, font, angle);\n            positions = info.positions;\n            positions.forEach(function(position) {\n                htmlYCoord = y + 0.75 * info.height;\n                if (position.x === x && position.y === htmlYCoord && position.text === text) {\n                    position.active = false;\n                }\n            });\n        }\n    };\n\n    /**\n    - clearCache()\n\n     Clears the cache used to speed up the text size measurements.\n     As an (unfortunate) side effect all text within the text Layer is removed.\n     Use this function before plot.setupGrid() and plot.draw() if the plot just\n     became visible or the styles changed.\n    */\n    Canvas.prototype.clearCache = function() {\n        var cache = this._textCache;\n        for (var layerKey in cache) {\n            if (hasOwnProperty.call(cache, layerKey)) {\n                var layer = this.getSVGLayer(layerKey);\n                while (layer.firstChild) {\n                    layer.removeChild(layer.firstChild);\n                }\n            }\n        };\n\n        this._textCache = {};\n    };\n\n    function generateKey(text) {\n        return text.replace(/0|1|2|3|4|5|6|7|8|9/g, '0');\n    }\n\n    if (!window.Flot) {\n        window.Flot = {};\n    }\n\n    window.Flot.Canvas = Canvas;\n})(jQuery);\n","/* Plugin for jQuery for working with colors.\n *\n * Version 1.1.\n *\n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */\n\n(function($) {\n    $.color = {};\n\n    // construct color object with some convenient chainable helpers\n    $.color.make = function (r, g, b, a) {\n        var o = {};\n        o.r = r || 0;\n        o.g = g || 0;\n        o.b = b || 0;\n        o.a = a != null ? a : 1;\n\n        o.add = function (c, d) {\n            for (var i = 0; i < c.length; ++i) {\n                o[c.charAt(i)] += d;\n            }\n\n            return o.normalize();\n        };\n\n        o.scale = function (c, f) {\n            for (var i = 0; i < c.length; ++i) {\n                o[c.charAt(i)] *= f;\n            }\n\n            return o.normalize();\n        };\n\n        o.toString = function () {\n            if (o.a >= 1.0) {\n                return \"rgb(\" + [o.r, o.g, o.b].join(\",\") + \")\";\n            } else {\n                return \"rgba(\" + [o.r, o.g, o.b, o.a].join(\",\") + \")\";\n            }\n        };\n\n        o.normalize = function () {\n            function clamp(min, value, max) {\n                return value < min ? min : (value > max ? max : value);\n            }\n\n            o.r = clamp(0, parseInt(o.r), 255);\n            o.g = clamp(0, parseInt(o.g), 255);\n            o.b = clamp(0, parseInt(o.b), 255);\n            o.a = clamp(0, o.a, 1);\n            return o;\n        };\n\n        o.clone = function () {\n            return $.color.make(o.r, o.b, o.g, o.a);\n        };\n\n        return o.normalize();\n    }\n\n    // extract CSS color property from element, going up in the DOM\n    // if it's \"transparent\"\n    $.color.extract = function (elem, css) {\n        var c;\n\n        do {\n            c = elem.css(css).toLowerCase();\n            // keep going until we find an element that has color, or\n            // we hit the body or root (have no parent)\n            if (c !== '' && c !== 'transparent') {\n                break;\n            }\n\n            elem = elem.parent();\n        } while (elem.length && !$.nodeName(elem.get(0), \"body\"));\n\n        // catch Safari's way of signalling transparent\n        if (c === \"rgba(0, 0, 0, 0)\") {\n            c = \"transparent\";\n        }\n\n        return $.color.parse(c);\n    }\n\n    // parse CSS color string (like \"rgb(10, 32, 43)\" or \"#fff\"),\n    // returns color object, if parsing failed, you get black (0, 0,\n    // 0) out\n    $.color.parse = function (str) {\n        var res, m = $.color.make;\n\n        // Look for rgb(num,num,num)\n        res = /rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str);\n        if (res) {\n            return m(parseInt(res[1], 10), parseInt(res[2], 10), parseInt(res[3], 10));\n        }\n\n        // Look for rgba(num,num,num,num)\n        res = /rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str)\n        if (res) {\n            return m(parseInt(res[1], 10), parseInt(res[2], 10), parseInt(res[3], 10), parseFloat(res[4]));\n        }\n\n        // Look for rgb(num%,num%,num%)\n        res = /rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)%\\s*\\)/.exec(str);\n        if (res) {\n            return m(parseFloat(res[1]) * 2.55, parseFloat(res[2]) * 2.55, parseFloat(res[3]) * 2.55);\n        }\n\n        // Look for rgba(num%,num%,num%,num)\n        res = /rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str);\n        if (res) {\n            return m(parseFloat(res[1]) * 2.55, parseFloat(res[2]) * 2.55, parseFloat(res[3]) * 2.55, parseFloat(res[4]));\n        }\n\n        // Look for #a0b1c2\n        res = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str);\n        if (res) {\n            return m(parseInt(res[1], 16), parseInt(res[2], 16), parseInt(res[3], 16));\n        }\n\n        // Look for #fff\n        res = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str);\n        if (res) {\n            return m(parseInt(res[1] + res[1], 16), parseInt(res[2] + res[2], 16), parseInt(res[3] + res[3], 16));\n        }\n\n        // Otherwise, we're most likely dealing with a named color\n        var name = $.trim(str).toLowerCase();\n        if (name === \"transparent\") {\n            return m(255, 255, 255, 0);\n        } else {\n            // default to black\n            res = lookupColors[name] || [0, 0, 0];\n            return m(res[0], res[1], res[2]);\n        }\n    }\n\n    var lookupColors = {\n        aqua: [0, 255, 255],\n        azure: [240, 255, 255],\n        beige: [245, 245, 220],\n        black: [0, 0, 0],\n        blue: [0, 0, 255],\n        brown: [165, 42, 42],\n        cyan: [0, 255, 255],\n        darkblue: [0, 0, 139],\n        darkcyan: [0, 139, 139],\n        darkgrey: [169, 169, 169],\n        darkgreen: [0, 100, 0],\n        darkkhaki: [189, 183, 107],\n        darkmagenta: [139, 0, 139],\n        darkolivegreen: [85, 107, 47],\n        darkorange: [255, 140, 0],\n        darkorchid: [153, 50, 204],\n        darkred: [139, 0, 0],\n        darksalmon: [233, 150, 122],\n        darkviolet: [148, 0, 211],\n        fuchsia: [255, 0, 255],\n        gold: [255, 215, 0],\n        green: [0, 128, 0],\n        indigo: [75, 0, 130],\n        khaki: [240, 230, 140],\n        lightblue: [173, 216, 230],\n        lightcyan: [224, 255, 255],\n        lightgreen: [144, 238, 144],\n        lightgrey: [211, 211, 211],\n        lightpink: [255, 182, 193],\n        lightyellow: [255, 255, 224],\n        lime: [0, 255, 0],\n        magenta: [255, 0, 255],\n        maroon: [128, 0, 0],\n        navy: [0, 0, 128],\n        olive: [128, 128, 0],\n        orange: [255, 165, 0],\n        pink: [255, 192, 203],\n        purple: [128, 0, 128],\n        violet: [128, 0, 128],\n        red: [255, 0, 0],\n        silver: [192, 192, 192],\n        white: [255, 255, 255],\n        yellow: [255, 255, 0]\n    };\n})(jQuery);\n","/* Javascript plotting library for jQuery, version 3.0.0.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n\n// the actual Flot code\n(function($) {\n    \"use strict\";\n\n    var Canvas = window.Flot.Canvas;\n\n    function defaultTickGenerator(axis) {\n        var ticks = [],\n            start = $.plot.saturated.saturate($.plot.saturated.floorInBase(axis.min, axis.tickSize)),\n            i = 0,\n            v = Number.NaN,\n            prev;\n\n        if (start === -Number.MAX_VALUE) {\n            ticks.push(start);\n            start = $.plot.saturated.floorInBase(axis.min + axis.tickSize, axis.tickSize);\n        }\n\n        do {\n            prev = v;\n            //v = start + i * axis.tickSize;\n            v = $.plot.saturated.multiplyAdd(axis.tickSize, i, start);\n            ticks.push(v);\n            ++i;\n        } while (v < axis.max && v !== prev);\n\n        return ticks;\n    }\n\n    function defaultTickFormatter(value, axis, precision) {\n        var oldTickDecimals = axis.tickDecimals,\n            expPosition = (\"\" + value).indexOf(\"e\");\n\n        if (expPosition !== -1) {\n            return expRepTickFormatter(value, axis, precision);\n        }\n\n        if (precision > 0) {\n            axis.tickDecimals = precision;\n        }\n\n        var factor = axis.tickDecimals ? parseFloat('1e' + axis.tickDecimals) : 1,\n            formatted = \"\" + Math.round(value * factor) / factor;\n\n        // If tickDecimals was specified, ensure that we have exactly that\n        // much precision; otherwise default to the value's own precision.\n        if (axis.tickDecimals != null) {\n            var decimal = formatted.indexOf(\".\"),\n                decimalPrecision = decimal === -1 ? 0 : formatted.length - decimal - 1;\n            if (decimalPrecision < axis.tickDecimals) {\n                var decimals = (\"\" + factor).substr(1, axis.tickDecimals - decimalPrecision);\n                formatted = (decimalPrecision ? formatted : formatted + \".\") + decimals;\n            }\n        }\n\n        axis.tickDecimals = oldTickDecimals;\n        return formatted;\n    };\n\n    function expRepTickFormatter(value, axis, precision) {\n        var expPosition = (\"\" + value).indexOf(\"e\"),\n            exponentValue = parseInt((\"\" + value).substr(expPosition + 1)),\n            tenExponent = expPosition !== -1 ? exponentValue : (value > 0 ? Math.floor(Math.log(value) / Math.LN10) : 0),\n            roundWith = parseFloat('1e' + tenExponent),\n            x = value / roundWith;\n\n        if (precision) {\n            var updatedPrecision = recomputePrecision(value, precision);\n            return (value / roundWith).toFixed(updatedPrecision) + 'e' + tenExponent;\n        }\n\n        if (axis.tickDecimals > 0) {\n            return x.toFixed(recomputePrecision(value, axis.tickDecimals)) + 'e' + tenExponent;\n        }\n        return x.toFixed() + 'e' + tenExponent;\n    }\n\n    function recomputePrecision(num, precision) {\n        //for numbers close to zero, the precision from flot will be a big number\n        //while for big numbers, the precision will be negative\n        var log10Value = Math.log(Math.abs(num)) * Math.LOG10E,\n            newPrecision = Math.abs(log10Value + precision);\n\n        return newPrecision <= 20 ? Math.floor(newPrecision) : 20;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    // The top-level container for the entire plot.\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoScaleMargin: null, // margin in % to add if autoScale option is on \"loose\" mode,\n                    autoScale: \"exact\", // Available modes: \"none\", \"loose\", \"exact\", \"sliding-window\"\n                    windowSize: null, // null or number. This is the size of sliding-window.\n                    growOnly: null, // grow only, useful for smoother auto-scale, the scales will grow to accomodate data but won't shrink back.\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    showTickLabels: \"major\", // \"none\", \"endpoints\", \"major\", \"all\"\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of major tick marks\n                    showMinorTicks: null, // true = show minor tick marks, false = hide minor tick marks\n                    showTicks: null, // true = show tick marks, false = hide all tick marks\n                    gridLines: null, // true = show grid lines, false = hide grid lines\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null, // number or [number, \"unit\"]\n                    offset: { below: 0, above: 0 }, // the plot drawing offset. this is calculated by the flot.navigate for each axis\n                    boxPosition: { centerX: 0, centerY: 0 } //position of the axis on the corresponding axis box\n                },\n                yaxis: {\n                    autoScaleMargin: 0.02, // margin in % to add if autoScale option is on \"loose\" mode\n                    autoScale: \"loose\", // Available modes: \"none\", \"loose\", \"exact\"\n                    growOnly: null, // grow only, useful for smoother auto-scale, the scales will grow to accomodate data but won't shrink back.\n                    position: \"left\", // or \"right\"\n                    showTickLabels: \"major\", // \"none\", \"endpoints\", \"major\", \"all\"\n                    offset: { below: 0, above: 0 }, // the plot drawing offset. this is calculated by the flot.navigate for each axis\n                    boxPosition: { centerX: 0, centerY: 0 } //position of the axis on the corresponding axis box\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: 'circle' // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled\n                        lineWidth: 1, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                        // Omit 'zero', so we can later default its value to\n                        // match that of the 'fill' option.\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        // barWidth: number or [number, absolute]\n                        // when 'absolute' is false, 'number' is relative to the minimum distance between points for the series\n                        // when 'absolute' is true, 'number' is considered to be in units of the x-axis\n                        horizontal: false,\n                        barWidth: 0.8,\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // \"left\", \"right\", or \"center\"\n                        zero: true\n                    },\n                    shadowSize: 3,\n                    highlightColor: null\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    margin: 0, // distance from the canvas edge to the grid\n                    labelMargin: 5, // in pixels\n                    axisMargin: 8, // in pixels\n                    borderWidth: 1, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 15 // how far the mouse can be away to activate an item\n                },\n                interaction: {\n                    redrawOverlayInterval: 1000 / 60 // time between updates, -1 means in same flow\n                },\n                hooks: {}\n            },\n            surface = null, // the canvas for the plot itself\n            overlay = null, // canvas for interactive stuff on top of plot\n            eventHolder = null, // jQuery object that events should be bound to\n            ctx = null,\n            octx = null,\n            xaxes = [],\n            yaxes = [],\n            plotOffset = {\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0\n            },\n            plotWidth = 0,\n            plotHeight = 0,\n            hooks = {\n                processOptions: [],\n                processRawData: [],\n                processDatapoints: [],\n                processOffset: [],\n                setupGrid: [],\n                adjustSeriesDataRange: [],\n                setRange: [],\n                drawBackground: [],\n                drawSeries: [],\n                drawAxis: [],\n                draw: [],\n                findNearbyItems: [],\n                axisReserveSpace: [],\n                bindEvents: [],\n                drawOverlay: [],\n                resize: [],\n                shutdown: []\n            },\n            plot = this;\n\n        var eventManager = {};\n\n        // interactive features\n\n        var redrawTimeout = null;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() {\n            return placeholder;\n        };\n        plot.getCanvas = function() {\n            return surface.element;\n        };\n        plot.getSurface = function() {\n            return surface;\n        };\n        plot.getEventHolder = function() {\n            return eventHolder[0];\n        };\n        plot.getPlotOffset = function() {\n            return plotOffset;\n        };\n        plot.width = function() {\n            return plotWidth;\n        };\n        plot.height = function() {\n            return plotHeight;\n        };\n        plot.offset = function() {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function() {\n            return series;\n        };\n        plot.getAxes = function() {\n            var res = {};\n            $.each(xaxes.concat(yaxes), function(_, axis) {\n                if (axis) {\n                    res[axis.direction + (axis.n !== 1 ? axis.n : \"\") + \"axis\"] = axis;\n                }\n            });\n            return res;\n        };\n        plot.getXAxes = function() {\n            return xaxes;\n        };\n        plot.getYAxes = function() {\n            return yaxes;\n        };\n        plot.c2p = canvasToCartesianAxisCoords;\n        plot.p2c = cartesianAxisToCanvasCoords;\n        plot.getOptions = function() {\n            return options;\n        };\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.destroy = function() {\n            shutdown();\n            placeholder.removeData(\"plot\").empty();\n\n            series = [];\n            options = null;\n            surface = null;\n            overlay = null;\n            eventHolder = null;\n            ctx = null;\n            octx = null;\n            xaxes = [];\n            yaxes = [];\n            hooks = null;\n            plot = null;\n        };\n\n        plot.resize = function() {\n            var width = placeholder.width(),\n                height = placeholder.height();\n            surface.resize(width, height);\n            overlay.resize(width, height);\n\n            executeHooks(hooks.resize, [width, height]);\n        };\n\n        plot.clearTextCache = function () {\n            surface.clearCache();\n            overlay.clearCache();\n        };\n\n        plot.autoScaleAxis = autoScaleAxis;\n        plot.computeRangeForDataSeries = computeRangeForDataSeries;\n        plot.adjustSeriesDataRange = adjustSeriesDataRange;\n        plot.findNearbyItem = findNearbyItem;\n        plot.findNearbyItems = findNearbyItems;\n        plot.findNearbyInterpolationPoint = findNearbyInterpolationPoint;\n        plot.computeValuePrecision = computeValuePrecision;\n        plot.computeTickSize = computeTickSize;\n        plot.addEventHandler = addEventHandler;\n\n        // public attributes\n        plot.hooks = hooks;\n\n        // initialize\n        var MINOR_TICKS_COUNT_CONSTANT = $.plot.uiConstants.MINOR_TICKS_COUNT_CONSTANT;\n        var TICK_LENGTH_CONSTANT = $.plot.uiConstants.TICK_LENGTH_CONSTANT;\n        initPlugins(plot);\n        setupCanvases();\n        parseOptions(options_);\n        setData(data_);\n        setupGrid(true);\n        draw();\n        bindEvents();\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i) {\n                hook[i].apply(this, args);\n            }\n        }\n\n        function initPlugins() {\n            // References to key classes, allowing plugins to modify them\n\n            var classes = {\n                Canvas: Canvas\n            };\n\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot, classes);\n                if (p.options) {\n                    $.extend(true, options, p.options);\n                }\n            }\n        }\n\n        function parseOptions(opts) {\n            $.extend(true, options, opts);\n\n            // $.extend merges arrays, rather than replacing them.  When less\n            // colors are provided than the size of the default palette, we\n            // end up with those colors plus the remaining defaults, which is\n            // not expected behavior; avoid it by replacing them here.\n\n            if (opts && opts.colors) {\n                options.colors = opts.colors;\n            }\n\n            if (options.xaxis.color == null) {\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            }\n\n            if (options.yaxis.color == null) {\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            }\n\n            if (options.xaxis.tickColor == null) {\n                // grid.tickColor for back-compatibility\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n            }\n\n            if (options.yaxis.tickColor == null) {\n                // grid.tickColor for back-compatibility\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n            }\n\n            if (options.grid.borderColor == null) {\n                options.grid.borderColor = options.grid.color;\n            }\n\n            if (options.grid.tickColor == null) {\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            }\n\n            // Fill in defaults for axis options, including any unspecified\n            // font-spec fields, if a font-spec was provided.\n\n            // If no x/y axis options were provided, create one of each anyway,\n            // since the rest of the code assumes that they exist.\n\n            var i, axisOptions, axisCount,\n                fontSize = placeholder.css(\"font-size\"),\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n                fontDefaults = {\n                    style: placeholder.css(\"font-style\"),\n                    size: Math.round(0.8 * fontSizeDefault),\n                    variant: placeholder.css(\"font-variant\"),\n                    weight: placeholder.css(\"font-weight\"),\n                    family: placeholder.css(\"font-family\")\n                };\n\n            axisCount = options.xaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n                axisOptions = options.xaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n                options.xaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            axisCount = options.yaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n                axisOptions = options.yaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n                options.yaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i) {\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            }\n\n            for (i = 0; i < options.yaxes.length; ++i) {\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n            }\n\n            //process boxPosition options used for axis.box size\n            $.each(allAxes(), function(_, axis) {\n                axis.boxPosition = axis.options.boxPosition || {centerX: 0, centerY: 0};\n            });\n\n            // add hooks from options\n            for (var n in hooks) {\n                if (options.hooks[n] && options.hooks[n].length) {\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n                }\n            }\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            var oldseries = series;\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData(oldseries);\n        }\n\n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                } else {\n                    s.data = d[i];\n                }\n\n                res.push(s);\n            }\n\n            return res;\n        }\n\n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a === \"object\") {\n                // if we got a real axis, extract number\n                a = a.n;\n            }\n\n            if (typeof a !== \"number\") {\n                a = 1; // default to first axis\n            }\n\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return xaxes.concat(yaxes).filter(function(a) {\n                return a;\n            });\n        }\n\n        // canvas to axis for cartesian axes\n        function canvasToCartesianAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes\n            var res = {},\n                i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n                }\n            }\n\n            if (res.x1 !== undefined) {\n                res.x = res.x1;\n            }\n\n            if (res.y1 !== undefined) {\n                res.y = res.y1;\n            }\n\n            return res;\n        }\n\n        // axis to canvas for cartesian axes\n        function cartesianAxisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {},\n                i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n === 1) {\n                        key = \"x\";\n                    }\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n === 1) {\n                        key = \"y\";\n                    }\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1]) {\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes === xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes === xaxes ? options.xaxis : options.yaxis)\n                };\n            }\n\n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n            var neededColors = series.length,\n                maxIndex = -1,\n                i;\n\n            // Subtract the number of series that already have fixed colors or\n            // color indexes from the number that we still need to generate.\n\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    neededColors--;\n                    if (typeof sc === \"number\" && sc > maxIndex) {\n                        maxIndex = sc;\n                    }\n                }\n            }\n\n            // If any of the series have fixed color indexes, then we need to\n            // generate at least as many colors as the highest index.\n\n            if (neededColors <= maxIndex) {\n                neededColors = maxIndex + 1;\n            }\n\n            // Generate all the colors, using first the option colors and then\n            // variations on those colors once they're exhausted.\n\n            var c, colors = [],\n                colorPool = options.colors,\n                colorPoolSize = colorPool.length,\n                variation = 0,\n                definedColors = Math.max(0, series.length - neededColors);\n\n            for (i = 0; i < neededColors; i++) {\n                c = $.color.parse(colorPool[(definedColors + i) % colorPoolSize] || \"#666\");\n\n                // Each time we exhaust the colors in the pool we adjust\n                // a scaling factor used to produce more variations on\n                // those colors. The factor alternates negative/positive\n                // to produce lighter/darker colors.\n\n                // Reset the variation after every few cycles, or else\n                // it will end up producing only white or black colors.\n\n                if (i % colorPoolSize === 0 && i) {\n                    if (variation >= 0) {\n                        if (variation < 0.5) {\n                            variation = -variation - 0.2;\n                        } else variation = 0;\n                    } else variation = -variation;\n                }\n\n                colors[i] = c.scale('rgb', 1 + variation);\n            }\n\n            // Finalize the series options, filling in their colors\n\n            var colori = 0,\n                s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                } else if (typeof s.color === \"number\") {\n                    s.color = colors[s.color].toString();\n                }\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s) {\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    }\n\n                    if (show) {\n                        s.lines.show = true;\n                    }\n                }\n\n                // If nothing was provided for lines.zero, default it to match\n                // lines.fill, since areas by default should extend to zero.\n\n                if (s.lines.zero == null) {\n                    s.lines.zero = !!s.lines.fill;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n\n        function processData(prevSeries) {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                i, j, k, m,\n                s, points, ps, val, f, p,\n                data, format;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min !== -Infinity) {\n                    axis.datamin = min;\n                }\n\n                if (max > axis.datamax && max !== Infinity) {\n                    axis.datamax = max;\n                }\n            }\n\n            function reusePoints(prevSeries, i) {\n                if (prevSeries && prevSeries[i] && prevSeries[i].datapoints && prevSeries[i].datapoints.points) {\n                    return prevSeries[i].datapoints.points;\n                }\n\n                return [];\n            }\n\n            $.each(allAxes(), function(_, axis) {\n                // init axis\n                if (axis.options.growOnly !== true) {\n                    axis.datamin = topSentry;\n                    axis.datamax = bottomSentry;\n                } else {\n                    if (axis.datamin === undefined) {\n                        axis.datamin = topSentry;\n                    }\n                    if (axis.datamax === undefined) {\n                        axis.datamax = bottomSentry;\n                    }\n                }\n                axis.used = false;\n            });\n\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = {\n                    points: []\n                };\n\n                if (s.datapoints.points.length === 0) {\n                    s.datapoints.points = reusePoints(prevSeries, i);\n                }\n\n                executeHooks(hooks.processRawData, [s, s.data, s.datapoints]);\n            }\n\n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                data = s.data;\n                format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({\n                        x: true,\n                        y: false,\n                        number: true,\n                        required: true,\n                        computeRange: s.xaxis.options.autoScale !== 'none',\n                        defaultValue: null\n                    });\n\n                    format.push({\n                        x: false,\n                        y: true,\n                        number: true,\n                        required: true,\n                        computeRange: s.yaxis.options.autoScale !== 'none',\n                        defaultValue: null\n                    });\n\n                    if (s.stack || s.bars.show || (s.lines.show && s.lines.fill)) {\n                        var expectedPs = s.datapoints.pointsize != null ? s.datapoints.pointsize : (s.data && s.data[0] && s.data[0].length ? s.data[0].length : 3);\n                        if (expectedPs > 2) {\n                            format.push({\n                                x: s.bars.horizontal,\n                                y: !s.bars.horizontal,\n                                number: true,\n                                required: false,\n                                computeRange: s.yaxis.options.autoScale !== 'none',\n                                defaultValue: 0\n                            });\n                        }\n                    }\n\n                    s.datapoints.format = format;\n                }\n\n                s.xaxis.used = s.yaxis.used = true;\n\n                if (s.datapoints.pointsize != null) continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val)) {\n                                        val = null;\n                                    }\n                                }\n\n                                if (val == null) {\n                                    if (f.required) nullify = true;\n\n                                    if (f.defaultValue != null) val = f.defaultValue;\n                                }\n                            }\n\n                            points[k + m] = val;\n                        }\n                    }\n\n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.computeRange) {\n                                    if (f.x) {\n                                        updateAxis(s.xaxis, val, val);\n                                    }\n                                    if (f.y) {\n                                        updateAxis(s.yaxis, val, val);\n                                    }\n                                }\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n                }\n\n                points.length = k; //trims the internal buffer to the correct length\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                executeHooks(hooks.processDatapoints, [s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                format = s.datapoints.format;\n\n                if (format.every(function (f) { return !f.computeRange; })) {\n                    continue;\n                }\n\n                var range = plot.adjustSeriesDataRange(s,\n                    plot.computeRangeForDataSeries(s));\n\n                executeHooks(hooks.adjustSeriesDataRange, [s, range]);\n\n                updateAxis(s.xaxis, range.xmin, range.xmax);\n                updateAxis(s.yaxis, range.ymin, range.ymax);\n            }\n\n            $.each(allAxes(), function(_, axis) {\n                if (axis.datamin === topSentry) {\n                    axis.datamin = null;\n                }\n\n                if (axis.datamax === bottomSentry) {\n                    axis.datamax = null;\n                }\n            });\n        }\n\n        function setupCanvases() {\n            // Make sure the placeholder is clear of everything except canvases\n            // from a previous plot in this container that we'll try to re-use.\n\n            placeholder.css(\"padding\", 0) // padding messes up the positioning\n                .children().filter(function() {\n                    return !$(this).hasClass(\"flot-overlay\") && !$(this).hasClass('flot-base');\n                }).remove();\n\n            if (placeholder.css(\"position\") === 'static') {\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n            }\n\n            surface = new Canvas(\"flot-base\", placeholder[0]);\n            overlay = new Canvas(\"flot-overlay\", placeholder[0]); // overlay canvas for interactive features\n\n            ctx = surface.context;\n            octx = overlay.context;\n\n            // define which element we're listening for events on\n            eventHolder = $(overlay.element).unbind();\n\n            // If we're re-using a plot object, shut down the old one\n\n            var existing = placeholder.data(\"plot\");\n\n            if (existing) {\n                existing.shutdown();\n                overlay.clear();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function addEventHandler(event, handler, eventHolder, priority) {\n            var key = eventHolder + event;\n            var eventList = eventManager[key] || [];\n\n            eventList.push({\"event\": event, \"handler\": handler, \"eventHolder\": eventHolder, \"priority\": priority});\n            eventList.sort((a, b) => b.priority - a.priority);\n            eventList.forEach(eventData => {\n                eventData.eventHolder.unbind(eventData.event, eventData.handler);\n                eventData.eventHolder.bind(eventData.event, eventData.handler);\n            });\n\n            eventManager[key] = eventList;\n        }\n\n        function shutdown() {\n            if (redrawTimeout) {\n                clearTimeout(redrawTimeout);\n            }\n\n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n\n            function identity(x) {\n                return x;\n            }\n\n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n\n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction === \"x\") {\n                if (isFinite(t(axis.max) - t(axis.min))) {\n                    s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                } else {\n                    s = axis.scale = 1 / Math.abs($.plot.saturated.delta(t(axis.min), t(axis.max), plotWidth));\n                }\n                m = Math.min(t(axis.max), t(axis.min));\n            } else {\n                if (isFinite(t(axis.max) - t(axis.min))) {\n                    s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                } else {\n                    s = axis.scale = 1 / Math.abs($.plot.saturated.delta(t(axis.min), t(axis.max), plotHeight));\n                }\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t === identity) {\n                // slight optimization\n                axis.p2c = function(p) {\n                    if (isFinite(p - m)) {\n                        return (p - m) * s;\n                    } else {\n                        return (p / 4 - m / 4) * s * 4;\n                    }\n                };\n            } else {\n                axis.p2c = function(p) {\n                    var tp = t(p);\n\n                    if (isFinite(tp - m)) {\n                        return (tp - m) * s;\n                    } else {\n                        return (tp / 4 - m / 4) * s * 4;\n                    }\n                };\n            }\n\n            // canvas coordinate to data point\n            if (!it) {\n                axis.c2p = function(c) {\n                    return m + c / s;\n                };\n            } else {\n                axis.c2p = function(c) {\n                    return it(m + c / s);\n                };\n            }\n        }\n\n        function measureTickLabels(axis) {\n            var opts = axis.options,\n                ticks = opts.showTickLabels !== 'none' && axis.ticks ? axis.ticks : [],\n                showMajorTickLabels = opts.showTickLabels === 'major' || opts.showTickLabels === 'all',\n                showEndpointsTickLabels = opts.showTickLabels === 'endpoints' || opts.showTickLabels === 'all',\n                labelWidth = opts.labelWidth || 0,\n                labelHeight = opts.labelHeight || 0,\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                font = opts.font || \"flot-tick-label tickLabel\";\n\n            for (var i = 0; i < ticks.length; ++i) {\n                var t = ticks[i];\n                var label = t.label;\n\n                if (!t.label ||\n                    (showMajorTickLabels === false && i > 0 && i < ticks.length - 1) ||\n                    (showEndpointsTickLabels === false && (i === 0 || i === ticks.length - 1))) {\n                    continue;\n                }\n\n                if (typeof t.label === 'object') {\n                    label = t.label.name;\n                }\n\n                var info = surface.getTextInfo(layer, label, font);\n\n                labelWidth = Math.max(labelWidth, info.width);\n                labelHeight = Math.max(labelHeight, info.height);\n            }\n\n            axis.labelWidth = opts.labelWidth || labelWidth;\n            axis.labelHeight = opts.labelHeight || labelHeight;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset; this first phase only looks at one\n            // dimension per axis, the other dimension depends on the\n            // other axes so will have to wait\n\n            // here reserve additional space\n            executeHooks(hooks.axisReserveSpace, [axis]);\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                isXAxis = axis.direction === \"x\",\n                tickLength = axis.options.tickLength,\n                showTicks = axis.options.showTicks,\n                showMinorTicks = axis.options.showMinorTicks,\n                gridLines = axis.options.gridLines,\n                axisMargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                innermost = true,\n                outermost = true,\n                found = false;\n\n            // Determine the axis's position in its direction and on its side\n\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n                if (a && (a.show || a.reserveSpace)) {\n                    if (a === axis) {\n                        found = true;\n                    } else if (a.options.position === pos) {\n                        if (found) {\n                            outermost = false;\n                        } else {\n                            innermost = false;\n                        }\n                    }\n                }\n            });\n\n            // The outermost axis on each side has no margin\n            if (outermost) {\n                axisMargin = 0;\n            }\n\n            // Set the default tickLength if necessary\n            if (tickLength == null) {\n                tickLength = TICK_LENGTH_CONSTANT;\n            }\n\n            // By default, major tick marks are visible\n            if (showTicks == null) {\n                showTicks = true;\n            }\n\n            // By default, minor tick marks are visible\n            if (showMinorTicks == null) {\n                showMinorTicks = true;\n            }\n\n            // By default, grid lines are visible\n            if (gridLines == null) {\n                if (innermost) {\n                    gridLines = true;\n                } else {\n                    gridLines = false;\n                }\n            }\n\n            if (!isNaN(+tickLength)) {\n                padding += showTicks ? +tickLength : 0;\n            }\n\n            if (isXAxis) {\n                lh += padding;\n\n                if (pos === \"bottom\") {\n                    plotOffset.bottom += lh + axisMargin;\n                    axis.box = {\n                        top: surface.height - plotOffset.bottom,\n                        height: lh\n                    };\n                } else {\n                    axis.box = {\n                        top: plotOffset.top + axisMargin,\n                        height: lh\n                    };\n                    plotOffset.top += lh + axisMargin;\n                }\n            } else {\n                lw += padding;\n\n                if (pos === \"left\") {\n                    axis.box = {\n                        left: plotOffset.left + axisMargin,\n                        width: lw\n                    };\n                    plotOffset.left += lw + axisMargin;\n                } else {\n                    plotOffset.right += lw + axisMargin;\n                    axis.box = {\n                        left: surface.width - plotOffset.right,\n                        width: lw\n                    };\n                }\n            }\n\n            // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.showMinorTicks = showMinorTicks;\n            axis.showTicks = showTicks;\n            axis.gridLines = gridLines;\n            axis.box.padding = padding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // now that all axis boxes have been placed in one\n            // dimension, we can set the remaining dimension coordinates\n            if (axis.direction === \"x\") {\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n            } else {\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n            }\n        }\n\n        function adjustLayoutForThingsStickingOut() {\n            // possibly adjust plot offset to ensure everything stays\n            // inside the canvas and isn't clipped off\n\n            var minMargin = options.grid.minBorderMargin,\n                i;\n\n            // check stuff from the plot (FIXME: this should just read\n            // a value from the series, otherwise it's impossible to\n            // customize)\n            if (minMargin == null) {\n                minMargin = 0;\n                for (i = 0; i < series.length; ++i) {\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth / 2));\n                }\n            }\n\n            var a, offset = {},\n                margins = {\n                    left: minMargin,\n                    right: minMargin,\n                    top: minMargin,\n                    bottom: minMargin\n                };\n\n            // check axis labels, note we don't check the actual\n            // labels but instead use the overall width/height to not\n            // jump as much around with replots\n            $.each(allAxes(), function(_, axis) {\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n                    if (axis.direction === \"x\") {\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n                    } else {\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n                    }\n                }\n            });\n\n            for (a in margins) {\n                offset[a] = margins[a] - plotOffset[a];\n            }\n            $.each(xaxes.concat(yaxes), function(_, axis) {\n                alignAxisWithGrid(axis, offset, function (offset) {\n                    return offset > 0;\n                });\n            });\n\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n        }\n\n        function alignAxisWithGrid(axis, offset, isValid) {\n            if (axis.direction === \"x\") {\n                if (axis.position === \"bottom\" && isValid(offset.bottom)) {\n                    axis.box.top -= Math.ceil(offset.bottom);\n                }\n                if (axis.position === \"top\" && isValid(offset.top)) {\n                    axis.box.top += Math.ceil(offset.top);\n                }\n            } else {\n                if (axis.position === \"left\" && isValid(offset.left)) {\n                    axis.box.left += Math.ceil(offset.left);\n                }\n                if (axis.position === \"right\" && isValid(offset.right)) {\n                    axis.box.left -= Math.ceil(offset.right);\n                }\n            }\n        }\n\n        function setupGrid(autoScale) {\n            var i, a, axes = allAxes(),\n                showGrid = options.grid.show;\n\n            // Initialize the plot's offset from the edge of the canvas\n\n            for (a in plotOffset) {\n                plotOffset[a] = 0;\n            }\n\n            executeHooks(hooks.processOffset, [plotOffset]);\n\n            // If the grid is visible, add its border width to the offset\n            for (a in plotOffset) {\n                if (typeof (options.grid.borderWidth) === \"object\") {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n                } else {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n                }\n            }\n\n            $.each(axes, function(_, axis) {\n                var axisOpts = axis.options;\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n                setupTickFormatter(axis);\n                executeHooks(hooks.setRange, [axis, autoScale]);\n                setRange(axis, autoScale);\n            });\n\n            if (showGrid) {\n                plotWidth = surface.width - plotOffset.left - plotOffset.right;\n                plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n                var allocatedAxes = $.grep(axes, function(axis) {\n                    return axis.show || axis.reserveSpace;\n                });\n\n                $.each(allocatedAxes, function(_, axis) {\n                    // make the ticks\n                    setupTickGeneration(axis);\n                    setMajorTicks(axis);\n                    snapRangeToTicks(axis, axis.ticks, series);\n\n                    //for computing the endpoints precision, transformationHelpers are needed\n                    setTransformationHelpers(axis);\n                    setEndpointTicks(axis, series);\n\n                    // find labelWidth/Height for axis\n                    measureTickLabels(axis);\n                });\n\n                // with all dimensions calculated, we can compute the\n                // axis bounding boxes, start from the outside\n                // (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i) {\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n                }\n\n                // make sure we've got enough space for things that\n                // might stick out\n                adjustLayoutForThingsStickingOut();\n\n                $.each(allocatedAxes, function(_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n            }\n\n            //adjust axis and plotOffset according to grid.margins\n            if (options.grid.margin) {\n                for (a in plotOffset) {\n                    var margin = options.grid.margin || 0;\n                    plotOffset[a] += typeof margin === \"number\" ? margin : (margin[a] || 0);\n                }\n                $.each(xaxes.concat(yaxes), function(_, axis) {\n                    alignAxisWithGrid(axis, options.grid.margin, function(offset) {\n                        return offset !== undefined && offset !== null;\n                    });\n                });\n            }\n\n            //after adjusting the axis, plot width and height will be modified\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plot dimensions, we can compute the scaling\n            $.each(axes, function(_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (showGrid) {\n                drawAxisLabels();\n            }\n\n            executeHooks(hooks.setupGrid, []);\n        }\n\n        function widenMinMax(minimum, maximum) {\n            var min = (minimum === undefined ? null : minimum);\n            var max = (maximum === undefined ? null : maximum);\n            var delta = max - min;\n            if (delta === 0.0) {\n                // degenerate case\n                var widen = max === 0 ? 1 : 0.01;\n                var wmin = null;\n                if (min == null) {\n                    wmin -= widen;\n                }\n\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (max == null || min != null) {\n                    max += widen;\n                }\n\n                if (wmin != null) {\n                    min = wmin;\n                }\n            }\n\n            return {\n                min: min,\n                max: max\n            };\n        }\n\n        function autoScaleAxis(axis) {\n            var opts = axis.options,\n                min = opts.min,\n                max = opts.max,\n                datamin = axis.datamin,\n                datamax = axis.datamax,\n                delta;\n\n            switch (opts.autoScale) {\n                case \"none\":\n                    min = +(opts.min != null ? opts.min : datamin);\n                    max = +(opts.max != null ? opts.max : datamax);\n                    break;\n                case \"loose\":\n                    if (datamin != null && datamax != null) {\n                        min = datamin;\n                        max = datamax;\n                        delta = $.plot.saturated.saturate(max - min);\n                        var margin = ((typeof opts.autoScaleMargin === 'number') ? opts.autoScaleMargin : 0.02);\n                        min = $.plot.saturated.saturate(min - delta * margin);\n                        max = $.plot.saturated.saturate(max + delta * margin);\n\n                        // make sure we don't go below zero if all values are positive\n                        if (min < 0 && datamin >= 0) {\n                            min = 0;\n                        }\n                    } else {\n                        min = opts.min;\n                        max = opts.max;\n                    }\n                    break;\n                case \"exact\":\n                    min = (datamin != null ? datamin : opts.min);\n                    max = (datamax != null ? datamax : opts.max);\n                    break;\n                case \"sliding-window\":\n                    if (datamax > max) {\n                        // move the window to fit the new data,\n                        // keeping the axis range constant\n                        max = datamax;\n                        min = Math.max(datamax - (opts.windowSize || 100), min);\n                    }\n                    break;\n            }\n\n            var widenedMinMax = widenMinMax(min, max);\n            min = widenedMinMax.min;\n            max = widenedMinMax.max;\n\n            // grow loose or grow exact supported\n            if (opts.growOnly === true && opts.autoScale !== \"none\" && opts.autoScale !== \"sliding-window\") {\n                min = (min < datamin) ? min : (datamin !== null ? datamin : min);\n                max = (max > datamax) ? max : (datamax !== null ? datamax : max);\n            }\n\n            axis.autoScaledMin = min;\n            axis.autoScaledMax = max;\n        }\n\n        function setRange(axis, autoScale) {\n            var min = typeof axis.options.min === 'number' ? axis.options.min : axis.min,\n                max = typeof axis.options.max === 'number' ? axis.options.max : axis.max,\n                plotOffset = axis.options.offset;\n\n            if (autoScale) {\n                autoScaleAxis(axis);\n                min = axis.autoScaledMin;\n                max = axis.autoScaledMax;\n            }\n\n            min = (min != null ? min : -1) + (plotOffset.below || 0);\n            max = (max != null ? max : 1) + (plotOffset.above || 0);\n\n            if (min > max) {\n                var tmp = min;\n                min = max;\n                max = tmp;\n                axis.options.offset = { above: 0, below: 0 };\n            }\n\n            axis.min = $.plot.saturated.saturate(min);\n            axis.max = $.plot.saturated.saturate(max);\n        }\n\n        function computeValuePrecision (min, max, direction, ticks, tickDecimals) {\n            var noTicks = fixupNumberOfTicks(direction, surface, ticks);\n\n            var delta = $.plot.saturated.delta(min, max, noTicks),\n                dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n            //if it is called with tickDecimals, then the precision should not be greather then that\n            if (tickDecimals && dec > tickDecimals) {\n                dec = tickDecimals;\n            }\n\n            var magn = parseFloat('1e' + (-dec)),\n                norm = delta / magn;\n\n            if (norm > 2.25 && norm < 3 && (tickDecimals == null || (dec + 1) <= tickDecimals)) {\n                //we need an extra decimals when tickSize is 2.5\n                ++dec;\n            }\n\n            return isFinite(dec) ? dec : 0;\n        };\n\n        function computeTickSize (min, max, noTicks, tickDecimals) {\n            var delta = $.plot.saturated.delta(min, max, noTicks),\n                dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n            //if it is called with tickDecimals, then the precision should not be greather then that\n            if (tickDecimals && dec > tickDecimals) {\n                dec = tickDecimals;\n            }\n\n            var magn = parseFloat('1e' + (-dec)),\n                norm = delta / magn, // norm is between 1.0 and 10.0\n                size;\n\n            if (norm < 1.5) {\n                size = 1;\n            } else if (norm < 3) {\n                size = 2;\n                if (norm > 2.25 && (tickDecimals == null || (dec + 1) <= tickDecimals)) {\n                    size = 2.5;\n                }\n            } else if (norm < 7.5) {\n                size = 5;\n            } else {\n                size = 10;\n            }\n\n            size *= magn;\n            return size;\n        }\n\n        function getAxisTickSize(min, max, direction, options, tickDecimals) {\n            var noTicks;\n\n            if (typeof options.ticks === \"number\" && options.ticks > 0) {\n                noTicks = options.ticks;\n            } else {\n            // heuristic based on the model a*sqrt(x) fitted to\n            // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(direction === \"x\" ? surface.width : surface.height);\n            }\n\n            var size = computeTickSize(min, max, noTicks, tickDecimals);\n\n            if (options.minTickSize != null && size < options.minTickSize) {\n                size = options.minTickSize;\n            }\n\n            return options.tickSize || size;\n        };\n\n        function fixupNumberOfTicks(direction, surface, ticksOption) {\n            var noTicks;\n\n            if (typeof ticksOption === \"number\" && ticksOption > 0) {\n                noTicks = ticksOption;\n            } else {\n                noTicks = 0.3 * Math.sqrt(direction === \"x\" ? surface.width : surface.height);\n            }\n\n            return noTicks;\n        }\n\n        function setupTickFormatter(axis) {\n            var opts = axis.options;\n            if (!axis.tickFormatter) {\n                if (typeof opts.tickFormatter === 'function') {\n                    axis.tickFormatter = function() {\n                        var args = Array.prototype.slice.call(arguments);\n                        return \"\" + opts.tickFormatter.apply(null, args);\n                    };\n                } else {\n                    axis.tickFormatter = defaultTickFormatter;\n                }\n            }\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n            var noTicks;\n\n            noTicks = fixupNumberOfTicks(axis.direction, surface, opts.ticks);\n\n            axis.delta = $.plot.saturated.delta(axis.min, axis.max, noTicks);\n            var precision = plot.computeValuePrecision(axis.min, axis.max, axis.direction, noTicks, opts.tickDecimals);\n\n            axis.tickDecimals = Math.max(0, opts.tickDecimals != null ? opts.tickDecimals : precision);\n            axis.tickSize = getAxisTickSize(axis.min, axis.max, axis.direction, opts, opts.tickDecimals);\n\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n            // like flot.time.js.\n\n            if (!axis.tickGenerator) {\n                if (typeof opts.tickGenerator === 'function') {\n                    axis.tickGenerator = opts.tickGenerator;\n                } else {\n                    axis.tickGenerator = defaultTickGenerator;\n                }\n            }\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction === \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis !== axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = axis.tickGenerator(axis, plot);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null) {\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        }\n\n                        if (opts.max == null && niceTicks.length > 1) {\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                        }\n                    }\n\n                    axis.tickGenerator = function(axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [],\n                            v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n\n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (!axis.mode && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n                            ts = axis.tickGenerator(axis, plot);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec)))) {\n                            axis.tickDecimals = extraDec;\n                        }\n                    }\n                }\n            }\n        }\n\n        function setMajorTicks(axis) {\n            var oticks = axis.options.ticks,\n                ticks = [];\n            if (oticks == null || (typeof oticks === \"number\" && oticks > 0)) {\n                ticks = axis.tickGenerator(axis, plot);\n            } else if (oticks) {\n                if ($.isFunction(oticks)) {\n                // generate the ticks\n                    ticks = oticks(axis);\n                } else {\n                    ticks = oticks;\n                }\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t === \"object\") {\n                    v = +t[0];\n                    if (t.length > 1) {\n                        label = t[1];\n                    }\n                } else {\n                    v = +t;\n                }\n\n                if (!isNaN(v)) {\n                    axis.ticks.push(\n                        newTick(v, label, axis, 'major'));\n                }\n            }\n        }\n\n        function newTick(v, label, axis, type) {\n            if (label === null) {\n                switch (type) {\n                    case 'min':\n                    case 'max':\n                        //improving the precision of endpoints\n                        var precision = getEndpointPrecision(v, axis);\n                        label = isFinite(precision) ? axis.tickFormatter(v, axis, precision, plot) : axis.tickFormatter(v, axis, precision, plot);\n                        break;\n                    case 'major':\n                        label = axis.tickFormatter(v, axis, undefined, plot);\n                }\n            }\n            return {\n                v: v,\n                label: label\n            };\n        }\n\n        function snapRangeToTicks(axis, ticks, series) {\n            var anyDataInSeries = function(series) {\n                return series.some(e => e.datapoints.points.length > 0);\n            }\n\n            if (axis.options.autoScale === \"loose\" && ticks.length > 0 && anyDataInSeries(series)) {\n                // snap to ticks\n                axis.min = Math.min(axis.min, ticks[0].v);\n                axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n            }\n        }\n\n        function getEndpointPrecision(value, axis) {\n            var canvas1 = Math.floor(axis.p2c(value)),\n                canvas2 = axis.direction === \"x\" ? canvas1 + 1 : canvas1 - 1,\n                point1 = axis.c2p(canvas1),\n                point2 = axis.c2p(canvas2),\n                precision = computeValuePrecision(point1, point2, axis.direction, 1);\n\n            return precision;\n        }\n\n        function setEndpointTicks(axis, series) {\n            if (isValidEndpointTick(axis, series)) {\n                axis.ticks.unshift(newTick(axis.min, null, axis, 'min'));\n                axis.ticks.push(newTick(axis.max, null, axis, 'max'));\n            }\n        }\n\n        function isValidEndpointTick(axis, series) {\n            if (axis.options.showTickLabels === 'endpoints') {\n                return true;\n            }\n            if (axis.options.showTickLabels === 'all') {\n                var associatedSeries = series.filter(function(s) {\n                        return s.bars.horizontal ? s.yaxis === axis : s.xaxis === axis;\n                    }),\n                    notAllBarSeries = associatedSeries.some(function(s) {\n                        return !s.bars.show;\n                    });\n                return associatedSeries.length === 0 || notAllBarSeries;\n            }\n            if (axis.options.showTickLabels === 'major' || axis.options.showTickLabels === 'none') {\n                return false;\n            }\n        }\n\n        function draw() {\n            surface.clear();\n            executeHooks(hooks.drawBackground, [ctx]);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor) {\n                drawBackground();\n            }\n\n            if (grid.show && !grid.aboveData) {\n                drawGrid();\n            }\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i], i, getColorOrGradient]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n\n            if (grid.show && grid.aboveData) {\n                drawGrid();\n            }\n\n            surface.render();\n\n            // A draw implies that either the axes or data have changed, so we\n            // should probably update the overlay highlights as well.\n            triggerRedrawOverlay();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (var i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction === coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n === 1) {\n                        // support x1axis as xaxis\n                        key = coord + \"axis\";\n                    }\n\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord === \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return {\n                from: from,\n                to: to,\n                axis: axis\n            };\n        }\n\n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawMarkings() {\n            // draw markings\n            var markings = options.grid.markings,\n                axes;\n\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n\n                    markings = markings(axes);\n                }\n\n                var i;\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null) {\n                        xrange.from = xrange.axis.min;\n                    }\n\n                    if (xrange.to == null) {\n                        xrange.to = xrange.axis.max;\n                    }\n\n                    if (yrange.from == null) {\n                        yrange.from = yrange.axis.min;\n                    }\n\n                    if (yrange.to == null) {\n                        yrange.to = yrange.axis.max;\n                    }\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max) {\n                        continue;\n                    }\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    var xequal = xrange.from === xrange.to,\n                        yequal = yrange.from === yrange.to;\n\n                    if (xequal && yequal) {\n                        continue;\n                    }\n\n                    // then draw\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\n                    if (xequal || yequal) {\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = lineWidth;\n                        if (xequal) {\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n                        } else {\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);\n                        }\n                        ctx.stroke();\n                    } else {\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                            xrange.to - xrange.from,\n                            yrange.from - yrange.to);\n                    }\n                }\n            }\n        }\n\n        function findEdges(axis) {\n            var box = axis.box,\n                x = 0,\n                y = 0;\n\n            // find the edges\n            if (axis.direction === \"x\") {\n                x = 0;\n                y = box.top - plotOffset.top + (axis.position === \"top\" ? box.height : 0);\n            } else {\n                y = 0;\n                x = box.left - plotOffset.left + (axis.position === \"left\" ? box.width : 0) + axis.boxPosition.centerX;\n            }\n\n            return {\n                x: x,\n                y: y\n            };\n        };\n\n        function alignPosition(lineWidth, pos) {\n            return ((lineWidth % 2) !== 0) ? Math.floor(pos) + 0.5 : pos;\n        };\n\n        function drawTickBar(axis) {\n            ctx.lineWidth = 1;\n            var edges = findEdges(axis),\n                x = edges.x,\n                y = edges.y;\n\n            // draw tick bar\n            if (axis.show) {\n                var xoff = 0,\n                    yoff = 0;\n\n                ctx.strokeStyle = axis.options.color;\n                ctx.beginPath();\n                if (axis.direction === \"x\") {\n                    xoff = plotWidth + 1;\n                } else {\n                    yoff = plotHeight + 1;\n                }\n\n                if (axis.direction === \"x\") {\n                    y = alignPosition(ctx.lineWidth, y);\n                } else {\n                    x = alignPosition(ctx.lineWidth, x);\n                }\n\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + xoff, y + yoff);\n                ctx.stroke();\n            }\n        };\n\n        function drawTickMarks(axis) {\n            var t = axis.tickLength,\n                minorTicks = axis.showMinorTicks,\n                minorTicksNr = MINOR_TICKS_COUNT_CONSTANT,\n                edges = findEdges(axis),\n                x = edges.x,\n                y = edges.y,\n                i = 0;\n\n            // draw major tick marks\n            ctx.strokeStyle = axis.options.color;\n            ctx.beginPath();\n\n            for (i = 0; i < axis.ticks.length; ++i) {\n                var v = axis.ticks[i].v,\n                    xoff = 0,\n                    yoff = 0,\n                    xminor = 0,\n                    yminor = 0,\n                    j;\n\n                if (!isNaN(v) && v >= axis.min && v <= axis.max) {\n                    if (axis.direction === \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t;\n\n                        if (axis.position === \"top\") {\n                            yoff = -yoff;\n                        }\n                    } else {\n                        y = axis.p2c(v);\n                        xoff = t;\n\n                        if (axis.position === \"left\") {\n                            xoff = -xoff;\n                        }\n                    }\n\n                    if (axis.direction === \"x\") {\n                        x = alignPosition(ctx.lineWidth, x);\n                    } else {\n                        y = alignPosition(ctx.lineWidth, y);\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n\n                //draw minor tick marks\n                if (minorTicks === true && i < axis.ticks.length - 1) {\n                    var v1 = axis.ticks[i].v,\n                        v2 = axis.ticks[i + 1].v,\n                        step = (v2 - v1) / (minorTicksNr + 1);\n\n                    for (j = 1; j <= minorTicksNr; j++) {\n                        // compute minor tick position\n                        if (axis.direction === \"x\") {\n                            yminor = t / 2; // minor ticks are half length\n                            x = alignPosition(ctx.lineWidth, axis.p2c(v1 + j * step))\n\n                            if (axis.position === \"top\") {\n                                yminor = -yminor;\n                            }\n\n                            // don't go over the plot borders\n                            if ((x < 0) || (x > plotWidth)) {\n                                continue;\n                            }\n                        } else {\n                            xminor = t / 2; // minor ticks are half length\n                            y = alignPosition(ctx.lineWidth, axis.p2c(v1 + j * step));\n\n                            if (axis.position === \"left\") {\n                                xminor = -xminor;\n                            }\n\n                            // don't go over the plot borders\n                            if ((y < 0) || (y > plotHeight)) {\n                                continue;\n                            }\n                        }\n\n                        ctx.moveTo(x, y);\n                        ctx.lineTo(x + xminor, y + yminor);\n                    }\n                }\n            }\n\n            ctx.stroke();\n        };\n\n        function drawGridLines(axis) {\n            // check if the line will be overlapped with a border\n            var overlappedWithBorder = function (value) {\n                var bw = options.grid.borderWidth;\n                return (((typeof bw === \"object\" && bw[axis.position] > 0) || bw > 0) && (value === axis.min || value === axis.max));\n            };\n\n            ctx.strokeStyle = options.grid.tickColor;\n            ctx.beginPath();\n            var i;\n            for (i = 0; i < axis.ticks.length; ++i) {\n                var v = axis.ticks[i].v,\n                    xoff = 0,\n                    yoff = 0,\n                    x = 0,\n                    y = 0;\n\n                if (isNaN(v) || v < axis.min || v > axis.max) continue;\n\n                // skip those lying on the axes if we got a border\n                if (overlappedWithBorder(v)) continue;\n\n                if (axis.direction === \"x\") {\n                    x = axis.p2c(v);\n                    y = plotHeight;\n                    yoff = -plotHeight;\n                } else {\n                    x = 0;\n                    y = axis.p2c(v);\n                    xoff = plotWidth;\n                }\n\n                if (axis.direction === \"x\") {\n                    x = alignPosition(ctx.lineWidth, x);\n                } else {\n                    y = alignPosition(ctx.lineWidth, y);\n                }\n\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + xoff, y + yoff);\n            }\n\n            ctx.stroke();\n        };\n\n        function drawBorder() {\n            // If either borderWidth or borderColor is an object, then draw the border\n            // line by line instead of as one rectangle\n            var bw = options.grid.borderWidth,\n                bc = options.grid.borderColor;\n\n            if (typeof bw === \"object\" || typeof bc === \"object\") {\n                if (typeof bw !== \"object\") {\n                    bw = {\n                        top: bw,\n                        right: bw,\n                        bottom: bw,\n                        left: bw\n                    };\n                }\n                if (typeof bc !== \"object\") {\n                    bc = {\n                        top: bc,\n                        right: bc,\n                        bottom: bc,\n                        left: bc\n                    };\n                }\n\n                if (bw.top > 0) {\n                    ctx.strokeStyle = bc.top;\n                    ctx.lineWidth = bw.top;\n                    ctx.beginPath();\n                    ctx.moveTo(0 - bw.left, 0 - bw.top / 2);\n                    ctx.lineTo(plotWidth, 0 - bw.top / 2);\n                    ctx.stroke();\n                }\n\n                if (bw.right > 0) {\n                    ctx.strokeStyle = bc.right;\n                    ctx.lineWidth = bw.right;\n                    ctx.beginPath();\n                    ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n                    ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n                    ctx.stroke();\n                }\n\n                if (bw.bottom > 0) {\n                    ctx.strokeStyle = bc.bottom;\n                    ctx.lineWidth = bw.bottom;\n                    ctx.beginPath();\n                    ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n                    ctx.lineTo(0, plotHeight + bw.bottom / 2);\n                    ctx.stroke();\n                }\n\n                if (bw.left > 0) {\n                    ctx.strokeStyle = bc.left;\n                    ctx.lineWidth = bw.left;\n                    ctx.beginPath();\n                    ctx.moveTo(0 - bw.left / 2, plotHeight + bw.bottom);\n                    ctx.lineTo(0 - bw.left / 2, 0);\n                    ctx.stroke();\n                }\n            } else {\n                ctx.lineWidth = bw;\n                ctx.strokeStyle = options.grid.borderColor;\n                ctx.strokeRect(-bw / 2, -bw / 2, plotWidth + bw, plotHeight + bw);\n            }\n        };\n\n        function drawGrid() {\n            var axes, bw;\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            drawMarkings();\n\n            axes = allAxes();\n            bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j];\n\n                if (!axis.show) {\n                    continue;\n                }\n\n                drawTickBar(axis);\n                if (axis.showTicks === true) {\n                    drawTickMarks(axis);\n                }\n\n                if (axis.gridLines === true) {\n                    drawGridLines(axis, bw);\n                }\n            }\n\n            // draw border\n            if (bw) {\n                drawBorder();\n            }\n\n            ctx.restore();\n        }\n\n        function drawAxisLabels() {\n            $.each(allAxes(), function(_, axis) {\n                var box = axis.box,\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\n                    i, x, y, halign, valign, info,\n                    margin = 3,\n                    nullBox = {x: NaN, y: NaN, width: NaN, height: NaN}, newLabelBox, labelBoxes = [],\n                    overlapping = function(x11, y11, x12, y12, x21, y21, x22, y22) {\n                        return ((x11 <= x21 && x21 <= x12) || (x21 <= x11 && x11 <= x22)) &&\n                               ((y11 <= y21 && y21 <= y12) || (y21 <= y11 && y11 <= y22));\n                    },\n                    overlapsOtherLabels = function(newLabelBox, previousLabelBoxes) {\n                        return previousLabelBoxes.some(function(labelBox) {\n                            return overlapping(\n                                newLabelBox.x, newLabelBox.y, newLabelBox.x + newLabelBox.width, newLabelBox.y + newLabelBox.height,\n                                labelBox.x, labelBox.y, labelBox.x + labelBox.width, labelBox.y + labelBox.height);\n                        });\n                    },\n                    drawAxisLabel = function (tick, labelBoxes) {\n                        if (!tick || !tick.label || tick.v < axis.min || tick.v > axis.max) {\n                            return nullBox;\n                        }\n\n                        info = surface.getTextInfo(layer, tick.label, font);\n\n                        if (axis.direction === \"x\") {\n                            halign = \"center\";\n                            x = plotOffset.left + axis.p2c(tick.v);\n                            if (axis.position === \"bottom\") {\n                                y = box.top + box.padding - axis.boxPosition.centerY;\n                            } else {\n                                y = box.top + box.height - box.padding + axis.boxPosition.centerY;\n                                valign = \"bottom\";\n                            }\n                            newLabelBox = {x: x - info.width / 2 - margin, y: y - margin, width: info.width + 2 * margin, height: info.height + 2 * margin};\n                        } else {\n                            valign = \"middle\";\n                            y = plotOffset.top + axis.p2c(tick.v);\n                            if (axis.position === \"left\") {\n                                x = box.left + box.width - box.padding - axis.boxPosition.centerX;\n                                halign = \"right\";\n                            } else {\n                                x = box.left + box.padding + axis.boxPosition.centerX;\n                            }\n                            newLabelBox = {x: x - info.width / 2 - margin, y: y - margin, width: info.width + 2 * margin, height: info.height + 2 * margin};\n                        }\n\n                        if (overlapsOtherLabels(newLabelBox, labelBoxes)) {\n                            return nullBox;\n                        }\n\n                        surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n\n                        return newLabelBox;\n                    };\n\n                // Remove text before checking for axis.show and ticks.length;\n                // otherwise plugins, like flot-tickrotor, that draw their own\n                // tick labels will end up with both theirs and the defaults.\n\n                surface.removeText(layer);\n\n                executeHooks(hooks.drawAxis, [axis, surface]);\n\n                if (!axis.show) {\n                    return;\n                }\n\n                switch (axis.options.showTickLabels) {\n                    case 'none':\n                        break;\n                    case 'endpoints':\n                        labelBoxes.push(drawAxisLabel(axis.ticks[0], labelBoxes));\n                        labelBoxes.push(drawAxisLabel(axis.ticks[axis.ticks.length - 1], labelBoxes));\n                        break;\n                    case 'major':\n                        labelBoxes.push(drawAxisLabel(axis.ticks[0], labelBoxes));\n                        labelBoxes.push(drawAxisLabel(axis.ticks[axis.ticks.length - 1], labelBoxes));\n                        for (i = 1; i < axis.ticks.length - 1; ++i) {\n                            labelBoxes.push(drawAxisLabel(axis.ticks[i], labelBoxes));\n                        }\n                        break;\n                    case 'all':\n                        labelBoxes.push(drawAxisLabel(axis.ticks[0], []));\n                        labelBoxes.push(drawAxisLabel(axis.ticks[axis.ticks.length - 1], labelBoxes));\n                        for (i = 1; i < axis.ticks.length - 1; ++i) {\n                            labelBoxes.push(drawAxisLabel(axis.ticks[i], labelBoxes));\n                        }\n                        break;\n                }\n            });\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show) {\n                $.plot.drawSeries.drawSeriesLines(series, ctx, plotOffset, plotWidth, plotHeight, plot.drawSymbol, getColorOrGradient);\n            }\n\n            if (series.bars.show) {\n                $.plot.drawSeries.drawSeriesBars(series, ctx, plotOffset, plotWidth, plotHeight, plot.drawSymbol, getColorOrGradient);\n            }\n\n            if (series.points.show) {\n                $.plot.drawSeries.drawSeriesPoints(series, ctx, plotOffset, plotWidth, plotHeight, plot.drawSymbol, getColorOrGradient);\n            }\n        }\n\n        function computeRangeForDataSeries(series, force, isValid) {\n            var points = series.datapoints.points,\n                ps = series.datapoints.pointsize,\n                format = series.datapoints.format,\n                topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                range = {\n                    xmin: topSentry,\n                    ymin: topSentry,\n                    xmax: bottomSentry,\n                    ymax: bottomSentry\n                };\n\n            for (var j = 0; j < points.length; j += ps) {\n                if (points[j] === null) {\n                    continue;\n                }\n\n                if (typeof (isValid) === 'function' && !isValid(points[j])) {\n                    continue;\n                }\n\n                for (var m = 0; m < ps; ++m) {\n                    var val = points[j + m],\n                        f = format[m];\n                    if (f === null || f === undefined) {\n                        continue;\n                    }\n\n                    if (typeof (isValid) === 'function' && !isValid(val)) {\n                        continue;\n                    }\n\n                    if ((!force && !f.computeRange) || val === Infinity || val === -Infinity) {\n                        continue;\n                    }\n\n                    if (f.x === true) {\n                        if (val < range.xmin) {\n                            range.xmin = val;\n                        }\n\n                        if (val > range.xmax) {\n                            range.xmax = val;\n                        }\n                    }\n\n                    if (f.y === true) {\n                        if (val < range.ymin) {\n                            range.ymin = val;\n                        }\n\n                        if (val > range.ymax) {\n                            range.ymax = val;\n                        }\n                    }\n                }\n            }\n\n            return range;\n        };\n\n        function adjustSeriesDataRange(series, range) {\n            if (series.bars.show) {\n                // make sure we got room for the bar on the dancing floor\n                var delta;\n\n                // update bar width if needed\n                var useAbsoluteBarWidth = series.bars.barWidth[1];\n                if (series.datapoints && series.datapoints.points && !useAbsoluteBarWidth) {\n                    computeBarWidth(series);\n                }\n\n                var barWidth = series.bars.barWidth[0] || series.bars.barWidth;\n                switch (series.bars.align) {\n                    case \"left\":\n                        delta = 0;\n                        break;\n                    case \"right\":\n                        delta = -barWidth;\n                        break;\n                    default:\n                        delta = -barWidth / 2;\n                }\n\n                if (series.bars.horizontal) {\n                    range.ymin += delta;\n                    range.ymax += delta + barWidth;\n                } else {\n                    range.xmin += delta;\n                    range.xmax += delta + barWidth;\n                }\n            }\n\n            if ((series.bars.show && series.bars.zero) || (series.lines.show && series.lines.zero)) {\n                var ps = series.datapoints.pointsize;\n\n                // make sure the 0 point is included in the computed y range when requested\n                if (ps <= 2) {\n                    /*if ps > 0 the points were already taken into account for autoScale */\n                    range.ymin = Math.min(0, range.ymin);\n                    range.ymax = Math.max(0, range.ymax);\n                }\n            }\n\n            return range;\n        };\n\n        function computeBarWidth(series) {\n            var xValues = [];\n            var pointsize = series.datapoints.pointsize, minDistance = Number.MAX_VALUE;\n\n            if (series.datapoints.points.length <= pointsize) {\n                minDistance = 1;\n            }\n\n            var start = series.bars.horizontal ? 1 : 0;\n            for (let j = start; j < series.datapoints.points.length; j += pointsize) {\n                if (isFinite(series.datapoints.points[j]) && series.datapoints.points[j] !== null) {\n                    xValues.push(series.datapoints.points[j]);\n                }\n            }\n\n            function onlyUnique(value, index, self) {\n                return self.indexOf(value) === index;\n            }\n\n            xValues = xValues.filter(onlyUnique);\n            xValues.sort(function(a, b) { return a - b });\n\n            for (let j = 1; j < xValues.length; j++) {\n                var distance = Math.abs(xValues[j] - xValues[j - 1]);\n                if (distance < minDistance && isFinite(distance)) {\n                    minDistance = distance;\n                }\n            }\n\n            if (typeof series.bars.barWidth === \"number\") {\n                series.bars.barWidth = series.bars.barWidth * minDistance;\n            } else {\n                series.bars.barWidth[0] = series.bars.barWidth[0] * minDistance;\n            }\n        }\n\n        function findNearbyItems(mouseX, mouseY, seriesFilter, radius, computeDistance) {\n            var items = findItems(mouseX, mouseY, seriesFilter, radius, computeDistance);\n            for (var i = 0; i < series.length; ++i) {\n                if (seriesFilter(i)) {\n                    executeHooks(hooks.findNearbyItems, [mouseX, mouseY, series, i, radius, computeDistance, items]);\n                }\n            }\n\n            return items.sort((a, b) => {\n                if (b.distance === undefined) {\n                    return -1;\n                } else if (a.distance === undefined && b.distance !== undefined) {\n                    return 1;\n                }\n\n                return a.distance - b.distance;\n            });\n        }\n\n        function findNearbyItem(mouseX, mouseY, seriesFilter, radius, computeDistance) {\n            var items = findNearbyItems(mouseX, mouseY, seriesFilter, radius, computeDistance);\n            return items[0] !== undefined ? items[0] : null;\n        }\n\n        // returns the data item the mouse is over/ the cursor is closest to, or null if none is found\n        function findItems(mouseX, mouseY, seriesFilter, radius, computeDistance) {\n            var i, foundItems = [],\n                items = [],\n                smallestDistance = radius * radius + 1;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(i)) continue;\n\n                var s = series[i];\n                if (!s.datapoints) return;\n\n                var foundPoint = false;\n                if (s.lines.show || s.points.show) {\n                    var found = findNearbyPoint(s, mouseX, mouseY, radius, computeDistance);\n                    if (found) {\n                        items.push({ seriesIndex: i, dataIndex: found.dataIndex, distance: found.distance });\n                        foundPoint = true;\n                    }\n                }\n\n                if (s.bars.show && !foundPoint) { // no other point can be nearby\n                    var foundIndex = findNearbyBar(s, mouseX, mouseY);\n                    if (foundIndex >= 0) {\n                        items.push({ seriesIndex: i, dataIndex: foundIndex, distance: smallestDistance });\n                    }\n                }\n            }\n\n            for (i = 0; i < items.length; i++) {\n                var seriesIndex = items[i].seriesIndex;\n                var dataIndex = items[i].dataIndex;\n                var itemDistance = items[i].distance;\n                var ps = series[seriesIndex].datapoints.pointsize;\n\n                foundItems.push({\n                    datapoint: series[seriesIndex].datapoints.points.slice(dataIndex * ps, (dataIndex + 1) * ps),\n                    dataIndex: dataIndex,\n                    series: series[seriesIndex],\n                    seriesIndex: seriesIndex,\n                    distance: Math.sqrt(itemDistance)\n                });\n            }\n\n            return foundItems;\n        }\n\n        function findNearbyPoint (series, mouseX, mouseY, maxDistance, computeDistance) {\n            var mx = series.xaxis.c2p(mouseX),\n                my = series.yaxis.c2p(mouseY),\n                maxx = maxDistance / series.xaxis.scale,\n                maxy = maxDistance / series.yaxis.scale,\n                points = series.datapoints.points,\n                ps = series.datapoints.pointsize,\n                smallestDistance = Number.POSITIVE_INFINITY;\n\n            // with inverse transforms, we can't use the maxx/maxy\n            // optimization, sadly\n            if (series.xaxis.options.inverseTransform) {\n                maxx = Number.MAX_VALUE;\n            }\n\n            if (series.yaxis.options.inverseTransform) {\n                maxy = Number.MAX_VALUE;\n            }\n\n            var found = null;\n            for (var j = 0; j < points.length; j += ps) {\n                var x = points[j];\n                var y = points[j + 1];\n                if (x == null) {\n                    continue;\n                }\n\n                if (x - mx > maxx || x - mx < -maxx ||\n                    y - my > maxy || y - my < -maxy) {\n                    continue;\n                }\n\n                // We have to calculate distances in pixels, not in\n                // data units, because the scales of the axes may be different\n                var dx = Math.abs(series.xaxis.p2c(x) - mouseX);\n                var dy = Math.abs(series.yaxis.p2c(y) - mouseY);\n                var dist = computeDistance ? computeDistance(dx, dy) : dx * dx + dy * dy;\n\n                // use <= to ensure last point takes precedence\n                // (last generally means on top of)\n                if (dist < smallestDistance) {\n                    smallestDistance = dist;\n                    found = { dataIndex: j / ps, distance: dist };\n                }\n            }\n\n            return found;\n        }\n\n        function findNearbyBar (series, mouseX, mouseY) {\n            var barLeft, barRight,\n                barWidth = series.bars.barWidth[0] || series.bars.barWidth,\n                mx = series.xaxis.c2p(mouseX),\n                my = series.yaxis.c2p(mouseY),\n                points = series.datapoints.points,\n                ps = series.datapoints.pointsize;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -barWidth;\n                    break;\n                default:\n                    barLeft = -barWidth / 2;\n            }\n\n            barRight = barLeft + barWidth;\n\n            var fillTowards = series.bars.fillTowards || 0;\n            var defaultBottom = fillTowards > series.yaxis.min ? Math.min(series.yaxis.max, fillTowards) : series.yaxis.min;\n\n            var foundIndex = -1;\n            for (var j = 0; j < points.length; j += ps) {\n                var x = points[j], y = points[j + 1];\n                if (x == null) {\n                    continue;\n                }\n\n                var bottom = ps === 3 ? points[j + 2] : defaultBottom;\n                // for a bar graph, the cursor must be inside the bar\n                if (series.bars.horizontal\n                    ? (mx <= Math.max(bottom, x) && mx >= Math.min(bottom, x) &&\n                        my >= y + barLeft && my <= y + barRight)\n                    : (mx >= x + barLeft && mx <= x + barRight &&\n                        my >= Math.min(bottom, y) && my <= Math.max(bottom, y))) {\n                    foundIndex = j / ps;\n                }\n            }\n\n            return foundIndex;\n        }\n\n        function findNearbyInterpolationPoint(posX, posY, seriesFilter) {\n            var i, j, dist, dx, dy, ps,\n                item,\n                smallestDistance = Number.MAX_VALUE;\n\n            for (i = 0; i < series.length; ++i) {\n                if (!seriesFilter(i)) {\n                    continue;\n                }\n                var points = series[i].datapoints.points;\n                ps = series[i].datapoints.pointsize;\n\n                // if the data is coming from positive -> negative, reverse the comparison\n                const comparer = points[points.length - ps] < points[0]\n                    ? function (x1, x2) { return x1 > x2 }\n                    : function (x1, x2) { return x2 > x1 };\n\n                // do not interpolate outside the bounds of the data.\n                if (comparer(posX, points[0])) {\n                    continue;\n                }\n\n                // Find the nearest points, x-wise\n                for (j = ps; j < points.length; j += ps) {\n                    if (comparer(posX, points[j])) {\n                        break;\n                    }\n                }\n\n                // Now Interpolate\n                var y,\n                    p1x = points[j - ps],\n                    p1y = points[j - ps + 1],\n                    p2x = points[j],\n                    p2y = points[j + 1];\n\n                if ((p1x === undefined) || (p2x === undefined) ||\n                    (p1y === undefined) || (p2y === undefined)) {\n                    continue;\n                }\n\n                if (p1x === p2x) {\n                    y = p2y\n                } else {\n                    y = p1y + (p2y - p1y) * (posX - p1x) / (p2x - p1x);\n                }\n\n                posY = y;\n\n                dx = Math.abs(series[i].xaxis.p2c(p2x) - posX);\n                dy = Math.abs(series[i].yaxis.p2c(p2y) - posY);\n                dist = dx * dx + dy * dy;\n\n                if (dist < smallestDistance) {\n                    smallestDistance = dist;\n                    item = [posX, posY, i, j];\n                }\n            }\n\n            if (item) {\n                i = item[2];\n                j = item[3];\n                ps = series[i].datapoints.pointsize;\n                points = series[i].datapoints.points;\n                p1x = points[j - ps];\n                p1y = points[j - ps + 1];\n                p2x = points[j];\n                p2y = points[j + 1];\n\n                return {\n                    datapoint: [item[0], item[1]],\n                    leftPoint: [p1x, p1y],\n                    rightPoint: [p2x, p2y],\n                    seriesIndex: i\n                };\n            }\n\n            return null;\n        }\n\n        function triggerRedrawOverlay() {\n            var t = options.interaction.redrawOverlayInterval;\n            if (t === -1) { // skip event queue\n                drawOverlay();\n                return;\n            }\n\n            if (!redrawTimeout) {\n                redrawTimeout = setTimeout(function() {\n                    drawOverlay(plot);\n                }, t);\n            }\n        }\n\n        function drawOverlay(plot) {\n            redrawTimeout = null;\n\n            if (!octx) {\n                return;\n            }\n            overlay.clear();\n            executeHooks(hooks.drawOverlay, [octx, overlay]);\n            var event = new CustomEvent('onDrawingDone');\n            plot.getEventHolder().dispatchEvent(event);\n            plot.getPlaceholder().trigger('drawingdone');\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec === \"string\") {\n                return spec;\n            } else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c !== \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null) {\n                            co = co.scale('rgb', c.brightness);\n                        }\n\n                        if (c.opacity != null) {\n                            co.a *= c.opacity;\n                        }\n\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n\n                return gradient;\n            }\n        }\n    }\n\n    // Add the plot function to the top level of the jQuery object\n\n    $.plot = function(placeholder, data, options) {\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        return plot;\n    };\n\n    $.plot.version = \"3.0.0\";\n\n    $.plot.plugins = [];\n\n    // Also add the plot function as a chainable property\n    $.fn.plot = function(data, options) {\n        return this.each(function() {\n            $.plot(this, data, options);\n        });\n    };\n\n    $.plot.linearTickGenerator = defaultTickGenerator;\n    $.plot.defaultTickFormatter = defaultTickFormatter;\n    $.plot.expRepTickFormatter = expRepTickFormatter;\n})(jQuery);\n","(function ($) {\n    'use strict';\n    var saturated = {\n        saturate: function (a) {\n            if (a === Infinity) {\n                return Number.MAX_VALUE;\n            }\n\n            if (a === -Infinity) {\n                return -Number.MAX_VALUE;\n            }\n\n            return a;\n        },\n        delta: function(min, max, noTicks) {\n            return ((max - min) / noTicks) === Infinity ? (max / noTicks - min / noTicks) : (max - min) / noTicks\n        },\n        multiply: function (a, b) {\n            return saturated.saturate(a * b);\n        },\n        // returns c * bInt * a. Beahves properly in the case where c is negative\n        // and bInt * a is bigger that Number.MAX_VALUE (Infinity)\n        multiplyAdd: function (a, bInt, c) {\n            if (isFinite(a * bInt)) {\n                return saturated.saturate(a * bInt + c);\n            } else {\n                var result = c;\n\n                for (var i = 0; i < bInt; i++) {\n                    result += a;\n                }\n\n                return saturated.saturate(result);\n            }\n        },\n        // round to nearby lower multiple of base\n        floorInBase: function(n, base) {\n            return base * Math.floor(n / base);\n        }\n    };\n\n    $.plot.saturated = saturated;\n})(jQuery);\n","/** ## jquery.flot.browser.js\n\nThis plugin is used to make available some browser-related utility functions.\n\n### Methods\n*/\n\n(function ($) {\n    'use strict';\n\n    var browser = {\n        /**\n        - getPageXY(e)\n\n         Calculates the pageX and pageY using the screenX, screenY properties of the event\n         and the scrolling of the page. This is needed because the pageX and pageY\n         properties of the event are not correct while running tests in Edge. */\n        getPageXY: function (e) {\n            // This code is inspired from https://stackoverflow.com/a/3464890\n            var doc = document.documentElement,\n                pageX = e.clientX + (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0),\n                pageY = e.clientY + (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n            return { X: pageX, Y: pageY };\n        },\n\n        /**\n        - getPixelRatio(context)\n\n         This function returns the current pixel ratio defined by the product of desktop\n         zoom and page zoom.\n         Additional info: https://www.html5rocks.com/en/tutorials/canvas/hidpi/\n        */\n        getPixelRatio: function(context) {\n            var devicePixelRatio = window.devicePixelRatio || 1,\n                backingStoreRatio =\n                context.webkitBackingStorePixelRatio ||\n                context.mozBackingStorePixelRatio ||\n                context.msBackingStorePixelRatio ||\n                context.oBackingStorePixelRatio ||\n                context.backingStorePixelRatio || 1;\n            return devicePixelRatio / backingStoreRatio;\n        },\n\n        /**\n        - isSafari, isMobileSafari, isOpera, isFirefox, isIE, isEdge, isChrome, isBlink\n\n         This is a collection of functions, used to check if the code is running in a\n         particular browser or Javascript engine.\n        */\n        isSafari: function() {\n            // *** https://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\n            // Safari 3.0+ \"[object HTMLElementConstructor]\"\n            return /constructor/i.test(window.top.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window.top['safari'] || (typeof window.top.safari !== 'undefined' && window.top.safari.pushNotification));\n        },\n\n        isMobileSafari: function() {\n            //isMobileSafari adapted from https://stackoverflow.com/questions/3007480/determine-if-user-navigated-from-mobile-safari\n            return navigator.userAgent.match(/(iPod|iPhone|iPad)/) && navigator.userAgent.match(/AppleWebKit/);\n        },\n\n        isOpera: function() {\n            // *** https://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\n            //Opera 8.0+\n            return (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n        },\n\n        isFirefox: function() {\n            // *** https://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\n            // Firefox 1.0+\n            return typeof InstallTrigger !== 'undefined';\n        },\n\n        isIE: function() {\n            // *** https://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\n            // Internet Explorer 6-11\n            return /*@cc_on!@*/false || !!document.documentMode;\n        },\n\n        isEdge: function() {\n            // *** https://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\n            // Edge 20+\n            return !browser.isIE() && !!window.StyleMedia;\n        },\n\n        isChrome: function() {\n            // *** https://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\n            // Chrome 1+\n            return !!window.chrome && !!window.chrome.webstore;\n        },\n\n        isBlink: function() {\n            // *** https://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\n            return (browser.isChrome() || browser.isOpera()) && !!window.CSS;\n        }\n    };\n\n    $.plot.browser = browser;\n})(jQuery);\n","/**\n## jquery.flot.drawSeries.js\n\nThis plugin is used by flot for drawing lines, plots, bars or area.\n\n### Public methods\n*/\n\n(function($) {\n    \"use strict\";\n\n    function DrawSeries() {\n        function plotLine(datapoints, xoffset, yoffset, axisx, axisy, ctx, steps) {\n            var points = datapoints.points,\n                ps = datapoints.pointsize,\n                prevx = null,\n                prevy = null;\n            var x1 = 0.0,\n                y1 = 0.0,\n                x2 = 0.0,\n                y2 = 0.0,\n                mx = null,\n                my = null,\n                i = 0;\n\n            var initPoints = function (i) {\n                x1 = points[i - ps];\n                y1 = points[i - ps + 1];\n                x2 = points[i];\n                y2 = points[i + 1];\n            };\n\n            var handleSteps = function () {\n                if (mx !== null && my !== null) {\n                    // if middle point exists, transfer p2 -> p1 and p1 -> mp\n                    x2 = x1;\n                    y2 = y1;\n                    x1 = mx;\n                    y1 = my;\n\n                    // 'remove' middle point\n                    mx = null;\n                    my = null;\n\n                    return true;\n                } else if (y1 !== y2 && x1 !== x2) {\n                    // create a middle point\n                    y2 = y1;\n                    mx = x2;\n                    my = y1;\n                }\n\n                return false;\n            };\n\n            var handleYMinClipping = function () {\n                if (y1 <= y2 && y1 < axisy.min) {\n                    if (y2 < axisy.min) {\n                        // line segment is outside\n                        return true;\n                    }\n                    // compute new intersection point\n                    x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                    y1 = axisy.min;\n                } else if (y2 <= y1 && y2 < axisy.min) {\n                    if (y1 < axisy.min) {\n                        return true;\n                    }\n\n                    x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                    y2 = axisy.min;\n                }\n            };\n\n            var handleYMaxClipping = function () {\n                if (y1 >= y2 && y1 > axisy.max) {\n                    if (y2 > axisy.max) {\n                        return true;\n                    }\n\n                    x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                    y1 = axisy.max;\n                } else if (y2 >= y1 && y2 > axisy.max) {\n                    if (y1 > axisy.max) {\n                        return true;\n                    }\n\n                    x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                    y2 = axisy.max;\n                }\n            };\n\n            var handleXMinClipping = function () {\n                if (x1 <= x2 && x1 < axisx.min) {\n                    if (x2 < axisx.min) {\n                        return true;\n                    }\n\n                    y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                    x1 = axisx.min;\n                } else if (x2 <= x1 && x2 < axisx.min) {\n                    if (x1 < axisx.min) {\n                        return true;\n                    }\n\n                    y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                    x2 = axisx.min;\n                }\n            };\n\n            var handleXMaxClipping = function () {\n                if (x1 >= x2 && x1 > axisx.max) {\n                    if (x2 > axisx.max) {\n                        return true;\n                    }\n\n                    y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                    x1 = axisx.max;\n                } else if (x2 >= x1 && x2 > axisx.max) {\n                    if (x1 > axisx.max) {\n                        return true;\n                    }\n\n                    y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                    x2 = axisx.max;\n                }\n            };\n\n            var drawLine = function () {\n                if (x1 !== prevx || y1 !== prevy) {\n                    ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n                }\n\n                prevx = x2;\n                prevy = y2;\n                ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n            };\n\n            ctx.beginPath();\n            for (i = ps; i < points.length; i += ps) {\n                initPoints(i);\n\n                if (x1 === null || x2 === null) {\n                    mx = null;\n                    my = null;\n                    continue;\n                }\n\n                if (isNaN(x1) || isNaN(x2) || isNaN(y1) || isNaN(y2)) {\n                    prevx = null;\n                    prevy = null;\n                    continue;\n                }\n\n                if (steps) {\n                    var hadMiddlePoint = handleSteps();\n                    if (hadMiddlePoint) {\n                        // Subtract pointsize from i to have current point p1 handled again.\n                        i -= ps;\n                    }\n                }\n                if (handleYMinClipping()) continue;\n                if (handleYMaxClipping()) continue;\n                if (handleXMinClipping()) continue;\n                if (handleXMaxClipping()) continue;\n\n                drawLine();\n            }\n\n            // Connects last two points in case middle point exists after the loop.\n            if (mx !== null && my !== null) {\n                initPoints(i);\n                handleSteps();\n\n                if (!handleYMinClipping() &&\n                    !handleYMaxClipping() &&\n                    !handleXMinClipping() &&\n                    !handleXMaxClipping()) {\n                    drawLine();\n                }\n            }\n\n            ctx.stroke();\n        }\n\n        function plotLineArea(datapoints, axisx, axisy, fillTowards, ctx, steps) {\n            var points = datapoints.points,\n                ps = datapoints.pointsize,\n                bottom = fillTowards > axisy.min ? Math.min(axisy.max, fillTowards) : axisy.min,\n                i = 0,\n                ypos = 1,\n                areaOpen = false,\n                segmentStart = 0,\n                segmentEnd = 0,\n                mx = null,\n                my = null;\n\n            // we process each segment in two turns, first forward\n            // direction to sketch out top, then once we hit the\n            // end we go backwards to sketch the bottom\n            while (true) {\n                if (ps > 0 && i > points.length + ps) {\n                    break;\n                }\n\n                i += ps; // ps is negative if going backwards\n\n                var x1 = points[i - ps],\n                    y1 = points[i - ps + ypos],\n                    x2 = points[i],\n                    y2 = points[i + ypos];\n\n                if (ps === -2) {\n                    /* going backwards and no value for the bottom provided in the series*/\n                    y1 = y2 = bottom;\n                }\n\n                if (areaOpen) {\n                    if (ps > 0 && x1 != null && x2 == null) {\n                        // at turning point\n                        segmentEnd = i;\n                        ps = -ps;\n                        ypos = 2;\n                        continue;\n                    }\n\n                    if (ps < 0 && i === segmentStart + ps) {\n                        // done with the reverse sweep\n                        ctx.fill();\n                        areaOpen = false;\n                        ps = -ps;\n                        ypos = 1;\n                        i = segmentStart = segmentEnd + ps;\n                        continue;\n                    }\n                }\n\n                if (x1 == null || x2 == null) {\n                    mx = null;\n                    my = null;\n                    continue;\n                }\n\n                if (steps) {\n                    if (mx !== null && my !== null) {\n                        // if middle point exists, transfer p2 -> p1 and p1 -> mp\n                        x2 = x1;\n                        y2 = y1;\n                        x1 = mx;\n                        y1 = my;\n\n                        // 'remove' middle point\n                        mx = null;\n                        my = null;\n\n                        // subtract pointsize from i to have current point p1 handled again\n                        i -= ps;\n                    } else if (y1 !== y2 && x1 !== x2) {\n                        // create a middle point\n                        y2 = y1;\n                        mx = x2;\n                        my = y1;\n                    }\n                }\n\n                // clip x values\n\n                // clip with xmin\n                if (x1 <= x2 && x1 < axisx.min) {\n                    if (x2 < axisx.min) {\n                        continue;\n                    }\n\n                    y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                    x1 = axisx.min;\n                } else if (x2 <= x1 && x2 < axisx.min) {\n                    if (x1 < axisx.min) {\n                        continue;\n                    }\n\n                    y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                    x2 = axisx.min;\n                }\n\n                // clip with xmax\n                if (x1 >= x2 && x1 > axisx.max) {\n                    if (x2 > axisx.max) {\n                        continue;\n                    }\n\n                    y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                    x1 = axisx.max;\n                } else if (x2 >= x1 && x2 > axisx.max) {\n                    if (x1 > axisx.max) {\n                        continue;\n                    }\n\n                    y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                    x2 = axisx.max;\n                }\n\n                if (!areaOpen) {\n                    // open area\n                    ctx.beginPath();\n                    ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                    areaOpen = true;\n                }\n\n                // now first check the case where both is outside\n                if (y1 >= axisy.max && y2 >= axisy.max) {\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                    continue;\n                } else if (y1 <= axisy.min && y2 <= axisy.min) {\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                    continue;\n                }\n\n                // else it's a bit more complicated, there might\n                // be a flat maxed out rectangle first, then a\n                // triangular cutout or reverse; to find these\n                // keep track of the current x values\n                var x1old = x1,\n                    x2old = x2;\n\n                // clip the y values, without shortcutting, we\n                // go through all cases in turn\n\n                // clip with ymin\n                if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                    x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                    y1 = axisy.min;\n                } else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                    x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                    y2 = axisy.min;\n                }\n\n                // clip with ymax\n                if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                    x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                    y1 = axisy.max;\n                } else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                    x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                    y2 = axisy.max;\n                }\n\n                // if the x value was changed we got a rectangle\n                // to fill\n                if (x1 !== x1old) {\n                    ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                    // it goes to (x1, y1), but we fill that below\n                }\n\n                // fill triangular section, this sometimes result\n                // in redundant points if (x1, y1) hasn't changed\n                // from previous line to, but we just ignore that\n                ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                // fill the other rectangle if it's there\n                if (x2 !== x2old) {\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                    ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                }\n            }\n        }\n\n        /**\n        - drawSeriesLines(series, ctx, plotOffset, plotWidth, plotHeight, drawSymbol, getColorOrGradient)\n\n         This function is used for drawing lines or area fill.  In case the series has line decimation function\n         attached, before starting to draw, as an optimization the points will first be decimated.\n\n         The series parameter contains the series to be drawn on ctx context. The plotOffset, plotWidth and\n         plotHeight are the corresponding parameters of flot used to determine the drawing surface.\n         The function getColorOrGradient is used to compute the fill style of lines and area.\n        */\n        function drawSeriesLines(series, ctx, plotOffset, plotWidth, plotHeight, drawSymbol, getColorOrGradient) {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            if (series.lines.dashes && ctx.setLineDash) {\n                ctx.setLineDash(series.lines.dashes);\n            }\n\n            var datapoints = {\n                format: series.datapoints.format,\n                points: series.datapoints.points,\n                pointsize: series.datapoints.pointsize\n            };\n\n            if (series.decimate) {\n                datapoints.points = series.decimate(series, series.xaxis.min, series.xaxis.max, plotWidth, series.yaxis.min, series.yaxis.max, plotHeight);\n            }\n\n            var lw = series.lines.lineWidth;\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight, getColorOrGradient);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(datapoints, series.xaxis, series.yaxis, series.lines.fillTowards || 0, ctx, series.lines.steps);\n            }\n\n            if (lw > 0) {\n                plotLine(datapoints, 0, 0, series.xaxis, series.yaxis, ctx, series.lines.steps);\n            }\n\n            ctx.restore();\n        }\n\n        /**\n        - drawSeriesPoints(series, ctx, plotOffset, plotWidth, plotHeight, drawSymbol, getColorOrGradient)\n\n         This function is used for drawing points using a given symbol. In case the series has points decimation\n         function attached, before starting to draw, as an optimization the points will first be decimated.\n\n         The series parameter contains the series to be drawn on ctx context. The plotOffset, plotWidth and\n         plotHeight are the corresponding parameters of flot used to determine the drawing surface.\n         The function drawSymbol is used to compute and draw the symbol chosen for the points.\n        */\n        function drawSeriesPoints(series, ctx, plotOffset, plotWidth, plotHeight, drawSymbol, getColorOrGradient) {\n            function drawCircle(ctx, x, y, radius, shadow, fill) {\n                ctx.moveTo(x + radius, y);\n                ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n            }\n            drawCircle.fill = true;\n            function plotPoints(datapoints, radius, fill, offset, shadow, axisx, axisy, drawSymbolFn) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize;\n\n                ctx.beginPath();\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i],\n                        y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max) {\n                        continue;\n                    }\n\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n\n                    drawSymbolFn(ctx, x, y, radius, shadow, fill);\n                }\n                if (drawSymbolFn.fill && !shadow) {\n                    ctx.fill();\n                }\n                ctx.stroke();\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var datapoints = {\n                format: series.datapoints.format,\n                points: series.datapoints.points,\n                pointsize: series.datapoints.pointsize\n            };\n\n            if (series.decimatePoints) {\n                datapoints.points = series.decimatePoints(series, series.xaxis.min, series.xaxis.max, plotWidth, series.yaxis.min, series.yaxis.max, plotHeight);\n            }\n\n            var lw = series.points.lineWidth,\n                radius = series.points.radius,\n                symbol = series.points.symbol,\n                drawSymbolFn;\n\n            if (symbol === 'circle') {\n                drawSymbolFn = drawCircle;\n            } else if (typeof symbol === 'string' && drawSymbol && drawSymbol[symbol]) {\n                drawSymbolFn = drawSymbol[symbol];\n            } else if (typeof drawSymbol === 'function') {\n                drawSymbolFn = drawSymbol;\n            }\n\n            // If the user sets the line width to 0, we change it to a very\n            // small value. A line width of 0 seems to force the default of 1.\n\n            if (lw === 0) {\n                lw = 0.0001;\n            }\n\n            ctx.lineWidth = lw;\n            ctx.fillStyle = getFillStyle(series.points, series.color, null, null, getColorOrGradient);\n            ctx.strokeStyle = series.color;\n            plotPoints(datapoints, radius,\n                true, 0, false,\n                series.xaxis, series.yaxis, drawSymbolFn);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left = x + barLeft,\n                right = x + barRight,\n                bottom = b, top = y,\n                drawLeft, drawRight, drawTop, drawBottom = false,\n                tmp;\n\n            drawLeft = drawRight = drawTop = true;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            } else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n\n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max) {\n                return;\n            }\n\n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n\n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n\n            // fill the bar\n            if (fillStyleCallback) {\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fillRect(left, top, right - left, bottom - top)\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom);\n                if (drawLeft) {\n                    c.lineTo(left, top);\n                } else {\n                    c.moveTo(left, top);\n                }\n\n                if (drawTop) {\n                    c.lineTo(right, top);\n                } else {\n                    c.moveTo(right, top);\n                }\n\n                if (drawRight) {\n                    c.lineTo(right, bottom);\n                } else {\n                    c.moveTo(right, bottom);\n                }\n\n                if (drawBottom) {\n                    c.lineTo(left, bottom);\n                } else {\n                    c.moveTo(left, bottom);\n                }\n\n                c.stroke();\n            }\n        }\n\n        /**\n        - drawSeriesBars(series, ctx, plotOffset, plotWidth, plotHeight, drawSymbol, getColorOrGradient)\n\n         This function is used for drawing series represented as bars. In case the series has decimation\n         function attached, before starting to draw, as an optimization the points will first be decimated.\n\n         The series parameter contains the series to be drawn on ctx context. The plotOffset, plotWidth and\n         plotHeight are the corresponding parameters of flot used to determine the drawing surface.\n         The function getColorOrGradient is used to compute the fill style of bars.\n        */\n        function drawSeriesBars(series, ctx, plotOffset, plotWidth, plotHeight, drawSymbol, getColorOrGradient) {\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    fillTowards = series.bars.fillTowards || 0,\n                    defaultBottom = fillTowards > axisy.min ? Math.min(axisy.max, fillTowards) : axisy.min;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null) {\n                        continue;\n                    }\n\n                    // Use third point as bottom if pointsize is 3\n                    var bottom = ps === 3 ? points[i + 2] : defaultBottom;\n                    drawBar(points[i], points[i + 1], bottom, barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var datapoints = {\n                format: series.datapoints.format,\n                points: series.datapoints.points,\n                pointsize: series.datapoints.pointsize\n            };\n\n            if (series.decimate) {\n                datapoints.points = series.decimate(series, series.xaxis.min, series.xaxis.max, plotWidth);\n            }\n\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n\n            var barLeft;\n            var barWidth = series.bars.barWidth[0] || series.bars.barWidth;\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -barWidth;\n                    break;\n                default:\n                    barLeft = -barWidth / 2;\n            }\n\n            var fillStyleCallback = series.bars.fill ? function(bottom, top) {\n                return getFillStyle(series.bars, series.color, bottom, top, getColorOrGradient);\n            } : null;\n\n            plotBars(datapoints, barLeft, barLeft + barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top, getColorOrGradient) {\n            var fill = filloptions.fill;\n            if (!fill) {\n                return null;\n            }\n\n            if (filloptions.fillColor) {\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n            }\n\n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill === \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n\n        this.drawSeriesLines = drawSeriesLines;\n        this.drawSeriesPoints = drawSeriesPoints;\n        this.drawSeriesBars = drawSeriesBars;\n        this.drawBar = drawBar;\n    };\n\n    $.plot.drawSeries = new DrawSeries();\n})(jQuery);\n","/* Flot plugin for plotting error bars.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nError bars are used to show standard deviation and other statistical\nproperties in a plot.\n\n* Created by Rui Pereira  -  rui (dot) pereira (at) gmail (dot) com\n\nThis plugin allows you to plot error-bars over points. Set \"errorbars\" inside\nthe points series to the axis name over which there will be error values in\nyour data array (*even* if you do not intend to plot them later, by setting\n\"show: null\" on xerr/yerr).\n\nThe plugin supports these options:\n\n    series: {\n        points: {\n            errorbars: \"x\" or \"y\" or \"xy\",\n            xerr: {\n                show: null/false or true,\n                asymmetric: null/false or true,\n                upperCap: null or \"-\" or function,\n                lowerCap: null or \"-\" or function,\n                color: null or color,\n                radius: null or number\n            },\n            yerr: { same options as xerr }\n        }\n    }\n\nEach data point array is expected to be of the type:\n\n    \"x\"  [ x, y, xerr ]\n    \"y\"  [ x, y, yerr ]\n    \"xy\" [ x, y, xerr, yerr ]\n\nWhere xerr becomes xerr_lower,xerr_upper for the asymmetric error case, and\nequivalently for yerr. Eg., a datapoint for the \"xy\" case with symmetric\nerror-bars on X and asymmetric on Y would be:\n\n    [ x, y, xerr, yerr_lower, yerr_upper ]\n\nBy default no end caps are drawn. Setting upperCap and/or lowerCap to \"-\" will\ndraw a small cap perpendicular to the error bar. They can also be set to a\nuser-defined drawing function, with (ctx, x, y, radius) as parameters, as eg.\n\n    function drawSemiCircle( ctx, x, y, radius ) {\n        ctx.beginPath();\n        ctx.arc( x, y, radius, 0, Math.PI, false );\n        ctx.moveTo( x - radius, y );\n        ctx.lineTo( x + radius, y );\n        ctx.stroke();\n    }\n\nColor and radius both default to the same ones of the points series if not\nset. The independent radius parameter on xerr/yerr is useful for the case when\nwe may want to add error-bars to a line, without showing the interconnecting\npoints (with radius: 0), and still showing end caps on the error-bars.\nshadowSize and lineWidth are derived as well from the points series.\n\n*/\n\n(function ($) {\n    var options = {\n        series: {\n            points: {\n                errorbars: null, //should be 'x', 'y' or 'xy'\n                xerr: {err: 'x', show: null, asymmetric: null, upperCap: null, lowerCap: null, color: null, radius: null},\n                yerr: {err: 'y', show: null, asymmetric: null, upperCap: null, lowerCap: null, color: null, radius: null}\n            }\n        }\n    };\n\n    function processRawData(plot, series, data, datapoints) {\n        if (!series.points.errorbars) {\n            return;\n        }\n\n        // x,y values\n        var format = [\n            { x: true, number: true, required: true },\n            { y: true, number: true, required: true }\n        ];\n\n        var errors = series.points.errorbars;\n        // error bars - first X then Y\n        if (errors === 'x' || errors === 'xy') {\n            // lower / upper error\n            if (series.points.xerr.asymmetric) {\n                format.push({ x: true, number: true, required: true });\n                format.push({ x: true, number: true, required: true });\n            } else {\n                format.push({ x: true, number: true, required: true });\n            }\n        }\n        if (errors === 'y' || errors === 'xy') {\n            // lower / upper error\n            if (series.points.yerr.asymmetric) {\n                format.push({ y: true, number: true, required: true });\n                format.push({ y: true, number: true, required: true });\n            } else {\n                format.push({ y: true, number: true, required: true });\n            }\n        }\n        datapoints.format = format;\n    }\n\n    function parseErrors(series, i) {\n        var points = series.datapoints.points;\n\n        // read errors from points array\n        var exl = null,\n            exu = null,\n            eyl = null,\n            eyu = null;\n        var xerr = series.points.xerr,\n            yerr = series.points.yerr;\n\n        var eb = series.points.errorbars;\n        // error bars - first X\n        if (eb === 'x' || eb === 'xy') {\n            if (xerr.asymmetric) {\n                exl = points[i + 2];\n                exu = points[i + 3];\n                if (eb === 'xy') {\n                    if (yerr.asymmetric) {\n                        eyl = points[i + 4];\n                        eyu = points[i + 5];\n                    } else {\n                        eyl = points[i + 4];\n                    }\n                }\n            } else {\n                exl = points[i + 2];\n                if (eb === 'xy') {\n                    if (yerr.asymmetric) {\n                        eyl = points[i + 3];\n                        eyu = points[i + 4];\n                    } else {\n                        eyl = points[i + 3];\n                    }\n                }\n            }\n        // only Y\n        } else {\n            if (eb === 'y') {\n                if (yerr.asymmetric) {\n                    eyl = points[i + 2];\n                    eyu = points[i + 3];\n                } else {\n                    eyl = points[i + 2];\n                }\n            }\n        }\n\n        // symmetric errors?\n        if (exu == null) exu = exl;\n        if (eyu == null) eyu = eyl;\n\n        var errRanges = [exl, exu, eyl, eyu];\n        // nullify if not showing\n        if (!xerr.show) {\n            errRanges[0] = null;\n            errRanges[1] = null;\n        }\n        if (!yerr.show) {\n            errRanges[2] = null;\n            errRanges[3] = null;\n        }\n        return errRanges;\n    }\n\n    function drawSeriesErrors(plot, ctx, s) {\n        var points = s.datapoints.points,\n            ps = s.datapoints.pointsize,\n            ax = [s.xaxis, s.yaxis],\n            radius = s.points.radius,\n            err = [s.points.xerr, s.points.yerr],\n            tmp;\n\n        //sanity check, in case some inverted axis hack is applied to flot\n        var invertX = false;\n        if (ax[0].p2c(ax[0].max) < ax[0].p2c(ax[0].min)) {\n            invertX = true;\n            tmp = err[0].lowerCap;\n            err[0].lowerCap = err[0].upperCap;\n            err[0].upperCap = tmp;\n        }\n\n        var invertY = false;\n        if (ax[1].p2c(ax[1].min) < ax[1].p2c(ax[1].max)) {\n            invertY = true;\n            tmp = err[1].lowerCap;\n            err[1].lowerCap = err[1].upperCap;\n            err[1].upperCap = tmp;\n        }\n\n        for (var i = 0; i < s.datapoints.points.length; i += ps) {\n            //parse\n            var errRanges = parseErrors(s, i);\n\n            //cycle xerr & yerr\n            for (var e = 0; e < err.length; e++) {\n                var minmax = [ax[e].min, ax[e].max];\n\n                //draw this error?\n                if (errRanges[e * err.length]) {\n                    //data coordinates\n                    var x = points[i],\n                        y = points[i + 1];\n\n                    //errorbar ranges\n                    var upper = [x, y][e] + errRanges[e * err.length + 1],\n                        lower = [x, y][e] - errRanges[e * err.length];\n\n                    //points outside of the canvas\n                    if (err[e].err === 'x') {\n                        if (y > ax[1].max || y < ax[1].min || upper < ax[0].min || lower > ax[0].max) {\n                            continue;\n                        }\n                    }\n\n                    if (err[e].err === 'y') {\n                        if (x > ax[0].max || x < ax[0].min || upper < ax[1].min || lower > ax[1].max) {\n                            continue;\n                        }\n                    }\n\n                    // prevent errorbars getting out of the canvas\n                    var drawUpper = true,\n                        drawLower = true;\n\n                    if (upper > minmax[1]) {\n                        drawUpper = false;\n                        upper = minmax[1];\n                    }\n                    if (lower < minmax[0]) {\n                        drawLower = false;\n                        lower = minmax[0];\n                    }\n\n                    //sanity check, in case some inverted axis hack is applied to flot\n                    if ((err[e].err === 'x' && invertX) || (err[e].err === 'y' && invertY)) {\n                        //swap coordinates\n                        tmp = lower;\n                        lower = upper;\n                        upper = tmp;\n                        tmp = drawLower;\n                        drawLower = drawUpper;\n                        drawUpper = tmp;\n                        tmp = minmax[0];\n                        minmax[0] = minmax[1];\n                        minmax[1] = tmp;\n                    }\n\n                    // convert to pixels\n                    x = ax[0].p2c(x);\n                    y = ax[1].p2c(y);\n                    upper = ax[e].p2c(upper);\n                    lower = ax[e].p2c(lower);\n                    minmax[0] = ax[e].p2c(minmax[0]);\n                    minmax[1] = ax[e].p2c(minmax[1]);\n\n                    //same style as points by default\n                    var lw = err[e].lineWidth ? err[e].lineWidth : s.points.lineWidth,\n                        sw = s.points.shadowSize != null ? s.points.shadowSize : s.shadowSize;\n\n                    //shadow as for points\n                    if (lw > 0 && sw > 0) {\n                        var w = sw / 2;\n                        ctx.lineWidth = w;\n                        ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                        drawError(ctx, err[e], x, y, upper, lower, drawUpper, drawLower, radius, w + w / 2, minmax);\n\n                        ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                        drawError(ctx, err[e], x, y, upper, lower, drawUpper, drawLower, radius, w / 2, minmax);\n                    }\n\n                    ctx.strokeStyle = err[e].color\n                        ? err[e].color\n                        : s.color;\n                    ctx.lineWidth = lw;\n                    //draw it\n                    drawError(ctx, err[e], x, y, upper, lower, drawUpper, drawLower, radius, 0, minmax);\n                }\n            }\n        }\n    }\n\n    function drawError(ctx, err, x, y, upper, lower, drawUpper, drawLower, radius, offset, minmax) {\n        //shadow offset\n        y += offset;\n        upper += offset;\n        lower += offset;\n\n        // error bar - avoid plotting over circles\n        if (err.err === 'x') {\n            if (upper > x + radius) drawPath(ctx, [[upper, y], [Math.max(x + radius, minmax[0]), y]]);\n            else drawUpper = false;\n\n            if (lower < x - radius) drawPath(ctx, [[Math.min(x - radius, minmax[1]), y], [lower, y]]);\n            else drawLower = false;\n        } else {\n            if (upper < y - radius) drawPath(ctx, [[x, upper], [x, Math.min(y - radius, minmax[0])]]);\n            else drawUpper = false;\n\n            if (lower > y + radius) drawPath(ctx, [[x, Math.max(y + radius, minmax[1])], [x, lower]]);\n            else drawLower = false;\n        }\n\n        //internal radius value in errorbar, allows to plot radius 0 points and still keep proper sized caps\n        //this is a way to get errorbars on lines without visible connecting dots\n        radius = err.radius != null\n            ? err.radius\n            : radius;\n\n        // upper cap\n        if (drawUpper) {\n            if (err.upperCap === '-') {\n                if (err.err === 'x') drawPath(ctx, [[upper, y - radius], [upper, y + radius]]);\n                else drawPath(ctx, [[x - radius, upper], [x + radius, upper]]);\n            } else if ($.isFunction(err.upperCap)) {\n                if (err.err === 'x') err.upperCap(ctx, upper, y, radius);\n                else err.upperCap(ctx, x, upper, radius);\n            }\n        }\n        // lower cap\n        if (drawLower) {\n            if (err.lowerCap === '-') {\n                if (err.err === 'x') drawPath(ctx, [[lower, y - radius], [lower, y + radius]]);\n                else drawPath(ctx, [[x - radius, lower], [x + radius, lower]]);\n            } else if ($.isFunction(err.lowerCap)) {\n                if (err.err === 'x') err.lowerCap(ctx, lower, y, radius);\n                else err.lowerCap(ctx, x, lower, radius);\n            }\n        }\n    }\n\n    function drawPath(ctx, pts) {\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        for (var p = 1; p < pts.length; p++) {\n            ctx.lineTo(pts[p][0], pts[p][1]);\n        }\n\n        ctx.stroke();\n    }\n\n    function draw(plot, ctx) {\n        var plotOffset = plot.getPlotOffset();\n\n        ctx.save();\n        ctx.translate(plotOffset.left, plotOffset.top);\n        $.each(plot.getData(), function (i, s) {\n            if (s.points.errorbars && (s.points.xerr.show || s.points.yerr.show)) {\n                drawSeriesErrors(plot, ctx, s);\n            }\n        });\n        ctx.restore();\n    }\n\n    function init(plot) {\n        plot.hooks.processRawData.push(processRawData);\n        plot.hooks.draw.push(draw);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'errorbars',\n        version: '1.0'\n    });\n})(jQuery);\n","(function ($) {\n    'use strict';\n    $.plot.uiConstants = {\n        SNAPPING_CONSTANT: 20,\n        PANHINT_LENGTH_CONSTANT: 10,\n        MINOR_TICKS_COUNT_CONSTANT: 4,\n        TICK_LENGTH_CONSTANT: 10,\n        ZOOM_DISTANCE_MARGIN: 25\n    };\n})(jQuery);\n","/* Pretty handling of log axes.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nCopyright (c) 2015 Ciprian Ceteras cipix2000@gmail.com.\nCopyright (c) 2017 Raluca Portase\nLicensed under the MIT license.\n\nSet axis.mode to \"log\" to enable.\n*/\n\n/* global jQuery*/\n\n/**\n## jquery.flot.logaxis\nThis plugin is used to create logarithmic axis. This includes tick generation,\nformatters and transformers to and from logarithmic representation.\n\n### Methods and hooks\n*/\n\n(function ($) {\n    'use strict';\n\n    var options = {\n        xaxis: {}\n    };\n\n    /*tick generators and formatters*/\n    var PREFERRED_LOG_TICK_VALUES = computePreferedLogTickValues(Number.MAX_VALUE, 10),\n        EXTENDED_LOG_TICK_VALUES = computePreferedLogTickValues(Number.MAX_VALUE, 4);\n\n    function computePreferedLogTickValues(endLimit, rangeStep) {\n        var log10End = Math.floor(Math.log(endLimit) * Math.LOG10E) - 1,\n            log10Start = -log10End,\n            val, range, vals = [];\n\n        for (var power = log10Start; power <= log10End; power++) {\n            range = parseFloat('1e' + power);\n            for (var mult = 1; mult < 9; mult += rangeStep) {\n                val = range * mult;\n                vals.push(val);\n            }\n        }\n        return vals;\n    }\n\n    /**\n    - logTickGenerator(plot, axis, noTicks)\n\n    Generates logarithmic ticks, depending on axis range.\n    In case the number of ticks that can be generated is less than the expected noTicks/4,\n    a linear tick generation is used.\n    */\n    var logTickGenerator = function (plot, axis, noTicks) {\n        var ticks = [],\n            minIdx = -1,\n            maxIdx = -1,\n            surface = plot.getCanvas(),\n            logTickValues = PREFERRED_LOG_TICK_VALUES,\n            min = clampAxis(axis, plot),\n            max = axis.max;\n\n        if (!noTicks) {\n            noTicks = 0.3 * Math.sqrt(axis.direction === \"x\" ? surface.width : surface.height);\n        }\n\n        PREFERRED_LOG_TICK_VALUES.some(function (val, i) {\n            if (val >= min) {\n                minIdx = i;\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        PREFERRED_LOG_TICK_VALUES.some(function (val, i) {\n            if (val >= max) {\n                maxIdx = i;\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        if (maxIdx === -1) {\n            maxIdx = PREFERRED_LOG_TICK_VALUES.length - 1;\n        }\n\n        if (maxIdx - minIdx <= noTicks / 4 && logTickValues.length !== EXTENDED_LOG_TICK_VALUES.length) {\n            //try with multiple of 5 for tick values\n            logTickValues = EXTENDED_LOG_TICK_VALUES;\n            minIdx *= 2;\n            maxIdx *= 2;\n        }\n\n        var lastDisplayed = null,\n            inverseNoTicks = 1 / noTicks,\n            tickValue, pixelCoord, tick;\n\n        // Count the number of tick values would appear, if we can get at least\n        // nTicks / 4 accept them.\n        if (maxIdx - minIdx >= noTicks / 4) {\n            for (var idx = maxIdx; idx >= minIdx; idx--) {\n                tickValue = logTickValues[idx];\n                pixelCoord = (Math.log(tickValue) - Math.log(min)) / (Math.log(max) - Math.log(min));\n                tick = tickValue;\n\n                if (lastDisplayed === null) {\n                    lastDisplayed = {\n                        pixelCoord: pixelCoord,\n                        idealPixelCoord: pixelCoord\n                    };\n                } else {\n                    if (Math.abs(pixelCoord - lastDisplayed.pixelCoord) >= inverseNoTicks) {\n                        lastDisplayed = {\n                            pixelCoord: pixelCoord,\n                            idealPixelCoord: lastDisplayed.idealPixelCoord - inverseNoTicks\n                        };\n                    } else {\n                        tick = null;\n                    }\n                }\n\n                if (tick) {\n                    ticks.push(tick);\n                }\n            }\n            // Since we went in backwards order.\n            ticks.reverse();\n        } else {\n            var tickSize = plot.computeTickSize(min, max, noTicks),\n                customAxis = {min: min, max: max, tickSize: tickSize};\n            ticks = $.plot.linearTickGenerator(customAxis);\n        }\n\n        return ticks;\n    };\n\n    var clampAxis = function (axis, plot) {\n        var min = axis.min,\n            max = axis.max;\n\n        if (min <= 0) {\n            //for empty graph if axis.min is not strictly positive make it 0.1\n            if (axis.datamin === null) {\n                min = axis.min = 0.1;\n            } else {\n                min = processAxisOffset(plot, axis);\n            }\n\n            if (max < min) {\n                axis.max = axis.datamax !== null ? axis.datamax : axis.options.max;\n                axis.options.offset.below = 0;\n                axis.options.offset.above = 0;\n            }\n        }\n\n        return min;\n    }\n\n    /**\n    - logTickFormatter(value, axis, precision)\n\n    This is the corresponding tickFormatter of the logaxis.\n    For a number greater that 10^6 or smaller than 10^(-3), this will be drawn\n    with e representation\n    */\n    var logTickFormatter = function (value, axis, precision) {\n        var tenExponent = value > 0 ? Math.floor(Math.log(value) / Math.LN10) : 0;\n\n        if (precision) {\n            if ((tenExponent >= -4) && (tenExponent <= 7)) {\n                return $.plot.defaultTickFormatter(value, axis, precision);\n            } else {\n                return $.plot.expRepTickFormatter(value, axis, precision);\n            }\n        }\n        if ((tenExponent >= -4) && (tenExponent <= 7)) {\n            //if we have float numbers, return a limited length string(ex: 0.0009 is represented as 0.000900001)\n            var formattedValue = tenExponent < 0 ? value.toFixed(-tenExponent) : value.toFixed(tenExponent + 2);\n            if (formattedValue.indexOf('.') !== -1) {\n                var lastZero = formattedValue.lastIndexOf('0');\n\n                while (lastZero === formattedValue.length - 1) {\n                    formattedValue = formattedValue.slice(0, -1);\n                    lastZero = formattedValue.lastIndexOf('0');\n                }\n\n                //delete the dot if is last\n                if (formattedValue.indexOf('.') === formattedValue.length - 1) {\n                    formattedValue = formattedValue.slice(0, -1);\n                }\n            }\n            return formattedValue;\n        } else {\n            return $.plot.expRepTickFormatter(value, axis);\n        }\n    };\n\n    /*logaxis caracteristic functions*/\n    var logTransform = function (v) {\n        if (v < PREFERRED_LOG_TICK_VALUES[0]) {\n            v = PREFERRED_LOG_TICK_VALUES[0];\n        }\n\n        return Math.log(v);\n    };\n\n    var logInverseTransform = function (v) {\n        return Math.exp(v);\n    };\n\n    var invertedTransform = function (v) {\n        return -v;\n    }\n\n    var invertedLogTransform = function (v) {\n        return -logTransform(v);\n    }\n\n    var invertedLogInverseTransform = function (v) {\n        return logInverseTransform(-v);\n    }\n\n    /**\n    - setDataminRange(plot, axis)\n\n    It is used for clamping the starting point of a logarithmic axis.\n    This will set the axis datamin range to 0.1 or to the first datapoint greater then 0.\n    The function is usefull since the logarithmic representation can not show\n    values less than or equal to 0.\n    */\n    function setDataminRange(plot, axis) {\n        if (axis.options.mode === 'log' && axis.datamin <= 0) {\n            if (axis.datamin === null) {\n                axis.datamin = 0.1;\n            } else {\n                axis.datamin = processAxisOffset(plot, axis);\n            }\n        }\n    }\n\n    function processAxisOffset(plot, axis) {\n        var series = plot.getData(),\n            range = series\n                .filter(function(series) {\n                    return series.xaxis === axis || series.yaxis === axis;\n                })\n                .map(function(series) {\n                    return plot.computeRangeForDataSeries(series, null, isValid);\n                }),\n            min = axis.direction === 'x'\n                ? Math.min(0.1, range && range[0] ? range[0].xmin : 0.1)\n                : Math.min(0.1, range && range[0] ? range[0].ymin : 0.1);\n\n        axis.min = min;\n\n        return min;\n    }\n\n    function isValid(a) {\n        return a > 0;\n    }\n\n    function init(plot) {\n        plot.hooks.processOptions.push(function (plot) {\n            $.each(plot.getAxes(), function (axisName, axis) {\n                var opts = axis.options;\n                if (opts.mode === 'log') {\n                    axis.tickGenerator = function (axis) {\n                        var noTicks = 11;\n                        return logTickGenerator(plot, axis, noTicks);\n                    };\n                    if (typeof axis.options.tickFormatter !== 'function') {\n                        axis.options.tickFormatter = logTickFormatter;\n                    }\n                    axis.options.transform = opts.inverted ? invertedLogTransform : logTransform;\n                    axis.options.inverseTransform = opts.inverted ? invertedLogInverseTransform : logInverseTransform;\n                    axis.options.autoScaleMargin = 0;\n                    plot.hooks.setRange.push(setDataminRange);\n                } else if (opts.inverted) {\n                    axis.options.transform = invertedTransform;\n                    axis.options.inverseTransform = invertedTransform;\n                }\n            });\n        });\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'log',\n        version: '0.1'\n    });\n\n    $.plot.logTicksGenerator = logTickGenerator;\n    $.plot.logTickFormatter = logTickFormatter;\n})(jQuery);\n","/* Flot plugin that adds some extra symbols for plotting points.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe symbols are accessed as strings through the standard symbol options:\n\n    series: {\n        points: {\n            symbol: \"square\" // or \"diamond\", \"triangle\", \"cross\", \"plus\", \"ellipse\", \"rectangle\"\n        }\n    }\n\n*/\n\n(function ($) {\n    // we normalize the area of each symbol so it is approximately the\n    // same as a circle of the given radius\n\n    var square = function (ctx, x, y, radius, shadow) {\n            // pi * r^2 = (2s)^2  =>  s = r * sqrt(pi)/2\n            var size = radius * Math.sqrt(Math.PI) / 2;\n            ctx.rect(x - size, y - size, size + size, size + size);\n        },\n        rectangle = function (ctx, x, y, radius, shadow) {\n            // pi * r^2 = (2s)^2  =>  s = r * sqrt(pi)/2\n            var size = radius * Math.sqrt(Math.PI) / 2;\n            ctx.rect(x - size, y - size, size + size, size + size);\n        },\n        diamond = function (ctx, x, y, radius, shadow) {\n            // pi * r^2 = 2s^2  =>  s = r * sqrt(pi/2)\n            var size = radius * Math.sqrt(Math.PI / 2);\n            ctx.moveTo(x - size, y);\n            ctx.lineTo(x, y - size);\n            ctx.lineTo(x + size, y);\n            ctx.lineTo(x, y + size);\n            ctx.lineTo(x - size, y);\n            ctx.lineTo(x, y - size);\n        },\n        triangle = function (ctx, x, y, radius, shadow) {\n            // pi * r^2 = 1/2 * s^2 * sin (pi / 3)  =>  s = r * sqrt(2 * pi / sin(pi / 3))\n            var size = radius * Math.sqrt(2 * Math.PI / Math.sin(Math.PI / 3));\n            var height = size * Math.sin(Math.PI / 3);\n            ctx.moveTo(x - size / 2, y + height / 2);\n            ctx.lineTo(x + size / 2, y + height / 2);\n            if (!shadow) {\n                ctx.lineTo(x, y - height / 2);\n                ctx.lineTo(x - size / 2, y + height / 2);\n                ctx.lineTo(x + size / 2, y + height / 2);\n            }\n        },\n        cross = function (ctx, x, y, radius, shadow) {\n            // pi * r^2 = (2s)^2  =>  s = r * sqrt(pi)/2\n            var size = radius * Math.sqrt(Math.PI) / 2;\n            ctx.moveTo(x - size, y - size);\n            ctx.lineTo(x + size, y + size);\n            ctx.moveTo(x - size, y + size);\n            ctx.lineTo(x + size, y - size);\n        },\n        ellipse = function(ctx, x, y, radius, shadow, fill) {\n            if (!shadow) {\n                ctx.moveTo(x + radius, y);\n                ctx.arc(x, y, radius, 0, Math.PI * 2, false);\n            }\n        },\n        plus = function (ctx, x, y, radius, shadow) {\n            var size = radius * Math.sqrt(Math.PI / 2);\n            ctx.moveTo(x - size, y);\n            ctx.lineTo(x + size, y);\n            ctx.moveTo(x, y + size);\n            ctx.lineTo(x, y - size);\n        },\n        handlers = {\n            square: square,\n            rectangle: rectangle,\n            diamond: diamond,\n            triangle: triangle,\n            cross: cross,\n            ellipse: ellipse,\n            plus: plus\n        };\n\n    square.fill = true;\n    rectangle.fill = true;\n    diamond.fill = true;\n    triangle.fill = true;\n    ellipse.fill = true;\n\n    function init(plot) {\n        plot.drawSymbol = handlers;\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        name: 'symbols',\n        version: '1.0'\n    });\n})(jQuery);\n","/* Support for flat 1D data series.\n\nA 1D flat data series is a data series in the form of a regular 1D array. The\nmain reason for using a flat data series is that it performs better, consumes\nless memory and generates less garbage collection than the regular flot format.\n\nExample:\n\n    plot.setData([[[0,0], [1,1], [2,2], [3,3]]]); // regular flot format\n    plot.setData([{flatdata: true, data: [0, 1, 2, 3]}]); // flatdata format\n\nSet series.flatdata to true to enable this plugin.\n\nYou can use series.start to specify the starting index of the series (default is 0)\nYou can use series.step to specify the interval between consecutive indexes of the series (default is 1)\n*/\n\n/* global jQuery*/\n\n(function ($) {\n    'use strict';\n\n    function process1DRawData(plot, series, data, datapoints) {\n        if (series.flatdata === true) {\n            var start = series.start || 0;\n            var step = typeof series.step === 'number' ? series.step : 1;\n            datapoints.pointsize = 2;\n            for (var i = 0, j = 0; i < data.length; i++, j += 2) {\n                datapoints.points[j] = start + (i * step);\n                datapoints.points[j + 1] = data[i];\n            }\n            if (datapoints.points !== undefined) {\n                datapoints.points.length = data.length * 2;\n            } else {\n                datapoints.points = [];\n            }\n        }\n    }\n\n    $.plot.plugins.push({\n        init: function(plot) {\n            plot.hooks.processRawData.push(process1DRawData);\n        },\n        name: 'flatdata',\n        version: '0.0.2'\n    });\n})(jQuery);\n","/* Flot plugin for adding the ability to pan and zoom the plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nCopyright (c) 2016 Ciprian Ceteras.\nCopyright (c) 2017 Raluca Portase.\nLicensed under the MIT license.\n\n*/\n\n/**\n## jquery.flot.navigate.js\n\nThis flot plugin is used for adding the ability to pan and zoom the plot.\nA higher level overview is available at [interactions](interactions.md) documentation.\n\nThe default behaviour is scrollwheel up/down to zoom in, drag\nto pan. The plugin defines plot.zoom({ center }), plot.zoomOut() and\nplot.pan( offset ) so you easily can add custom controls. It also fires\n\"plotpan\" and \"plotzoom\" events, useful for synchronizing plots.\n\nThe plugin supports these options:\n```js\n    zoom: {\n        interactive: false,\n        active: false,\n        amount: 1.5         // 2 = 200% (zoom in), 0.5 = 50% (zoom out)\n    }\n\n    pan: {\n        interactive: false,\n        active: false,\n        cursor: \"move\",     // CSS mouse cursor value used when dragging, e.g. \"pointer\"\n        frameRate: 60,\n        mode: \"smart\"       // enable smart pan mode\n    }\n\n    xaxis: {\n        axisZoom: true, //zoom axis when mouse over it is allowed\n        plotZoom: true, //zoom axis is allowed for plot zoom\n        axisPan: true, //pan axis when mouse over it is allowed\n        plotPan: true, //pan axis is allowed for plot pan\n        panRange: [undefined, undefined], // no limit on pan range, or [min, max] in axis units\n        zoomRange: [undefined, undefined], // no limit on zoom range, or [closest zoom, furthest zoom] in axis units\n    }\n\n    yaxis: {\n        axisZoom: true, //zoom axis when mouse over it is allowed\n        plotZoom: true, //zoom axis is allowed for plot zoom\n        axisPan: true, //pan axis when mouse over it is allowed\n        plotPan: true //pan axis is allowed for plot pan\n        panRange: [undefined, undefined], // no limit on pan range, or [min, max] in axis units\n        zoomRange: [undefined, undefined], // no limit on zoom range, or [closest zoom, furthest zoom] in axis units\n    }\n```\n**interactive** enables the built-in drag/click behaviour. If you enable\ninteractive for pan, then you'll have a basic plot that supports moving\naround; the same for zoom.\n\n**active** is true after a touch tap on plot. This enables plot navigation.\nOnce activated, zoom and pan cannot be deactivated. When the plot becomes active,\n\"plotactivated\" event is triggered.\n\n**amount** specifies the default amount to zoom in (so 1.5 = 150%) relative to\nthe current viewport.\n\n**cursor** is a standard CSS mouse cursor string used for visual feedback to the\nuser when dragging.\n\n**frameRate** specifies the maximum number of times per second the plot will\nupdate itself while the user is panning around on it (set to null to disable\nintermediate pans, the plot will then not update until the mouse button is\nreleased).\n\n**mode** a string specifies the pan mode for mouse interaction. Accepted values:\n'manual': no pan hint or direction snapping;\n'smart': The graph shows pan hint bar and the pan movement will snap\nto one direction when the drag direction is close to it;\n'smartLock'. The graph shows pan hint bar and the pan movement will always\nsnap to a direction that the drag diorection started with.\n\nExample API usage:\n```js\n    plot = $.plot(...);\n\n    // zoom default amount in on the pixel ( 10, 20 )\n    plot.zoom({ center: { left: 10, top: 20 } });\n\n    // zoom out again\n    plot.zoomOut({ center: { left: 10, top: 20 } });\n\n    // zoom 200% in on the pixel (10, 20)\n    plot.zoom({ amount: 2, center: { left: 10, top: 20 } });\n\n    // pan 100 pixels to the left (changing x-range in a positive way) and 20 down\n    plot.pan({ left: -100, top: 20 })\n```\n\nHere, \"center\" specifies where the center of the zooming should happen. Note\nthat this is defined in pixel space, not the space of the data points (you can\nuse the p2c helpers on the axes in Flot to help you convert between these).\n\n**amount** is the amount to zoom the viewport relative to the current range, so\n1 is 100% (i.e. no change), 1.5 is 150% (zoom in), 0.7 is 70% (zoom out). You\ncan set the default in the options.\n*/\n\n/* eslint-enable */\n(function($) {\n    'use strict';\n\n    var options = {\n        zoom: {\n            interactive: false,\n            active: false,\n            amount: 1.5 // how much to zoom relative to current position, 2 = 200% (zoom in), 0.5 = 50% (zoom out)\n        },\n        pan: {\n            interactive: false,\n            active: false,\n            cursor: \"move\",\n            frameRate: 60,\n            mode: 'smart'\n        },\n        recenter: {\n            interactive: true\n        },\n        xaxis: {\n            axisZoom: true, //zoom axis when mouse over it is allowed\n            plotZoom: true, //zoom axis is allowed for plot zoom\n            axisPan: true, //pan axis when mouse over it is allowed\n            plotPan: true, //pan axis is allowed for plot pan\n            panRange: [undefined, undefined], // no limit on pan range, or [min, max] in axis units\n            zoomRange: [undefined, undefined] // no limit on zoom range, or [closest zoom, furthest zoom] in axis units\n        },\n        yaxis: {\n            axisZoom: true,\n            plotZoom: true,\n            axisPan: true,\n            plotPan: true,\n            panRange: [undefined, undefined], // no limit on pan range, or [min, max] in axis units\n            zoomRange: [undefined, undefined] // no limit on zoom range, or [closest zoom, furthest zoom] in axis units\n        }\n    };\n\n    var saturated = $.plot.saturated;\n    var browser = $.plot.browser;\n    var SNAPPING_CONSTANT = $.plot.uiConstants.SNAPPING_CONSTANT;\n    var PANHINT_LENGTH_CONSTANT = $.plot.uiConstants.PANHINT_LENGTH_CONSTANT;\n\n    function init(plot) {\n        plot.hooks.processOptions.push(initNevigation);\n    }\n\n    function initNevigation(plot, options) {\n        var panAxes = null;\n        var canDrag = false;\n        var useManualPan = options.pan.mode === 'manual',\n            smartPanLock = options.pan.mode === 'smartLock',\n            useSmartPan = smartPanLock || options.pan.mode === 'smart';\n\n        function onZoomClick(e, zoomOut, amount) {\n            var page = browser.getPageXY(e);\n\n            var c = plot.offset();\n            c.left = page.X - c.left;\n            c.top = page.Y - c.top;\n\n            var ec = plot.getPlaceholder().offset();\n            ec.left = page.X - ec.left;\n            ec.top = page.Y - ec.top;\n\n            var axes = plot.getXAxes().concat(plot.getYAxes()).filter(function (axis) {\n                var box = axis.box;\n                if (box !== undefined) {\n                    return (ec.left > box.left) && (ec.left < box.left + box.width) &&\n                        (ec.top > box.top) && (ec.top < box.top + box.height);\n                }\n            });\n\n            if (axes.length === 0) {\n                axes = undefined;\n            }\n\n            if (zoomOut) {\n                plot.zoomOut({\n                    center: c,\n                    axes: axes,\n                    amount: amount\n                });\n            } else {\n                plot.zoom({\n                    center: c,\n                    axes: axes,\n                    amount: amount\n                });\n            }\n        }\n\n        var prevCursor = 'default',\n            panHint = null,\n            panTimeout = null,\n            plotState,\n            prevDragPosition = { x: 0, y: 0 },\n            isPanAction = false;\n\n        function onMouseWheel(e, delta) {\n            var maxAbsoluteDeltaOnMac = 1,\n                isMacScroll = Math.abs(e.originalEvent.deltaY) <= maxAbsoluteDeltaOnMac,\n                defaultNonMacScrollAmount = null,\n                macMagicRatio = 50,\n                amount = isMacScroll ? 1 + Math.abs(e.originalEvent.deltaY) / macMagicRatio : defaultNonMacScrollAmount;\n\n            if (isPanAction) {\n                onDragEnd(e);\n            }\n\n            if (plot.getOptions().zoom.active) {\n                e.preventDefault();\n                onZoomClick(e, delta < 0, amount);\n                return false;\n            }\n        }\n\n        plot.navigationState = function(startPageX, startPageY) {\n            var axes = this.getAxes();\n            var result = {};\n            Object.keys(axes).forEach(function(axisName) {\n                var axis = axes[axisName];\n                result[axisName] = {\n                    navigationOffset: { below: axis.options.offset.below || 0,\n                        above: axis.options.offset.above || 0},\n                    axisMin: axis.min,\n                    axisMax: axis.max,\n                    diagMode: false\n                }\n            });\n\n            result.startPageX = startPageX || 0;\n            result.startPageY = startPageY || 0;\n            return result;\n        }\n\n        function onMouseDown(e) {\n            canDrag = true;\n        }\n\n        function onMouseUp(e) {\n            canDrag = false;\n        }\n\n        function isLeftMouseButtonPressed(e) {\n            return e.button === 0;\n        }\n\n        function onDragStart(e) {\n            if (!canDrag || !isLeftMouseButtonPressed(e)) {\n                return false;\n            }\n\n            isPanAction = true;\n            var page = browser.getPageXY(e);\n\n            var ec = plot.getPlaceholder().offset();\n            ec.left = page.X - ec.left;\n            ec.top = page.Y - ec.top;\n\n            panAxes = plot.getXAxes().concat(plot.getYAxes()).filter(function (axis) {\n                var box = axis.box;\n                if (box !== undefined) {\n                    return (ec.left > box.left) && (ec.left < box.left + box.width) &&\n                        (ec.top > box.top) && (ec.top < box.top + box.height);\n                }\n            });\n\n            if (panAxes.length === 0) {\n                panAxes = undefined;\n            }\n\n            var c = plot.getPlaceholder().css('cursor');\n            if (c) {\n                prevCursor = c;\n            }\n\n            plot.getPlaceholder().css('cursor', plot.getOptions().pan.cursor);\n\n            if (useSmartPan) {\n                plotState = plot.navigationState(page.X, page.Y);\n            } else if (useManualPan) {\n                prevDragPosition.x = page.X;\n                prevDragPosition.y = page.Y;\n            }\n        }\n\n        function onDrag(e) {\n            if (!isPanAction) {\n                return;\n            }\n\n            var page = browser.getPageXY(e);\n            var frameRate = plot.getOptions().pan.frameRate;\n\n            if (frameRate === -1) {\n                if (useSmartPan) {\n                    plot.smartPan({\n                        x: plotState.startPageX - page.X,\n                        y: plotState.startPageY - page.Y\n                    }, plotState, panAxes, false, smartPanLock);\n                } else if (useManualPan) {\n                    plot.pan({\n                        left: prevDragPosition.x - page.X,\n                        top: prevDragPosition.y - page.Y,\n                        axes: panAxes\n                    });\n                    prevDragPosition.x = page.X;\n                    prevDragPosition.y = page.Y;\n                }\n                return;\n            }\n\n            if (panTimeout || !frameRate) return;\n\n            panTimeout = setTimeout(function() {\n                if (useSmartPan) {\n                    plot.smartPan({\n                        x: plotState.startPageX - page.X,\n                        y: plotState.startPageY - page.Y\n                    }, plotState, panAxes, false, smartPanLock);\n                } else if (useManualPan) {\n                    plot.pan({\n                        left: prevDragPosition.x - page.X,\n                        top: prevDragPosition.y - page.Y,\n                        axes: panAxes\n                    });\n                    prevDragPosition.x = page.X;\n                    prevDragPosition.y = page.Y;\n                }\n\n                panTimeout = null;\n            }, 1 / frameRate * 1000);\n        }\n\n        function onDragEnd(e) {\n            if (!isPanAction) {\n                return;\n            }\n\n            if (panTimeout) {\n                clearTimeout(panTimeout);\n                panTimeout = null;\n            }\n\n            isPanAction = false;\n            var page = browser.getPageXY(e);\n\n            plot.getPlaceholder().css('cursor', prevCursor);\n\n            if (useSmartPan) {\n                plot.smartPan({\n                    x: plotState.startPageX - page.X,\n                    y: plotState.startPageY - page.Y\n                }, plotState, panAxes, false, smartPanLock);\n                plot.smartPan.end();\n            } else if (useManualPan) {\n                plot.pan({\n                    left: prevDragPosition.x - page.X,\n                    top: prevDragPosition.y - page.Y,\n                    axes: panAxes\n                });\n                prevDragPosition.x = 0;\n                prevDragPosition.y = 0;\n            }\n        }\n\n        function onDblClick(e) {\n            plot.activate();\n            var o = plot.getOptions()\n\n            if (!o.recenter.interactive) { return; }\n\n            var axes = plot.getTouchedAxis(e.clientX, e.clientY),\n                event;\n\n            plot.recenter({ axes: axes[0] ? axes : null });\n\n            if (axes[0]) {\n                event = new $.Event('re-center', { detail: {\n                    axisTouched: axes[0]\n                }});\n            } else {\n                event = new $.Event('re-center', { detail: e });\n            }\n            plot.getPlaceholder().trigger(event);\n        }\n\n        function onClick(e) {\n            plot.activate();\n\n            if (isPanAction) {\n                onDragEnd(e);\n            }\n\n            return false;\n        }\n\n        plot.activate = function() {\n            var o = plot.getOptions();\n            if (!o.pan.active || !o.zoom.active) {\n                o.pan.active = true;\n                o.zoom.active = true;\n                plot.getPlaceholder().trigger(\"plotactivated\", [plot]);\n            }\n        }\n\n        function bindEvents(plot, eventHolder) {\n            var o = plot.getOptions();\n            if (o.zoom.interactive) {\n                eventHolder.mousewheel(onMouseWheel);\n            }\n\n            if (o.pan.interactive) {\n                plot.addEventHandler(\"dragstart\", onDragStart, eventHolder, 0);\n                plot.addEventHandler(\"drag\", onDrag, eventHolder, 0);\n                plot.addEventHandler(\"dragend\", onDragEnd, eventHolder, 0);\n                eventHolder.bind(\"mousedown\", onMouseDown);\n                eventHolder.bind(\"mouseup\", onMouseUp);\n            }\n\n            eventHolder.dblclick(onDblClick);\n            eventHolder.click(onClick);\n        }\n\n        plot.zoomOut = function(args) {\n            if (!args) {\n                args = {};\n            }\n\n            if (!args.amount) {\n                args.amount = plot.getOptions().zoom.amount;\n            }\n\n            args.amount = 1 / args.amount;\n            plot.zoom(args);\n        };\n\n        plot.zoom = function(args) {\n            if (!args) {\n                args = {};\n            }\n\n            var c = args.center,\n                amount = args.amount || plot.getOptions().zoom.amount,\n                w = plot.width(),\n                h = plot.height(),\n                axes = args.axes || plot.getAxes();\n\n            if (!c) {\n                c = {\n                    left: w / 2,\n                    top: h / 2\n                };\n            }\n\n            var xf = c.left / w,\n                yf = c.top / h,\n                minmax = {\n                    x: {\n                        min: c.left - xf * w / amount,\n                        max: c.left + (1 - xf) * w / amount\n                    },\n                    y: {\n                        min: c.top - yf * h / amount,\n                        max: c.top + (1 - yf) * h / amount\n                    }\n                };\n\n            for (var key in axes) {\n                if (!axes.hasOwnProperty(key)) {\n                    continue;\n                }\n\n                var axis = axes[key],\n                    opts = axis.options,\n                    min = minmax[axis.direction].min,\n                    max = minmax[axis.direction].max,\n                    navigationOffset = axis.options.offset;\n\n                //skip axis without axisZoom when zooming only on certain axis or axis without plotZoom for zoom on entire plot\n                if ((!opts.axisZoom && args.axes) || (!args.axes && !opts.plotZoom)) {\n                    continue;\n                }\n\n                min = $.plot.saturated.saturate(axis.c2p(min));\n                max = $.plot.saturated.saturate(axis.c2p(max));\n                if (min > max) {\n                    // make sure min < max\n                    var tmp = min;\n                    min = max;\n                    max = tmp;\n                }\n\n                // test for zoom limits zoomRange: [min,max]\n                if (opts.zoomRange) {\n                    // zoomed in too far\n                    if (max - min < opts.zoomRange[0]) {\n                        continue;\n                    }\n                    // zoomed out to far\n                    if (max - min > opts.zoomRange[1]) {\n                        continue;\n                    }\n                }\n\n                var offsetBelow = $.plot.saturated.saturate(navigationOffset.below - (axis.min - min));\n                var offsetAbove = $.plot.saturated.saturate(navigationOffset.above - (axis.max - max));\n                opts.offset = { below: offsetBelow, above: offsetAbove };\n            };\n\n            plot.setupGrid(true);\n            plot.draw();\n\n            if (!args.preventEvent) {\n                plot.getPlaceholder().trigger(\"plotzoom\", [plot, args]);\n            }\n        };\n\n        plot.pan = function(args) {\n            var delta = {\n                x: +args.left,\n                y: +args.top\n            };\n\n            if (isNaN(delta.x)) delta.x = 0;\n            if (isNaN(delta.y)) delta.y = 0;\n\n            $.each(args.axes || plot.getAxes(), function(_, axis) {\n                var opts = axis.options,\n                    d = delta[axis.direction];\n\n                //skip axis without axisPan when panning only on certain axis or axis without plotPan for pan the entire plot\n                if ((!opts.axisPan && args.axes) || (!opts.plotPan && !args.axes)) {\n                    return;\n                }\n\n                // calc min delta (revealing left edge of plot)\n                var minD = axis.p2c(opts.panRange[0]) - axis.p2c(axis.min);\n                // calc max delta (revealing right edge of plot)\n                var maxD = axis.p2c(opts.panRange[1]) - axis.p2c(axis.max);\n                // limit delta to min or max if enabled\n                if (opts.panRange[0] !== undefined && d >= maxD) d = maxD;\n                if (opts.panRange[1] !== undefined && d <= minD) d = minD;\n\n                if (d !== 0) {\n                    var navigationOffsetBelow = saturated.saturate(axis.c2p(axis.p2c(axis.min) + d) - axis.c2p(axis.p2c(axis.min))),\n                        navigationOffsetAbove = saturated.saturate(axis.c2p(axis.p2c(axis.max) + d) - axis.c2p(axis.p2c(axis.max)));\n\n                    if (!isFinite(navigationOffsetBelow)) {\n                        navigationOffsetBelow = 0;\n                    }\n\n                    if (!isFinite(navigationOffsetAbove)) {\n                        navigationOffsetAbove = 0;\n                    }\n\n                    opts.offset = {\n                        below: saturated.saturate(navigationOffsetBelow + (opts.offset.below || 0)),\n                        above: saturated.saturate(navigationOffsetAbove + (opts.offset.above || 0))\n                    };\n                }\n            });\n\n            plot.setupGrid(true);\n            plot.draw();\n            if (!args.preventEvent) {\n                plot.getPlaceholder().trigger(\"plotpan\", [plot, args]);\n            }\n        };\n\n        plot.recenter = function(args) {\n            $.each(args.axes || plot.getAxes(), function(_, axis) {\n                if (args.axes) {\n                    if (this.direction === 'x') {\n                        axis.options.offset = { below: 0 };\n                    } else if (this.direction === 'y') {\n                        axis.options.offset = { above: 0 };\n                    }\n                } else {\n                    axis.options.offset = { below: 0, above: 0 };\n                }\n            });\n            plot.setupGrid(true);\n            plot.draw();\n        };\n\n        var shouldSnap = function(delta) {\n            return (Math.abs(delta.y) < SNAPPING_CONSTANT && Math.abs(delta.x) >= SNAPPING_CONSTANT) ||\n                (Math.abs(delta.x) < SNAPPING_CONSTANT && Math.abs(delta.y) >= SNAPPING_CONSTANT);\n        }\n\n        // adjust delta so the pan action is constrained on the vertical or horizontal direction\n        // it the movements in the other direction are small\n        var adjustDeltaToSnap = function(delta) {\n            if (Math.abs(delta.x) < SNAPPING_CONSTANT && Math.abs(delta.y) >= SNAPPING_CONSTANT) {\n                return {x: 0, y: delta.y};\n            }\n\n            if (Math.abs(delta.y) < SNAPPING_CONSTANT && Math.abs(delta.x) >= SNAPPING_CONSTANT) {\n                return {x: delta.x, y: 0};\n            }\n\n            return delta;\n        }\n\n        var lockedDirection = null;\n        var lockDeltaDirection = function(delta) {\n            if (!lockedDirection && Math.max(Math.abs(delta.x), Math.abs(delta.y)) >= SNAPPING_CONSTANT) {\n                lockedDirection = Math.abs(delta.x) < Math.abs(delta.y) ? 'y' : 'x';\n            }\n\n            switch (lockedDirection) {\n                case 'x':\n                    return { x: delta.x, y: 0 };\n                case 'y':\n                    return { x: 0, y: delta.y };\n                default:\n                    return { x: 0, y: 0 };\n            }\n        }\n\n        var isDiagonalMode = function(delta) {\n            if (Math.abs(delta.x) > 0 && Math.abs(delta.y) > 0) {\n                return true;\n            }\n            return false;\n        }\n\n        var restoreAxisOffset = function(axes, initialState, delta) {\n            var axis;\n            Object.keys(axes).forEach(function(axisName) {\n                axis = axes[axisName];\n                if (delta[axis.direction] === 0) {\n                    axis.options.offset.below = initialState[axisName].navigationOffset.below;\n                    axis.options.offset.above = initialState[axisName].navigationOffset.above;\n                }\n            });\n        }\n\n        var prevDelta = { x: 0, y: 0 };\n        plot.smartPan = function(delta, initialState, panAxes, preventEvent, smartLock) {\n            var snap = smartLock ? true : shouldSnap(delta),\n                axes = plot.getAxes(),\n                opts;\n            delta = smartLock ? lockDeltaDirection(delta) : adjustDeltaToSnap(delta);\n\n            if (isDiagonalMode(delta)) {\n                initialState.diagMode = true;\n            }\n\n            if (snap && initialState.diagMode === true) {\n                initialState.diagMode = false;\n                restoreAxisOffset(axes, initialState, delta);\n            }\n\n            if (snap) {\n                panHint = {\n                    start: {\n                        x: initialState.startPageX - plot.offset().left + plot.getPlotOffset().left,\n                        y: initialState.startPageY - plot.offset().top + plot.getPlotOffset().top\n                    },\n                    end: {\n                        x: initialState.startPageX - delta.x - plot.offset().left + plot.getPlotOffset().left,\n                        y: initialState.startPageY - delta.y - plot.offset().top + plot.getPlotOffset().top\n                    }\n                }\n            } else {\n                panHint = {\n                    start: {\n                        x: initialState.startPageX - plot.offset().left + plot.getPlotOffset().left,\n                        y: initialState.startPageY - plot.offset().top + plot.getPlotOffset().top\n                    },\n                    end: false\n                }\n            }\n\n            if (isNaN(delta.x)) delta.x = 0;\n            if (isNaN(delta.y)) delta.y = 0;\n\n            if (panAxes) {\n                axes = panAxes;\n            }\n\n            var axis, axisMin, axisMax, p, d;\n            Object.keys(axes).forEach(function(axisName) {\n                axis = axes[axisName];\n                axisMin = axis.min;\n                axisMax = axis.max;\n                opts = axis.options;\n\n                d = delta[axis.direction];\n                p = prevDelta[axis.direction];\n\n                //skip axis without axisPan when panning only on certain axis or axis without plotPan for pan the entire plot\n                if ((!opts.axisPan && panAxes) || (!panAxes && !opts.plotPan)) {\n                    return;\n                }\n\n                // calc min delta (revealing left edge of plot)\n                var minD = p + axis.p2c(opts.panRange[0]) - axis.p2c(axisMin);\n                // calc max delta (revealing right edge of plot)\n                var maxD = p + axis.p2c(opts.panRange[1]) - axis.p2c(axisMax);\n                // limit delta to min or max if enabled\n                if (opts.panRange[0] !== undefined && d >= maxD) d = maxD;\n                if (opts.panRange[1] !== undefined && d <= minD) d = minD;\n\n                if (d !== 0) {\n                    var navigationOffsetBelow = saturated.saturate(axis.c2p(axis.p2c(axisMin) - (p - d)) - axis.c2p(axis.p2c(axisMin))),\n                        navigationOffsetAbove = saturated.saturate(axis.c2p(axis.p2c(axisMax) - (p - d)) - axis.c2p(axis.p2c(axisMax)));\n\n                    if (!isFinite(navigationOffsetBelow)) {\n                        navigationOffsetBelow = 0;\n                    }\n\n                    if (!isFinite(navigationOffsetAbove)) {\n                        navigationOffsetAbove = 0;\n                    }\n\n                    axis.options.offset.below = saturated.saturate(navigationOffsetBelow + (axis.options.offset.below || 0));\n                    axis.options.offset.above = saturated.saturate(navigationOffsetAbove + (axis.options.offset.above || 0));\n                }\n            });\n\n            prevDelta = delta;\n            plot.setupGrid(true);\n            plot.draw();\n\n            if (!preventEvent) {\n                plot.getPlaceholder().trigger(\"plotpan\", [plot, delta, panAxes, initialState]);\n            }\n        };\n\n        plot.smartPan.end = function() {\n            panHint = null;\n            lockedDirection = null;\n            prevDelta = { x: 0, y: 0 };\n            plot.triggerRedrawOverlay();\n        }\n\n        function shutdown(plot, eventHolder) {\n            eventHolder.unbind(\"mousewheel\", onMouseWheel);\n            eventHolder.unbind(\"mousedown\", onMouseDown);\n            eventHolder.unbind(\"mouseup\", onMouseUp);\n            eventHolder.unbind(\"dragstart\", onDragStart);\n            eventHolder.unbind(\"drag\", onDrag);\n            eventHolder.unbind(\"dragend\", onDragEnd);\n            eventHolder.unbind(\"dblclick\", onDblClick);\n            eventHolder.unbind(\"click\", onClick);\n\n            if (panTimeout) clearTimeout(panTimeout);\n        }\n\n        function drawOverlay(plot, ctx) {\n            if (panHint) {\n                ctx.strokeStyle = 'rgba(96, 160, 208, 0.7)';\n                ctx.lineWidth = 2;\n                ctx.lineJoin = \"round\";\n                var startx = Math.round(panHint.start.x),\n                    starty = Math.round(panHint.start.y),\n                    endx, endy;\n\n                if (panAxes) {\n                    if (panAxes[0].direction === 'x') {\n                        endy = Math.round(panHint.start.y);\n                        endx = Math.round(panHint.end.x);\n                    } else if (panAxes[0].direction === 'y') {\n                        endx = Math.round(panHint.start.x);\n                        endy = Math.round(panHint.end.y);\n                    }\n                } else {\n                    endx = Math.round(panHint.end.x);\n                    endy = Math.round(panHint.end.y);\n                }\n\n                ctx.beginPath();\n\n                if (panHint.end === false) {\n                    ctx.moveTo(startx, starty - PANHINT_LENGTH_CONSTANT);\n                    ctx.lineTo(startx, starty + PANHINT_LENGTH_CONSTANT);\n\n                    ctx.moveTo(startx + PANHINT_LENGTH_CONSTANT, starty);\n                    ctx.lineTo(startx - PANHINT_LENGTH_CONSTANT, starty);\n                } else {\n                    var dirX = starty === endy;\n\n                    ctx.moveTo(startx - (dirX ? 0 : PANHINT_LENGTH_CONSTANT), starty - (dirX ? PANHINT_LENGTH_CONSTANT : 0));\n                    ctx.lineTo(startx + (dirX ? 0 : PANHINT_LENGTH_CONSTANT), starty + (dirX ? PANHINT_LENGTH_CONSTANT : 0));\n\n                    ctx.moveTo(startx, starty);\n                    ctx.lineTo(endx, endy);\n\n                    ctx.moveTo(endx - (dirX ? 0 : PANHINT_LENGTH_CONSTANT), endy - (dirX ? PANHINT_LENGTH_CONSTANT : 0));\n                    ctx.lineTo(endx + (dirX ? 0 : PANHINT_LENGTH_CONSTANT), endy + (dirX ? PANHINT_LENGTH_CONSTANT : 0));\n                }\n\n                ctx.stroke();\n            }\n        }\n\n        plot.getTouchedAxis = function(touchPointX, touchPointY) {\n            var ec = plot.getPlaceholder().offset();\n            ec.left = touchPointX - ec.left;\n            ec.top = touchPointY - ec.top;\n\n            var axis = plot.getXAxes().concat(plot.getYAxes()).filter(function (axis) {\n                var box = axis.box;\n                if (box !== undefined) {\n                    return (ec.left > box.left) && (ec.left < box.left + box.width) &&\n                            (ec.top > box.top) && (ec.top < box.top + box.height);\n                }\n            });\n\n            return axis;\n        }\n\n        plot.hooks.drawOverlay.push(drawOverlay);\n        plot.hooks.bindEvents.push(bindEvents);\n        plot.hooks.shutdown.push(shutdown);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'navigate',\n        version: '1.3'\n    });\n})(jQuery);\n","/* Flot plugin for computing bottoms for filled line and bar charts.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe case: you've got two series that you want to fill the area between. In Flot\nterms, you need to use one as the fill bottom of the other. You can specify the\nbottom of each data point as the third coordinate manually, or you can use this\nplugin to compute it for you.\n\nIn order to name the other series, you need to give it an id, like this:\n\n    var dataset = [\n        { data: [ ... ], id: \"foo\" } ,         // use default bottom\n        { data: [ ... ], fillBetween: \"foo\" }, // use first dataset as bottom\n    ];\n\n    $.plot($(\"#placeholder\"), dataset, { lines: { show: true, fill: true }});\n\nAs a convenience, if the id given is a number that doesn't appear as an id in\nthe series, it is interpreted as the index in the array instead (so fillBetween:\n0 can also mean the first series).\n\nInternally, the plugin modifies the datapoints in each series. For line series,\nextra data points might be inserted through interpolation. Note that at points\nwhere the bottom line is not defined (due to a null point or start/end of line),\nthe current line will show a gap too. The algorithm comes from the\njquery.flot.stack.js plugin, possibly some code could be shared.\n\n*/\n\n(function ($) {\n    var options = {\n        series: {\n            fillBetween: null // or number\n        }\n    };\n\n    function init(plot) {\n        function findBottomSeries(s, allseries) {\n            var i;\n\n            for (i = 0; i < allseries.length; ++i) {\n                if (allseries[ i ].id === s.fillBetween) {\n                    return allseries[ i ];\n                }\n            }\n\n            if (typeof s.fillBetween === \"number\") {\n                if (s.fillBetween < 0 || s.fillBetween >= allseries.length) {\n                    return null;\n                }\n                return allseries[ s.fillBetween ];\n            }\n\n            return null;\n        }\n\n        function computeFormat(plot, s, data, datapoints) {\n            if (s.fillBetween == null) {\n                return;\n            }\n\n            var format = datapoints.format;\n            var plotHasId = function(id) {\n                var plotData = plot.getData();\n                for (var i = 0; i < plotData.length; i++) {\n                    if (plotData[i].id === id) {\n                        return true;\n                    }\n                }\n\n                return false;\n            }\n\n            if (!format) {\n                format = [];\n\n                format.push({\n                    x: true,\n                    number: true,\n                    computeRange: s.xaxis.options.autoScale !== 'none',\n                    required: true\n                });\n                format.push({\n                    y: true,\n                    number: true,\n                    computeRange: s.yaxis.options.autoScale !== 'none',\n                    required: true\n                });\n\n                if (s.fillBetween !== undefined && s.fillBetween !== '' && plotHasId(s.fillBetween) && s.fillBetween !== s.id) {\n                    format.push({\n                        x: false,\n                        y: true,\n                        number: true,\n                        required: false,\n                        computeRange: s.yaxis.options.autoScale !== 'none',\n                        defaultValue: 0\n                    });\n                }\n\n                datapoints.format = format;\n            }\n        }\n\n        function computeFillBottoms(plot, s, datapoints) {\n            if (s.fillBetween == null) {\n                return;\n            }\n\n            var other = findBottomSeries(s, plot.getData());\n\n            if (!other) {\n                return;\n            }\n\n            var ps = datapoints.pointsize,\n                points = datapoints.points,\n                otherps = other.datapoints.pointsize,\n                otherpoints = other.datapoints.points,\n                newpoints = [],\n                px, py, intery, qx, qy, bottom,\n                withlines = s.lines.show,\n                withbottom = ps > 2 && datapoints.format[2].y,\n                withsteps = withlines && s.lines.steps,\n                fromgap = true,\n                i = 0,\n                j = 0,\n                l, m;\n\n            while (true) {\n                if (i >= points.length) {\n                    break;\n                }\n\n                l = newpoints.length;\n\n                if (points[ i ] == null) {\n                    // copy gaps\n                    for (m = 0; m < ps; ++m) {\n                        newpoints.push(points[ i + m ]);\n                    }\n\n                    i += ps;\n                } else if (j >= otherpoints.length) {\n                    // for lines, we can't use the rest of the points\n                    if (!withlines) {\n                        for (m = 0; m < ps; ++m) {\n                            newpoints.push(points[ i + m ]);\n                        }\n                    }\n\n                    i += ps;\n                } else if (otherpoints[ j ] == null) {\n                    // oops, got a gap\n                    for (m = 0; m < ps; ++m) {\n                        newpoints.push(null);\n                    }\n\n                    fromgap = true;\n                    j += otherps;\n                } else {\n                    // cases where we actually got two points\n                    px = points[ i ];\n                    py = points[ i + 1 ];\n                    qx = otherpoints[ j ];\n                    qy = otherpoints[ j + 1 ];\n                    bottom = 0;\n\n                    if (px === qx) {\n                        for (m = 0; m < ps; ++m) {\n                            newpoints.push(points[ i + m ]);\n                        }\n\n                        //newpoints[ l + 1 ] += qy;\n                        bottom = qy;\n\n                        i += ps;\n                        j += otherps;\n                    } else if (px > qx) {\n                        // we got past point below, might need to\n                        // insert interpolated extra point\n\n                        if (withlines && i > 0 && points[ i - ps ] != null) {\n                            intery = py + (points[ i - ps + 1 ] - py) * (qx - px) / (points[ i - ps ] - px);\n                            newpoints.push(qx);\n                            newpoints.push(intery);\n                            for (m = 2; m < ps; ++m) {\n                                newpoints.push(points[ i + m ]);\n                            }\n                            bottom = qy;\n                        }\n\n                        j += otherps;\n                    } else {\n                        // px < qx\n                        // if we come from a gap, we just skip this point\n\n                        if (fromgap && withlines) {\n                            i += ps;\n                            continue;\n                        }\n\n                        for (m = 0; m < ps; ++m) {\n                            newpoints.push(points[ i + m ]);\n                        }\n\n                        // we might be able to interpolate a point below,\n                        // this can give us a better y\n\n                        if (withlines && j > 0 && otherpoints[ j - otherps ] != null) {\n                            bottom = qy + (otherpoints[ j - otherps + 1 ] - qy) * (px - qx) / (otherpoints[ j - otherps ] - qx);\n                        }\n\n                        //newpoints[l + 1] += bottom;\n\n                        i += ps;\n                    }\n\n                    fromgap = false;\n\n                    if (l !== newpoints.length && withbottom) {\n                        newpoints[ l + 2 ] = bottom;\n                    }\n                }\n\n                // maintain the line steps invariant\n\n                if (withsteps && l !== newpoints.length && l > 0 &&\n                    newpoints[ l ] !== null &&\n                    newpoints[ l ] !== newpoints[ l - ps ] &&\n                    newpoints[ l + 1 ] !== newpoints[ l - ps + 1 ]) {\n                    for (m = 0; m < ps; ++m) {\n                        newpoints[ l + ps + m ] = newpoints[ l + m ];\n                    }\n                    newpoints[ l + 1 ] = newpoints[ l - ps + 1 ];\n                }\n            }\n\n            datapoints.points = newpoints;\n        }\n\n        plot.hooks.processRawData.push(computeFormat);\n        plot.hooks.processDatapoints.push(computeFillBottoms);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: \"fillbetween\",\n        version: \"1.0\"\n    });\n})(jQuery);\n","/* Flot plugin for plotting textual data or categories.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nConsider a dataset like [[\"February\", 34], [\"March\", 20], ...]. This plugin\nallows you to plot such a dataset directly.\n\nTo enable it, you must specify mode: \"categories\" on the axis with the textual\nlabels, e.g.\n\n    $.plot(\"#placeholder\", data, { xaxis: { mode: \"categories\" } });\n\nBy default, the labels are ordered as they are met in the data series. If you\nneed a different ordering, you can specify \"categories\" on the axis options\nand list the categories there:\n\n    xaxis: {\n        mode: \"categories\",\n        categories: [\"February\", \"March\", \"April\"]\n    }\n\nIf you need to customize the distances between the categories, you can specify\n\"categories\" as an object mapping labels to values\n\n    xaxis: {\n        mode: \"categories\",\n        categories: { \"February\": 1, \"March\": 3, \"April\": 4 }\n    }\n\nIf you don't specify all categories, the remaining categories will be numbered\nfrom the max value plus 1 (with a spacing of 1 between each).\n\nInternally, the plugin works by transforming the input data through an auto-\ngenerated mapping where the first category becomes 0, the second 1, etc.\nHence, a point like [\"February\", 34] becomes [0, 34] internally in Flot (this\nis visible in hover and click events that return numbers rather than the\ncategory labels). The plugin also overrides the tick generator to spit out the\ncategories as ticks instead of the values.\n\nIf you need to map a value back to its label, the mapping is always accessible\nas \"categories\" on the axis object, e.g. plot.getAxes().xaxis.categories.\n\n*/\n\n(function ($) {\n    var options = {\n        xaxis: {\n            categories: null\n        },\n        yaxis: {\n            categories: null\n        }\n    };\n\n    function processRawData(plot, series, data, datapoints) {\n        // if categories are enabled, we need to disable\n        // auto-transformation to numbers so the strings are intact\n        // for later processing\n\n        var xCategories = series.xaxis.options.mode === \"categories\",\n            yCategories = series.yaxis.options.mode === \"categories\";\n\n        if (!(xCategories || yCategories)) {\n            return;\n        }\n\n        var format = datapoints.format;\n\n        if (!format) {\n            // FIXME: auto-detection should really not be defined here\n            var s = series;\n            format = [];\n            format.push({ x: true, number: true, required: true, computeRange: true});\n            format.push({ y: true, number: true, required: true, computeRange: true });\n\n            if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                var autoScale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                format.push({ y: true, number: true, required: false, defaultValue: 0, computeRange: autoScale });\n                if (s.bars.horizontal) {\n                    delete format[format.length - 1].y;\n                    format[format.length - 1].x = true;\n                }\n            }\n\n            datapoints.format = format;\n        }\n\n        for (var m = 0; m < format.length; ++m) {\n            if (format[m].x && xCategories) {\n                format[m].number = false;\n            }\n\n            if (format[m].y && yCategories) {\n                format[m].number = false;\n                format[m].computeRange = false;\n            }\n        }\n    }\n\n    function getNextIndex(categories) {\n        var index = -1;\n\n        for (var v in categories) {\n            if (categories[v] > index) {\n                index = categories[v];\n            }\n        }\n\n        return index + 1;\n    }\n\n    function categoriesTickGenerator(axis) {\n        var res = [];\n        for (var label in axis.categories) {\n            var v = axis.categories[label];\n            if (v >= axis.min && v <= axis.max) {\n                res.push([v, label]);\n            }\n        }\n\n        res.sort(function (a, b) { return a[0] - b[0]; });\n\n        return res;\n    }\n\n    function setupCategoriesForAxis(series, axis, datapoints) {\n        if (series[axis].options.mode !== \"categories\") {\n            return;\n        }\n\n        if (!series[axis].categories) {\n            // parse options\n            var c = {}, o = series[axis].options.categories || {};\n            if ($.isArray(o)) {\n                for (var i = 0; i < o.length; ++i) {\n                    c[o[i]] = i;\n                }\n            } else {\n                for (var v in o) {\n                    c[v] = o[v];\n                }\n            }\n\n            series[axis].categories = c;\n        }\n\n        // fix ticks\n        if (!series[axis].options.ticks) {\n            series[axis].options.ticks = categoriesTickGenerator;\n        }\n\n        transformPointsOnAxis(datapoints, axis, series[axis].categories);\n    }\n\n    function transformPointsOnAxis(datapoints, axis, categories) {\n        // go through the points, transforming them\n        var points = datapoints.points,\n            ps = datapoints.pointsize,\n            format = datapoints.format,\n            formatColumn = axis.charAt(0),\n            index = getNextIndex(categories);\n\n        for (var i = 0; i < points.length; i += ps) {\n            if (points[i] == null) {\n                continue;\n            }\n\n            for (var m = 0; m < ps; ++m) {\n                var val = points[i + m];\n\n                if (val == null || !format[m][formatColumn]) {\n                    continue;\n                }\n\n                if (!(val in categories)) {\n                    categories[val] = index;\n                    ++index;\n                }\n\n                points[i + m] = categories[val];\n            }\n        }\n    }\n\n    function processDatapoints(plot, series, datapoints) {\n        setupCategoriesForAxis(series, \"xaxis\", datapoints);\n        setupCategoriesForAxis(series, \"yaxis\", datapoints);\n    }\n\n    function init(plot) {\n        plot.hooks.processRawData.push(processRawData);\n        plot.hooks.processDatapoints.push(processDatapoints);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'categories',\n        version: '1.0'\n    });\n})(jQuery);\n","/* Flot plugin for stacking data sets rather than overlaying them.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin assumes the data is sorted on x (or y if stacking horizontally).\nFor line charts, it is assumed that if a line has an undefined gap (from a\nnull point), then the line above it should have the same gap - insert zeros\ninstead of \"null\" if you want another behaviour. This also holds for the start\nand end of the chart. Note that stacking a mix of positive and negative values\nin most instances doesn't make sense (so it looks weird).\n\nTwo or more series are stacked when their \"stack\" attribute is set to the same\nkey (which can be any number or string or just \"true\"). To specify the default\nstack, you can set the stack option like this:\n\n    series: {\n        stack: null/false, true, or a key (number/string)\n    }\n\nYou can also specify it for a single series, like this:\n\n    $.plot( $(\"#placeholder\"), [{\n        data: [ ... ],\n        stack: true\n    }])\n\nThe stacking order is determined by the order of the data series in the array\n(later series end up on top of the previous).\n\nInternally, the plugin modifies the datapoints in each series, adding an\noffset to the y value. For line series, extra data points are inserted through\ninterpolation. If there's a second y value, it's also adjusted (e.g for bar\ncharts or filled areas).\n\n*/\n\n(function ($) {\n    var options = {\n        series: { stack: null } // or number/string\n    };\n\n    function init(plot) {\n        function findMatchingSeries(s, allseries) {\n            var res = null;\n            for (var i = 0; i < allseries.length; ++i) {\n                if (s === allseries[i]) break;\n\n                if (allseries[i].stack === s.stack) {\n                    res = allseries[i];\n                }\n            }\n\n            return res;\n        }\n\n        function addBottomPoints (s, datapoints) {\n            var formattedPoints = [];\n            for (var i = 0; i < datapoints.points.length; i += 2) {\n                formattedPoints.push(datapoints.points[i]);\n                formattedPoints.push(datapoints.points[i + 1]);\n                formattedPoints.push(0);\n            }\n\n            datapoints.format.push({\n                x: s.bars.horizontal,\n                y: !s.bars.horizontal,\n                number: true,\n                required: false,\n                computeRange: s.yaxis.options.autoScale !== 'none',\n                defaultValue: 0\n            });\n            datapoints.points = formattedPoints;\n            datapoints.pointsize = 3;\n        }\n\n        function stackData(plot, s, datapoints) {\n            if (s.stack == null || s.stack === false) return;\n\n            var needsBottom = s.bars.show || (s.lines.show && s.lines.fill);\n            var hasBottom = datapoints.pointsize > 2 && (s.bars.horizontal ? datapoints.format[2].x : datapoints.format[2].y);\n            // Series data is missing bottom points - need to format\n            if (needsBottom && !hasBottom) {\n                addBottomPoints(s, datapoints);\n            }\n\n            var other = findMatchingSeries(s, plot.getData());\n            if (!other) return;\n\n            var ps = datapoints.pointsize,\n                points = datapoints.points,\n                otherps = other.datapoints.pointsize,\n                otherpoints = other.datapoints.points,\n                newpoints = [],\n                px, py, intery, qx, qy, bottom,\n                withlines = s.lines.show,\n                horizontal = s.bars.horizontal,\n                withsteps = withlines && s.lines.steps,\n                fromgap = true,\n                keyOffset = horizontal ? 1 : 0,\n                accumulateOffset = horizontal ? 0 : 1,\n                i = 0, j = 0, l, m;\n\n            while (true) {\n                if (i >= points.length) break;\n\n                l = newpoints.length;\n\n                if (points[i] == null) {\n                    // copy gaps\n                    for (m = 0; m < ps; ++m) {\n                        newpoints.push(points[i + m]);\n                    }\n\n                    i += ps;\n                } else if (j >= otherpoints.length) {\n                    // for lines, we can't use the rest of the points\n                    if (!withlines) {\n                        for (m = 0; m < ps; ++m) {\n                            newpoints.push(points[i + m]);\n                        }\n                    }\n\n                    i += ps;\n                } else if (otherpoints[j] == null) {\n                    // oops, got a gap\n                    for (m = 0; m < ps; ++m) {\n                        newpoints.push(null);\n                    }\n\n                    fromgap = true;\n                    j += otherps;\n                } else {\n                    // cases where we actually got two points\n                    px = points[i + keyOffset];\n                    py = points[i + accumulateOffset];\n                    qx = otherpoints[j + keyOffset];\n                    qy = otherpoints[j + accumulateOffset];\n                    bottom = 0;\n\n                    if (px === qx) {\n                        for (m = 0; m < ps; ++m) {\n                            newpoints.push(points[i + m]);\n                        }\n\n                        newpoints[l + accumulateOffset] += qy;\n                        bottom = qy;\n\n                        i += ps;\n                        j += otherps;\n                    } else if (px > qx) {\n                        // we got past point below, might need to\n                        // insert interpolated extra point\n                        if (withlines && i > 0 && points[i - ps] != null) {\n                            intery = py + (points[i - ps + accumulateOffset] - py) * (qx - px) / (points[i - ps + keyOffset] - px);\n                            newpoints.push(qx);\n                            newpoints.push(intery + qy);\n                            for (m = 2; m < ps; ++m) {\n                                newpoints.push(points[i + m]);\n                            }\n\n                            bottom = qy;\n                        }\n\n                        j += otherps;\n                    } else { // px < qx\n                        if (fromgap && withlines) {\n                            // if we come from a gap, we just skip this point\n                            i += ps;\n                            continue;\n                        }\n\n                        for (m = 0; m < ps; ++m) {\n                            newpoints.push(points[i + m]);\n                        }\n\n                        // we might be able to interpolate a point below,\n                        // this can give us a better y\n                        if (withlines && j > 0 && otherpoints[j - otherps] != null) {\n                            bottom = qy + (otherpoints[j - otherps + accumulateOffset] - qy) * (px - qx) / (otherpoints[j - otherps + keyOffset] - qx);\n                        }\n\n                        newpoints[l + accumulateOffset] += bottom;\n\n                        i += ps;\n                    }\n\n                    fromgap = false;\n\n                    if (l !== newpoints.length && needsBottom) {\n                        newpoints[l + 2] += bottom;\n                    }\n                }\n\n                // maintain the line steps invariant\n                if (withsteps && l !== newpoints.length && l > 0 &&\n                    newpoints[l] !== null &&\n                    newpoints[l] !== newpoints[l - ps] &&\n                    newpoints[l + 1] !== newpoints[l - ps + 1]) {\n                    for (m = 0; m < ps; ++m) {\n                        newpoints[l + ps + m] = newpoints[l + m];\n                    }\n\n                    newpoints[l + 1] = newpoints[l - ps + 1];\n                }\n            }\n\n            datapoints.points = newpoints;\n        }\n\n        plot.hooks.processDatapoints.push(stackData);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'stack',\n        version: '1.2'\n    });\n})(jQuery);\n","/* global jQuery */\n\n(function($) {\n    'use strict';\n\n    var options = {\n        zoom: {\n            enableTouch: false\n        },\n        pan: {\n            enableTouch: false,\n            touchMode: 'manual'\n        },\n        recenter: {\n            enableTouch: true\n        }\n    };\n\n    var ZOOM_DISTANCE_MARGIN = $.plot.uiConstants.ZOOM_DISTANCE_MARGIN;\n\n    function init(plot) {\n        plot.hooks.processOptions.push(initTouchNavigation);\n    }\n\n    function initTouchNavigation(plot, options) {\n        var gestureState = {\n                zoomEnable: false,\n                prevDistance: null,\n                prevTapTime: 0,\n                prevPanPosition: { x: 0, y: 0 },\n                prevTapPosition: { x: 0, y: 0 }\n            },\n            navigationState = {\n                prevTouchedAxis: 'none',\n                currentTouchedAxis: 'none',\n                touchedAxis: null,\n                navigationConstraint: 'unconstrained',\n                initialState: null\n            },\n            useManualPan = options.pan.interactive && options.pan.touchMode === 'manual',\n            smartPanLock = options.pan.touchMode === 'smartLock',\n            useSmartPan = options.pan.interactive && (smartPanLock || options.pan.touchMode === 'smart'),\n            pan, pinch, doubleTap;\n\n        function bindEvents(plot, eventHolder) {\n            var o = plot.getOptions();\n\n            if (o.zoom.interactive && o.zoom.enableTouch) {\n                eventHolder[0].addEventListener('pinchstart', pinch.start, false);\n                eventHolder[0].addEventListener('pinchdrag', pinch.drag, false);\n                eventHolder[0].addEventListener('pinchend', pinch.end, false);\n            }\n\n            if (o.pan.interactive && o.pan.enableTouch) {\n                eventHolder[0].addEventListener('panstart', pan.start, false);\n                eventHolder[0].addEventListener('pandrag', pan.drag, false);\n                eventHolder[0].addEventListener('panend', pan.end, false);\n            }\n\n            if ((o.recenter.interactive && o.recenter.enableTouch)) {\n                eventHolder[0].addEventListener('doubletap', doubleTap.recenterPlot, false);\n            }\n        }\n\n        function shutdown(plot, eventHolder) {\n            eventHolder[0].removeEventListener('panstart', pan.start);\n            eventHolder[0].removeEventListener('pandrag', pan.drag);\n            eventHolder[0].removeEventListener('panend', pan.end);\n            eventHolder[0].removeEventListener('pinchstart', pinch.start);\n            eventHolder[0].removeEventListener('pinchdrag', pinch.drag);\n            eventHolder[0].removeEventListener('pinchend', pinch.end);\n            eventHolder[0].removeEventListener('doubletap', doubleTap.recenterPlot);\n        }\n\n        pan = {\n            start: function(e) {\n                presetNavigationState(e, 'pan', gestureState);\n                updateData(e, 'pan', gestureState, navigationState);\n\n                if (useSmartPan) {\n                    var point = getPoint(e, 'pan');\n                    navigationState.initialState = plot.navigationState(point.x, point.y);\n                }\n            },\n\n            drag: function(e) {\n                presetNavigationState(e, 'pan', gestureState);\n\n                if (useSmartPan) {\n                    var point = getPoint(e, 'pan');\n                    plot.smartPan({\n                        x: navigationState.initialState.startPageX - point.x,\n                        y: navigationState.initialState.startPageY - point.y\n                    }, navigationState.initialState, navigationState.touchedAxis, false, smartPanLock);\n                } else if (useManualPan) {\n                    plot.pan({\n                        left: -delta(e, 'pan', gestureState).x,\n                        top: -delta(e, 'pan', gestureState).y,\n                        axes: navigationState.touchedAxis\n                    });\n                    updatePrevPanPosition(e, 'pan', gestureState, navigationState);\n                }\n            },\n\n            end: function(e) {\n                presetNavigationState(e, 'pan', gestureState);\n\n                if (useSmartPan) {\n                    plot.smartPan.end();\n                }\n\n                if (wasPinchEvent(e, gestureState)) {\n                    updateprevPanPosition(e, 'pan', gestureState, navigationState);\n                }\n            }\n        };\n\n        var pinchDragTimeout;\n        pinch = {\n            start: function(e) {\n                if (pinchDragTimeout) {\n                    clearTimeout(pinchDragTimeout);\n                    pinchDragTimeout = null;\n                }\n                presetNavigationState(e, 'pinch', gestureState);\n                setPrevDistance(e, gestureState);\n                updateData(e, 'pinch', gestureState, navigationState);\n            },\n\n            drag: function(e) {\n                if (pinchDragTimeout) {\n                    return;\n                }\n                pinchDragTimeout = setTimeout(function() {\n                    presetNavigationState(e, 'pinch', gestureState);\n                    plot.pan({\n                        left: -delta(e, 'pinch', gestureState).x,\n                        top: -delta(e, 'pinch', gestureState).y,\n                        axes: navigationState.touchedAxis\n                    });\n                    updatePrevPanPosition(e, 'pinch', gestureState, navigationState);\n\n                    var dist = pinchDistance(e);\n\n                    if (gestureState.zoomEnable || Math.abs(dist - gestureState.prevDistance) > ZOOM_DISTANCE_MARGIN) {\n                        zoomPlot(plot, e, gestureState, navigationState);\n\n                        //activate zoom mode\n                        gestureState.zoomEnable = true;\n                    }\n                    pinchDragTimeout = null;\n                }, 1000 / 60);\n            },\n\n            end: function(e) {\n                if (pinchDragTimeout) {\n                    clearTimeout(pinchDragTimeout);\n                    pinchDragTimeout = null;\n                }\n                presetNavigationState(e, 'pinch', gestureState);\n                gestureState.prevDistance = null;\n            }\n        };\n\n        doubleTap = {\n            recenterPlot: function(e) {\n                if (e && e.detail && e.detail.type === 'touchstart') {\n                    // only do not recenter for touch start;\n                    recenterPlotOnDoubleTap(plot, e, gestureState, navigationState);\n                }\n            }\n        };\n\n        if (options.pan.enableTouch === true || options.zoom.enableTouch === true) {\n            plot.hooks.bindEvents.push(bindEvents);\n            plot.hooks.shutdown.push(shutdown);\n        }\n\n        function presetNavigationState(e, gesture, gestureState) {\n            navigationState.touchedAxis = getAxis(plot, e, gesture, navigationState);\n            if (noAxisTouched(navigationState)) {\n                navigationState.navigationConstraint = 'unconstrained';\n            } else {\n                navigationState.navigationConstraint = 'axisConstrained';\n            }\n        }\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'navigateTouch',\n        version: '0.3'\n    });\n\n    function recenterPlotOnDoubleTap(plot, e, gestureState, navigationState) {\n        checkAxesForDoubleTap(plot, e, navigationState);\n        if ((navigationState.currentTouchedAxis === 'x' && navigationState.prevTouchedAxis === 'x') ||\n            (navigationState.currentTouchedAxis === 'y' && navigationState.prevTouchedAxis === 'y') ||\n            (navigationState.currentTouchedAxis === 'none' && navigationState.prevTouchedAxis === 'none')) {\n            var event;\n\n            plot.recenter({ axes: navigationState.touchedAxis });\n\n            if (navigationState.touchedAxis) {\n                event = new $.Event('re-center', { detail: { axisTouched: navigationState.touchedAxis } });\n            } else {\n                event = new $.Event('re-center', { detail: e });\n            }\n            plot.getPlaceholder().trigger(event);\n        }\n    }\n\n    function checkAxesForDoubleTap(plot, e, navigationState) {\n        var axis = plot.getTouchedAxis(e.detail.firstTouch.x, e.detail.firstTouch.y);\n        if (axis[0] !== undefined) {\n            navigationState.prevTouchedAxis = axis[0].direction;\n        }\n\n        axis = plot.getTouchedAxis(e.detail.secondTouch.x, e.detail.secondTouch.y);\n        if (axis[0] !== undefined) {\n            navigationState.touchedAxis = axis;\n            navigationState.currentTouchedAxis = axis[0].direction;\n        }\n\n        if (noAxisTouched(navigationState)) {\n            navigationState.touchedAxis = null;\n            navigationState.prevTouchedAxis = 'none';\n            navigationState.currentTouchedAxis = 'none';\n        }\n    }\n\n    function zoomPlot(plot, e, gestureState, navigationState) {\n        var offset = plot.offset(),\n            center = {\n                left: 0,\n                top: 0\n            },\n            zoomAmount = pinchDistance(e) / gestureState.prevDistance,\n            dist = pinchDistance(e);\n\n        center.left = getPoint(e, 'pinch').x - offset.left;\n        center.top = getPoint(e, 'pinch').y - offset.top;\n\n        // send the computed touched axis to the zoom function so that it only zooms on that one\n        plot.zoom({\n            center: center,\n            amount: zoomAmount,\n            axes: navigationState.touchedAxis\n        });\n        gestureState.prevDistance = dist;\n    }\n\n    function wasPinchEvent(e, gestureState) {\n        return (gestureState.zoomEnable && e.detail.touches.length === 1);\n    }\n\n    function getAxis(plot, e, gesture, navigationState) {\n        if (e.type === 'pinchstart') {\n            var axisTouch1 = plot.getTouchedAxis(e.detail.touches[0].pageX, e.detail.touches[0].pageY);\n            var axisTouch2 = plot.getTouchedAxis(e.detail.touches[1].pageX, e.detail.touches[1].pageY);\n\n            if (axisTouch1.length === axisTouch2.length && axisTouch1.toString() === axisTouch2.toString()) {\n                return axisTouch1;\n            }\n        } else if (e.type === 'panstart') {\n            return plot.getTouchedAxis(e.detail.touches[0].pageX, e.detail.touches[0].pageY);\n        } else if (e.type === 'pinchend') {\n            //update axis since instead on pinch, a pan event is made\n            return plot.getTouchedAxis(e.detail.touches[0].pageX, e.detail.touches[0].pageY);\n        } else {\n            return navigationState.touchedAxis;\n        }\n    }\n\n    function noAxisTouched(navigationState) {\n        return (!navigationState.touchedAxis || navigationState.touchedAxis.length === 0);\n    }\n\n    function setPrevDistance(e, gestureState) {\n        gestureState.prevDistance = pinchDistance(e);\n    }\n\n    function updateData(e, gesture, gestureState, navigationState) {\n        var axisDir,\n            point = getPoint(e, gesture);\n\n        switch (navigationState.navigationConstraint) {\n            case 'unconstrained':\n                navigationState.touchedAxis = null;\n                gestureState.prevTapPosition = {\n                    x: gestureState.prevPanPosition.x,\n                    y: gestureState.prevPanPosition.y\n                };\n                gestureState.prevPanPosition = {\n                    x: point.x,\n                    y: point.y\n                };\n                break;\n            case 'axisConstrained':\n                axisDir = navigationState.touchedAxis[0].direction;\n                navigationState.currentTouchedAxis = axisDir;\n                gestureState.prevTapPosition[axisDir] = gestureState.prevPanPosition[axisDir];\n                gestureState.prevPanPosition[axisDir] = point[axisDir];\n                break;\n            default:\n                break;\n        }\n    }\n\n    function distance(x1, y1, x2, y2) {\n        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n    }\n\n    function pinchDistance(e) {\n        var t1 = e.detail.touches[0],\n            t2 = e.detail.touches[1];\n        return distance(t1.pageX, t1.pageY, t2.pageX, t2.pageY);\n    }\n\n    function updatePrevPanPosition(e, gesture, gestureState, navigationState) {\n        var point = getPoint(e, gesture);\n\n        switch (navigationState.navigationConstraint) {\n            case 'unconstrained':\n                gestureState.prevPanPosition.x = point.x;\n                gestureState.prevPanPosition.y = point.y;\n                break;\n            case 'axisConstrained':\n                gestureState.prevPanPosition[navigationState.currentTouchedAxis] =\n                point[navigationState.currentTouchedAxis];\n                break;\n            default:\n                break;\n        }\n    }\n\n    function delta(e, gesture, gestureState) {\n        var point = getPoint(e, gesture);\n\n        return {\n            x: point.x - gestureState.prevPanPosition.x,\n            y: point.y - gestureState.prevPanPosition.y\n        }\n    }\n\n    function getPoint(e, gesture) {\n        if (gesture === 'pinch') {\n            return {\n                x: (e.detail.touches[0].pageX + e.detail.touches[1].pageX) / 2,\n                y: (e.detail.touches[0].pageY + e.detail.touches[1].pageY) / 2\n            }\n        } else {\n            return {\n                x: e.detail.touches[0].pageX,\n                y: e.detail.touches[0].pageY\n            }\n        }\n    }\n})(jQuery);\n","/* global jQuery */\n\n/**\n## jquery.flot.hover.js\n\nThis plugin is used for mouse hover and tap on a point of plot series.\nIt supports the following options:\n```js\ngrid: {\n    hoverable: false, //to trigger plothover event on mouse hover or tap on a point\n    clickable: false //to trigger plotclick event on mouse hover\n}\n```\n\nIt listens to native mouse move event or click, as well as artificial generated\ntap and touchevent.\n\nWhen the mouse is over a point or a tap on a point is performed, that point or\nthe correscponding bar will be highlighted and a \"plothover\" event will be generated.\n\nCustom \"touchevent\" is triggered when any touch interaction is made. Hover plugin\nhandles this events by unhighlighting all of the previously highlighted points and generates\n\"plothovercleanup\" event to notify any part that is handling plothover (for exemple to cleanup\nthe tooltip from webcharts).\n*/\n\n(function($) {\n    'use strict';\n\n    var options = {\n        grid: {\n            hoverable: false,\n            clickable: false\n        }\n    };\n\n    var browser = $.plot.browser;\n\n    var eventType = {\n        click: 'click',\n        hover: 'hover'\n    }\n\n    function init(plot) {\n        var lastMouseMoveEvent;\n        var highlights = [];\n\n        function bindEvents(plot, eventHolder) {\n            var o = plot.getOptions();\n\n            if (o.grid.hoverable || o.grid.clickable) {\n                eventHolder[0].addEventListener('touchevent', triggerCleanupEvent, false);\n                eventHolder[0].addEventListener('tap', generatePlothoverEvent, false);\n            }\n\n            if (o.grid.clickable) {\n                eventHolder.bind(\"click\", onClick);\n            }\n\n            if (o.grid.hoverable) {\n                eventHolder.bind(\"mousemove\", onMouseMove);\n\n                // Use bind, rather than .mouseleave, because we officially\n                // still support jQuery 1.2.6, which doesn't define a shortcut\n                // for mouseenter or mouseleave.  This was a bug/oversight that\n                // was fixed somewhere around 1.3.x.  We can return to using\n                // .mouseleave when we drop support for 1.2.6.\n\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\n            }\n        }\n\n        function shutdown(plot, eventHolder) {\n            eventHolder[0].removeEventListener('tap', generatePlothoverEvent);\n            eventHolder[0].removeEventListener('touchevent', triggerCleanupEvent);\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n            highlights = [];\n        }\n\n        function generatePlothoverEvent(e) {\n            var o = plot.getOptions(),\n                newEvent = new CustomEvent('mouseevent');\n\n            //transform from touch event to mouse event format\n            newEvent.pageX = e.detail.changedTouches[0].pageX;\n            newEvent.pageY = e.detail.changedTouches[0].pageY;\n            newEvent.clientX = e.detail.changedTouches[0].clientX;\n            newEvent.clientY = e.detail.changedTouches[0].clientY;\n\n            if (o.grid.hoverable) {\n                doTriggerClickHoverEvent(newEvent, eventType.hover, 30);\n            }\n            return false;\n        }\n\n        function doTriggerClickHoverEvent(event, eventType, searchDistance) {\n            var series = plot.getData();\n            if (event !== undefined &&\n                series.length > 0 &&\n                series[0].xaxis.c2p !== undefined &&\n                series[0].yaxis.c2p !== undefined) {\n                var eventToTrigger = \"plot\" + eventType;\n                var seriesFlag = eventType + \"able\";\n                triggerClickHoverEvent(eventToTrigger, event,\n                    function(i) {\n                        return series[i][seriesFlag] !== false;\n                    }, searchDistance);\n            }\n        }\n\n        function onMouseMove(e) {\n            lastMouseMoveEvent = e;\n            plot.getPlaceholder()[0].lastMouseMoveEvent = e;\n            doTriggerClickHoverEvent(e, eventType.hover);\n        }\n\n        function onMouseLeave(e) {\n            lastMouseMoveEvent = undefined;\n            plot.getPlaceholder()[0].lastMouseMoveEvent = undefined;\n            triggerClickHoverEvent(\"plothover\", e,\n                function(i) {\n                    return false;\n                });\n        }\n\n        function onClick(e) {\n            doTriggerClickHoverEvent(e, eventType.click);\n        }\n\n        function triggerCleanupEvent() {\n            plot.unhighlight();\n            plot.getPlaceholder().trigger('plothovercleanup');\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter, searchDistance) {\n            var options = plot.getOptions(),\n                offset = plot.offset(),\n                page = browser.getPageXY(event),\n                canvasX = page.X - offset.left,\n                canvasY = page.Y - offset.top,\n                pos = plot.c2p({\n                    left: canvasX,\n                    top: canvasY\n                }),\n                distance = searchDistance !== undefined ? searchDistance : options.grid.mouseActiveRadius;\n\n            pos.pageX = page.X;\n            pos.pageY = page.Y;\n\n            var items = plot.findNearbyItems(canvasX, canvasY, seriesFilter, distance);\n            var item = items[0];\n\n            for (let i = 1; i < items.length; ++i) {\n                if (item.distance === undefined ||\n                    items[i].distance < item.distance) {\n                    item = items[i];\n                }\n            }\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left, 10);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top, 10);\n            } else {\n                item = null;\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (let i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if ((h.auto === eventname &&\n                        !(item && h.series === item.series &&\n                            h.point[0] === item.datapoint[0] &&\n                            h.point[1] === item.datapoint[1])) || !item) {\n                        unhighlight(h.series, h.point);\n                    }\n                }\n\n                if (item) {\n                    highlight(item.series, item.datapoint, eventname);\n                }\n            }\n\n            plot.getPlaceholder().trigger(eventname, [pos, item, items]);\n        }\n\n        function highlight(s, point, auto) {\n            if (typeof s === \"number\") {\n                s = plot.getData()[s];\n            }\n\n            if (typeof point === \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i === -1) {\n                highlights.push({\n                    series: s,\n                    point: point,\n                    auto: auto\n                });\n\n                plot.triggerRedrawOverlay();\n            } else if (!auto) {\n                highlights[i].auto = false;\n            }\n        }\n\n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                plot.triggerRedrawOverlay();\n                return;\n            }\n\n            if (typeof s === \"number\") {\n                s = plot.getData()[s];\n            }\n\n            if (typeof point === \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i !== -1) {\n                highlights.splice(i, 1);\n\n                plot.triggerRedrawOverlay();\n            }\n        }\n\n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series === s &&\n                    h.point[0] === p[0] &&\n                    h.point[1] === p[1]) {\n                    return i;\n                }\n            }\n\n            return -1;\n        }\n\n        function processDatapoints() {\n            triggerCleanupEvent();\n            doTriggerClickHoverEvent(lastMouseMoveEvent, eventType.hover);\n        }\n\n        function setupGrid() {\n            doTriggerClickHoverEvent(lastMouseMoveEvent, eventType.hover);\n        }\n\n        function drawOverlay(plot, octx, overlay) {\n            var plotOffset = plot.getPlotOffset(),\n                i, hi;\n\n            octx.save();\n            octx.translate(plotOffset.left, plotOffset.top);\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show) drawBarHighlight(hi.series, hi.point, octx);\n                else drawPointHighlight(hi.series, hi.point, octx, plot);\n            }\n            octx.restore();\n        }\n\n        function drawPointHighlight(series, point, octx, plot) {\n            var x = point[0],\n                y = point[1],\n                axisx = series.xaxis,\n                axisy = series.yaxis,\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max) {\n                return;\n            }\n\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = highlightColor;\n            var radius = 1.5 * pointRadius;\n            x = axisx.p2c(x);\n            y = axisy.p2c(y);\n\n            octx.beginPath();\n            var symbol = series.points.symbol;\n            if (symbol === 'circle') {\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            } else if (typeof symbol === 'string' && plot.drawSymbol && plot.drawSymbol[symbol]) {\n                plot.drawSymbol[symbol](octx, x, y, radius, false);\n            }\n\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point, octx) {\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n                fillStyle = highlightColor,\n                barLeft;\n\n            var barWidth = series.bars.barWidth[0] || series.bars.barWidth;\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -barWidth;\n                    break;\n                default:\n                    barLeft = -barWidth / 2;\n            }\n\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = highlightColor;\n\n            var fillTowards = series.bars.fillTowards || 0,\n                bottom = fillTowards > series.yaxis.min ? Math.min(series.yaxis.max, fillTowards) : series.yaxis.min;\n\n            $.plot.drawSeries.drawBar(point[0], point[1], point[2] || bottom, barLeft, barLeft + barWidth,\n                function() {\n                    return fillStyle;\n                }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function initHover(plot, options) {\n            plot.highlight = highlight;\n            plot.unhighlight = unhighlight;\n            if (options.grid.hoverable || options.grid.clickable) {\n                plot.hooks.drawOverlay.push(drawOverlay);\n                plot.hooks.processDatapoints.push(processDatapoints);\n                plot.hooks.setupGrid.push(setupGrid);\n            }\n\n            lastMouseMoveEvent = plot.getPlaceholder()[0].lastMouseMoveEvent;\n        }\n\n        plot.hooks.bindEvents.push(bindEvents);\n        plot.hooks.shutdown.push(shutdown);\n        plot.hooks.processOptions.push(initHover);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'hover',\n        version: '0.1'\n    });\n})(jQuery);\n","\n/* global jQuery */\n\n(function($) {\n    'use strict';\n\n    var options = {\n        propagateSupportedGesture: false\n    };\n\n    function init(plot) {\n        plot.hooks.processOptions.push(initTouchNavigation);\n    }\n\n    function initTouchNavigation(plot, options) {\n        var gestureState = {\n                twoTouches: false,\n                currentTapStart: { x: 0, y: 0 },\n                currentTapEnd: { x: 0, y: 0 },\n                prevTap: { x: 0, y: 0 },\n                currentTap: { x: 0, y: 0 },\n                interceptedLongTap: false,\n                isUnsupportedGesture: false,\n                prevTapTime: null,\n                tapStartTime: null,\n                longTapTriggerId: null\n            },\n            maxDistanceBetweenTaps = 20,\n            maxIntervalBetweenTaps = 500,\n            maxLongTapDistance = 20,\n            minLongTapDuration = 1500,\n            pressedTapDuration = 125,\n            mainEventHolder;\n\n        function interpretGestures(e) {\n            var o = plot.getOptions();\n\n            if (!o.pan.active && !o.zoom.active) {\n                return;\n            }\n\n            updateOnMultipleTouches(e);\n            mainEventHolder.dispatchEvent(new CustomEvent('touchevent', { detail: e }));\n\n            if (isPinchEvent(e)) {\n                executeAction(e, 'pinch');\n            } else {\n                executeAction(e, 'pan');\n                if (!wasPinchEvent(e)) {\n                    if (isDoubleTap(e)) {\n                        executeAction(e, 'doubleTap');\n                    }\n                    executeAction(e, 'tap');\n                    executeAction(e, 'longTap');\n                }\n            }\n        }\n\n        function executeAction(e, gesture) {\n            switch (gesture) {\n                case 'pan':\n                    pan[e.type](e);\n                    break;\n                case 'pinch':\n                    pinch[e.type](e);\n                    break;\n                case 'doubleTap':\n                    doubleTap.onDoubleTap(e);\n                    break;\n                case 'longTap':\n                    longTap[e.type](e);\n                    break;\n                case 'tap':\n                    tap[e.type](e);\n                    break;\n            }\n        }\n\n        function bindEvents(plot, eventHolder) {\n            mainEventHolder = eventHolder[0];\n            eventHolder[0].addEventListener('touchstart', interpretGestures, false);\n            eventHolder[0].addEventListener('touchmove', interpretGestures, false);\n            eventHolder[0].addEventListener('touchend', interpretGestures, false);\n        }\n\n        function shutdown(plot, eventHolder) {\n            eventHolder[0].removeEventListener('touchstart', interpretGestures);\n            eventHolder[0].removeEventListener('touchmove', interpretGestures);\n            eventHolder[0].removeEventListener('touchend', interpretGestures);\n            if (gestureState.longTapTriggerId) {\n                clearTimeout(gestureState.longTapTriggerId);\n                gestureState.longTapTriggerId = null;\n            }\n        }\n\n        var pan = {\n            touchstart: function(e) {\n                updatePrevForDoubleTap();\n                updateCurrentForDoubleTap(e);\n                updateStateForLongTapStart(e);\n\n                mainEventHolder.dispatchEvent(new CustomEvent('panstart', { detail: e }));\n            },\n\n            touchmove: function(e) {\n                preventEventBehaviors(e);\n\n                updateCurrentForDoubleTap(e);\n                updateStateForLongTapEnd(e);\n\n                if (!gestureState.isUnsupportedGesture) {\n                    mainEventHolder.dispatchEvent(new CustomEvent('pandrag', { detail: e }));\n                }\n            },\n\n            touchend: function(e) {\n                preventEventBehaviors(e);\n\n                if (wasPinchEvent(e)) {\n                    mainEventHolder.dispatchEvent(new CustomEvent('pinchend', { detail: e }));\n                    mainEventHolder.dispatchEvent(new CustomEvent('panstart', { detail: e }));\n                } else if (noTouchActive(e)) {\n                    mainEventHolder.dispatchEvent(new CustomEvent('panend', { detail: e }));\n                }\n            }\n        };\n\n        var pinch = {\n            touchstart: function(e) {\n                mainEventHolder.dispatchEvent(new CustomEvent('pinchstart', { detail: e }));\n            },\n\n            touchmove: function(e) {\n                preventEventBehaviors(e);\n                gestureState.twoTouches = isPinchEvent(e);\n                if (!gestureState.isUnsupportedGesture) {\n                    mainEventHolder.dispatchEvent(new CustomEvent('pinchdrag', { detail: e }));\n                }\n            },\n\n            touchend: function(e) {\n                preventEventBehaviors(e);\n            }\n        };\n\n        var doubleTap = {\n            onDoubleTap: function(e) {\n                preventEventBehaviors(e);\n                mainEventHolder.dispatchEvent(new CustomEvent('doubletap', { detail: e }));\n            }\n        };\n\n        var longTap = {\n            touchstart: function(e) {\n                longTap.waitForLongTap(e);\n            },\n\n            touchmove: function(e) {\n            },\n\n            touchend: function(e) {\n                if (gestureState.longTapTriggerId) {\n                    clearTimeout(gestureState.longTapTriggerId);\n                    gestureState.longTapTriggerId = null;\n                }\n            },\n\n            isLongTap: function(e) {\n                var currentTime = new Date().getTime(),\n                    tapDuration = currentTime - gestureState.tapStartTime;\n                if (tapDuration >= minLongTapDuration && !gestureState.interceptedLongTap) {\n                    if (distance(gestureState.currentTapStart.x, gestureState.currentTapStart.y, gestureState.currentTapEnd.x, gestureState.currentTapEnd.y) < maxLongTapDistance) {\n                        gestureState.interceptedLongTap = true;\n                        return true;\n                    }\n                }\n                return false;\n            },\n\n            waitForLongTap: function(e) {\n                var longTapTrigger = function() {\n                    if (longTap.isLongTap(e)) {\n                        mainEventHolder.dispatchEvent(new CustomEvent('longtap', { detail: e }));\n                    }\n                    gestureState.longTapTriggerId = null;\n                };\n                if (!gestureState.longTapTriggerId) {\n                    gestureState.longTapTriggerId = setTimeout(longTapTrigger, minLongTapDuration);\n                }\n            }\n        };\n\n        var tap = {\n            touchstart: function(e) {\n                gestureState.tapStartTime = new Date().getTime();\n            },\n\n            touchmove: function(e) {\n            },\n\n            touchend: function(e) {\n                if (tap.isTap(e)) {\n                    mainEventHolder.dispatchEvent(new CustomEvent('tap', { detail: e }));\n                    preventEventBehaviors(e);\n                }\n            },\n\n            isTap: function(e) {\n                var currentTime = new Date().getTime(),\n                    tapDuration = currentTime - gestureState.tapStartTime;\n                if (tapDuration <= pressedTapDuration) {\n                    if (distance(gestureState.currentTapStart.x, gestureState.currentTapStart.y, gestureState.currentTapEnd.x, gestureState.currentTapEnd.y) < maxLongTapDistance) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        };\n\n        if (options.pan.enableTouch === true || options.zoom.enableTouch) {\n            plot.hooks.bindEvents.push(bindEvents);\n            plot.hooks.shutdown.push(shutdown);\n        };\n\n        function updatePrevForDoubleTap() {\n            gestureState.prevTap = {\n                x: gestureState.currentTap.x,\n                y: gestureState.currentTap.y\n            };\n        };\n\n        function updateCurrentForDoubleTap(e) {\n            gestureState.currentTap = {\n                x: e.touches[0].pageX,\n                y: e.touches[0].pageY\n            };\n        }\n\n        function updateStateForLongTapStart(e) {\n            gestureState.tapStartTime = new Date().getTime();\n            gestureState.interceptedLongTap = false;\n            gestureState.currentTapStart = {\n                x: e.touches[0].pageX,\n                y: e.touches[0].pageY\n            };\n            gestureState.currentTapEnd = {\n                x: e.touches[0].pageX,\n                y: e.touches[0].pageY\n            };\n        };\n\n        function updateStateForLongTapEnd(e) {\n            gestureState.currentTapEnd = {\n                x: e.touches[0].pageX,\n                y: e.touches[0].pageY\n            };\n        };\n\n        function isDoubleTap(e) {\n            var currentTime = new Date().getTime(),\n                intervalBetweenTaps = currentTime - gestureState.prevTapTime;\n\n            if (intervalBetweenTaps >= 0 && intervalBetweenTaps < maxIntervalBetweenTaps) {\n                if (distance(gestureState.prevTap.x, gestureState.prevTap.y, gestureState.currentTap.x, gestureState.currentTap.y) < maxDistanceBetweenTaps) {\n                    e.firstTouch = gestureState.prevTap;\n                    e.secondTouch = gestureState.currentTap;\n                    return true;\n                }\n            }\n            gestureState.prevTapTime = currentTime;\n            return false;\n        }\n\n        function preventEventBehaviors(e) {\n            if (!gestureState.isUnsupportedGesture) {\n                e.preventDefault();\n                if (!plot.getOptions().propagateSupportedGesture) {\n                    e.stopPropagation();\n                }\n            }\n        }\n\n        function distance(x1, y1, x2, y2) {\n            return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n        }\n\n        function noTouchActive(e) {\n            return (e.touches && e.touches.length === 0);\n        }\n\n        function wasPinchEvent(e) {\n            return (gestureState.twoTouches && e.touches.length === 1);\n        }\n\n        function updateOnMultipleTouches(e) {\n            if (e.touches.length >= 3) {\n                gestureState.isUnsupportedGesture = true;\n            } else {\n                gestureState.isUnsupportedGesture = false;\n            }\n        }\n\n        function isPinchEvent(e) {\n            if (e.touches && e.touches.length >= 2) {\n                if (e.touches[0].target === plot.getEventHolder() &&\n                    e.touches[1].target === plot.getEventHolder()) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'navigateTouch',\n        version: '0.3'\n    });\n})(jQuery);\n","/* Pretty handling of time axes.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n*/\n\n(function($) {\n    'use strict';\n\n    var options = {\n        xaxis: {\n            timezone: null, // \"browser\" for local to the client or timezone for timezone-js\n            timeformat: null, // format string to use\n            twelveHourClock: false, // 12 or 24 time in time mode\n            monthNames: null, // list of names of months\n            timeBase: 'seconds' // are the values in given in mircoseconds, milliseconds or seconds\n        },\n        yaxis: {\n            timeBase: 'seconds'\n        }\n    };\n\n    var floorInBase = $.plot.saturated.floorInBase;\n\n    // Method to provide microsecond support to Date like classes.\n    var CreateMicroSecondDate = function(DateType, microEpoch) {\n        var newDate = new DateType(microEpoch);\n\n        var oldSetTime = newDate.setTime.bind(newDate);\n        newDate.update = function(microEpoch) {\n            // Round epoch to 3 decimal accuracy\n            microEpoch = Math.round(microEpoch * 1000) / 1000;\n\n            oldSetTime(microEpoch);\n\n            // Microseconds are stored as integers\n            this.microseconds = 1000 * (microEpoch - Math.floor(microEpoch));\n        };\n\n        var oldGetTime = newDate.getTime.bind(newDate);\n        newDate.getTime = function () {\n            var microEpoch = oldGetTime() + this.microseconds / 1000;\n            return microEpoch;\n        };\n\n        newDate.setTime = function (microEpoch) {\n            this.update(microEpoch);\n        };\n\n        newDate.getMicroseconds = function() {\n            return this.microseconds;\n        };\n\n        newDate.setMicroseconds = function(microseconds) {\n            var epochWithoutMicroseconds = oldGetTime();\n            var newEpoch = epochWithoutMicroseconds + microseconds / 1000;\n            this.update(newEpoch);\n        };\n\n        newDate.setUTCMicroseconds = function(microseconds) { this.setMicroseconds(microseconds); }\n\n        newDate.getUTCMicroseconds = function() { return this.getMicroseconds(); }\n\n        newDate.microseconds = null;\n        newDate.microEpoch = null;\n        newDate.update(microEpoch);\n        return newDate;\n    }\n\n    // Returns a string with the date d formatted according to fmt.\n    // A subset of the Open Group's strftime format is supported.\n\n    function formatDate(d, fmt, monthNames, dayNames) {\n        if (typeof d.strftime === \"function\") {\n            return d.strftime(fmt);\n        }\n\n        var leftPad = function(n, pad) {\n            n = \"\" + n;\n            pad = \"\" + (pad == null ? \"0\" : pad);\n            return n.length === 1 ? pad + n : n;\n        };\n\n        var formatSubSeconds = function(milliseconds, microseconds, numberDecimalPlaces) {\n            var totalMicroseconds = milliseconds * 1000 + microseconds;\n            var formattedString;\n            if (numberDecimalPlaces < 6 && numberDecimalPlaces > 0) {\n                var magnitude = parseFloat('1e' + (numberDecimalPlaces - 6));\n                totalMicroseconds = Math.round(Math.round(totalMicroseconds * magnitude) / magnitude);\n                formattedString = ('00000' + totalMicroseconds).slice(-6, -(6 - numberDecimalPlaces));\n            } else {\n                totalMicroseconds = Math.round(totalMicroseconds)\n                formattedString = ('00000' + totalMicroseconds).slice(-6);\n            }\n            return formattedString;\n        };\n\n        var r = [];\n        var escape = false;\n        var hours = d.getHours();\n        var isAM = hours < 12;\n\n        if (!monthNames) {\n            monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        }\n\n        if (!dayNames) {\n            dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        }\n\n        var hours12;\n        if (hours > 12) {\n            hours12 = hours - 12;\n        } else if (hours === 0) {\n            hours12 = 12;\n        } else {\n            hours12 = hours;\n        }\n\n        var decimals = -1;\n        for (var i = 0; i < fmt.length; ++i) {\n            var c = fmt.charAt(i);\n\n            if (!isNaN(Number(c)) && Number(c) > 0) {\n                decimals = Number(c);\n            } else if (escape) {\n                switch (c) {\n                    case 'a': c = \"\" + dayNames[d.getDay()]; break;\n                    case 'b': c = \"\" + monthNames[d.getMonth()]; break;\n                    case 'd': c = leftPad(d.getDate()); break;\n                    case 'e': c = leftPad(d.getDate(), \" \"); break;\n                    case 'h': // For back-compat with 0.7; remove in 1.0\n                    case 'H': c = leftPad(hours); break;\n                    case 'I': c = leftPad(hours12); break;\n                    case 'l': c = leftPad(hours12, \" \"); break;\n                    case 'm': c = leftPad(d.getMonth() + 1); break;\n                    case 'M': c = leftPad(d.getMinutes()); break;\n                    // quarters not in Open Group's strftime specification\n                    case 'q':\n                        c = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n                    case 'S': c = leftPad(d.getSeconds()); break;\n                    case 's': c = \"\" + formatSubSeconds(d.getMilliseconds(), d.getMicroseconds(), decimals); break;\n                    case 'y': c = leftPad(d.getFullYear() % 100); break;\n                    case 'Y': c = \"\" + d.getFullYear(); break;\n                    case 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n                    case 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n                    case 'w': c = \"\" + d.getDay(); break;\n                }\n                r.push(c);\n                escape = false;\n            } else {\n                if (c === \"%\") {\n                    escape = true;\n                } else {\n                    r.push(c);\n                }\n            }\n        }\n\n        return r.join(\"\");\n    }\n\n    // To have a consistent view of time-based data independent of which time\n    // zone the client happens to be in we need a date-like object independent\n    // of time zones.  This is done through a wrapper that only calls the UTC\n    // versions of the accessor methods.\n\n    function makeUtcWrapper(d) {\n        function addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n            sourceObj[sourceMethod] = function() {\n                return targetObj[targetMethod].apply(targetObj, arguments);\n            };\n        }\n\n        var utc = {\n            date: d\n        };\n\n        // support strftime, if found\n        if (d.strftime !== undefined) {\n            addProxyMethod(utc, \"strftime\", d, \"strftime\");\n        }\n\n        addProxyMethod(utc, \"getTime\", d, \"getTime\");\n        addProxyMethod(utc, \"setTime\", d, \"setTime\");\n\n        var props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Minutes\", \"Month\", \"Seconds\", \"Milliseconds\", \"Microseconds\"];\n\n        for (var p = 0; p < props.length; p++) {\n            addProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n            addProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n        }\n\n        return utc;\n    }\n\n    // select time zone strategy.  This returns a date-like object tied to the\n    // desired timezone\n    function dateGenerator(ts, opts) {\n        var maxDateValue = 8640000000000000;\n\n        if (opts && opts.timeBase === 'seconds') {\n            ts *= 1000;\n        } else if (opts.timeBase === 'microseconds') {\n            ts /= 1000;\n        }\n\n        if (ts > maxDateValue) {\n            ts = maxDateValue;\n        } else if (ts < -maxDateValue) {\n            ts = -maxDateValue;\n        }\n\n        if (opts.timezone === \"browser\") {\n            return CreateMicroSecondDate(Date, ts);\n        } else if (!opts.timezone || opts.timezone === \"utc\") {\n            return makeUtcWrapper(CreateMicroSecondDate(Date, ts));\n        } else if (typeof timezoneJS !== \"undefined\" && typeof timezoneJS.Date !== \"undefined\") {\n            var d = CreateMicroSecondDate(timezoneJS.Date, ts);\n            // timezone-js is fickle, so be sure to set the time zone before\n            // setting the time.\n            d.setTimezone(opts.timezone);\n            d.setTime(ts);\n            return d;\n        } else {\n            return makeUtcWrapper(CreateMicroSecondDate(Date, ts));\n        }\n    }\n\n    // map of app. size of time units in seconds\n    var timeUnitSizeSeconds = {\n        \"microsecond\": 0.000001,\n        \"millisecond\": 0.001,\n        \"second\": 1,\n        \"minute\": 60,\n        \"hour\": 60 * 60,\n        \"day\": 24 * 60 * 60,\n        \"month\": 30 * 24 * 60 * 60,\n        \"quarter\": 3 * 30 * 24 * 60 * 60,\n        \"year\": 365.2425 * 24 * 60 * 60\n    };\n\n    // map of app. size of time units in milliseconds\n    var timeUnitSizeMilliseconds = {\n        \"microsecond\": 0.001,\n        \"millisecond\": 1,\n        \"second\": 1000,\n        \"minute\": 60 * 1000,\n        \"hour\": 60 * 60 * 1000,\n        \"day\": 24 * 60 * 60 * 1000,\n        \"month\": 30 * 24 * 60 * 60 * 1000,\n        \"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n        \"year\": 365.2425 * 24 * 60 * 60 * 1000\n    };\n\n    // map of app. size of time units in microseconds\n    var timeUnitSizeMicroseconds = {\n        \"microsecond\": 1,\n        \"millisecond\": 1000,\n        \"second\": 1000000,\n        \"minute\": 60 * 1000000,\n        \"hour\": 60 * 60 * 1000000,\n        \"day\": 24 * 60 * 60 * 1000000,\n        \"month\": 30 * 24 * 60 * 60 * 1000000,\n        \"quarter\": 3 * 30 * 24 * 60 * 60 * 1000000,\n        \"year\": 365.2425 * 24 * 60 * 60 * 1000000\n    };\n\n    // the allowed tick sizes, after 1 year we use\n    // an integer algorithm\n\n    var baseSpec = [\n        [1, \"microsecond\"], [2, \"microsecond\"], [5, \"microsecond\"], [10, \"microsecond\"],\n        [25, \"microsecond\"], [50, \"microsecond\"], [100, \"microsecond\"], [250, \"microsecond\"], [500, \"microsecond\"],\n        [1, \"millisecond\"], [2, \"millisecond\"], [5, \"millisecond\"], [10, \"millisecond\"],\n        [25, \"millisecond\"], [50, \"millisecond\"], [100, \"millisecond\"], [250, \"millisecond\"], [500, \"millisecond\"],\n        [1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n        [30, \"second\"],\n        [1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n        [30, \"minute\"],\n        [1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n        [8, \"hour\"], [12, \"hour\"],\n        [1, \"day\"], [2, \"day\"], [3, \"day\"],\n        [0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n        [2, \"month\"]\n    ];\n\n    // we don't know which variant(s) we'll need yet, but generating both is\n    // cheap\n\n    var specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n        [1, \"year\"]]);\n    var specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n        [1, \"year\"]]);\n\n    function dateTickGenerator(axis) {\n        var opts = axis.options,\n            ticks = [],\n            d = dateGenerator(axis.min, opts),\n            minSize = 0;\n\n        // make quarter use a possibility if quarters are\n        // mentioned in either of these options\n        var spec = (opts.tickSize && opts.tickSize[1] ===\n            \"quarter\") ||\n            (opts.minTickSize && opts.minTickSize[1] ===\n            \"quarter\") ? specQuarters : specMonths;\n\n        var timeUnitSize;\n        if (opts.timeBase === 'seconds') {\n            timeUnitSize = timeUnitSizeSeconds;\n        } else if (opts.timeBase === 'microseconds') {\n            timeUnitSize = timeUnitSizeMicroseconds;\n        } else {\n            timeUnitSize = timeUnitSizeMilliseconds;\n        }\n\n        if (opts.minTickSize !== null && opts.minTickSize !== undefined) {\n            if (typeof opts.tickSize === \"number\") {\n                minSize = opts.tickSize;\n            } else {\n                minSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n            }\n        }\n\n        for (var i = 0; i < spec.length - 1; ++i) {\n            if (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]] +\n                spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2 &&\n                spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n                break;\n            }\n        }\n\n        var size = spec[i][0];\n        var unit = spec[i][1];\n        // special-case the possibility of several years\n        if (unit === \"year\") {\n            // if given a minTickSize in years, just use it,\n            // ensuring that it's an integer\n\n            if (opts.minTickSize !== null && opts.minTickSize !== undefined && opts.minTickSize[1] === \"year\") {\n                size = Math.floor(opts.minTickSize[0]);\n            } else {\n                var magn = parseFloat('1e' + Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n                var norm = (axis.delta / timeUnitSize.year) / magn;\n\n                if (norm < 1.5) {\n                    size = 1;\n                } else if (norm < 3) {\n                    size = 2;\n                } else if (norm < 7.5) {\n                    size = 5;\n                } else {\n                    size = 10;\n                }\n\n                size *= magn;\n            }\n\n            // minimum size for years is 1\n\n            if (size < 1) {\n                size = 1;\n            }\n        }\n\n        axis.tickSize = opts.tickSize || [size, unit];\n        var tickSize = axis.tickSize[0];\n        unit = axis.tickSize[1];\n\n        var step = tickSize * timeUnitSize[unit];\n\n        if (unit === \"microsecond\") {\n            d.setMicroseconds(floorInBase(d.getMicroseconds(), tickSize));\n        } else if (unit === \"millisecond\") {\n            d.setMilliseconds(floorInBase(d.getMilliseconds(), tickSize));\n        } else if (unit === \"second\") {\n            d.setSeconds(floorInBase(d.getSeconds(), tickSize));\n        } else if (unit === \"minute\") {\n            d.setMinutes(floorInBase(d.getMinutes(), tickSize));\n        } else if (unit === \"hour\") {\n            d.setHours(floorInBase(d.getHours(), tickSize));\n        } else if (unit === \"month\") {\n            d.setMonth(floorInBase(d.getMonth(), tickSize));\n        } else if (unit === \"quarter\") {\n            d.setMonth(3 * floorInBase(d.getMonth() / 3,\n                tickSize));\n        } else if (unit === \"year\") {\n            d.setFullYear(floorInBase(d.getFullYear(), tickSize));\n        }\n\n        // reset smaller components\n\n        if (step >= timeUnitSize.millisecond) {\n            d.setMicroseconds(0);\n        }\n        if (step >= timeUnitSize.second) {\n            d.setMilliseconds(0);\n        }\n        if (step >= timeUnitSize.minute) {\n            d.setSeconds(0);\n        }\n        if (step >= timeUnitSize.hour) {\n            d.setMinutes(0);\n        }\n        if (step >= timeUnitSize.day) {\n            d.setHours(0);\n        }\n        if (step >= timeUnitSize.day * 4) {\n            d.setDate(1);\n        }\n        if (step >= timeUnitSize.month * 2) {\n            d.setMonth(floorInBase(d.getMonth(), 3));\n        }\n        if (step >= timeUnitSize.quarter * 2) {\n            d.setMonth(floorInBase(d.getMonth(), 6));\n        }\n        if (step >= timeUnitSize.year) {\n            d.setMonth(0);\n        }\n\n        var carry = 0;\n        var v = Number.NaN;\n        var v1000;\n        var prev;\n        do {\n            prev = v;\n            v1000 = d.getTime();\n            if (opts && opts.timeBase === 'seconds') {\n                v = v1000 / 1000;\n            } else if (opts && opts.timeBase === 'microseconds') {\n                v = v1000 * 1000;\n            } else {\n                v = v1000;\n            }\n\n            ticks.push(v);\n\n            if (unit === \"month\" || unit === \"quarter\") {\n                if (tickSize < 1) {\n                    // a bit complicated - we'll divide the\n                    // month/quarter up but we need to take\n                    // care of fractions so we don't end up in\n                    // the middle of a day\n                    d.setDate(1);\n                    var start = d.getTime();\n                    d.setMonth(d.getMonth() +\n                        (unit === \"quarter\" ? 3 : 1));\n                    var end = d.getTime();\n                    d.setTime((v + carry * timeUnitSize.hour + (end - start) * tickSize));\n                    carry = d.getHours();\n                    d.setHours(0);\n                } else {\n                    d.setMonth(d.getMonth() +\n                        tickSize * (unit === \"quarter\" ? 3 : 1));\n                }\n            } else if (unit === \"year\") {\n                d.setFullYear(d.getFullYear() + tickSize);\n            } else {\n                if (opts.timeBase === 'seconds') {\n                    d.setTime((v + step) * 1000);\n                } else if (opts.timeBase === 'microseconds') {\n                    d.setTime((v + step) / 1000);\n                } else {\n                    d.setTime(v + step);\n                }\n            }\n        } while (v < axis.max && v !== prev);\n\n        return ticks;\n    };\n\n    function init(plot) {\n        plot.hooks.processOptions.push(function (plot) {\n            $.each(plot.getAxes(), function(axisName, axis) {\n                var opts = axis.options;\n                if (opts.mode === \"time\") {\n                    axis.tickGenerator = dateTickGenerator;\n\n                    // if a tick formatter is already provided do not overwrite it\n                    if ('tickFormatter' in opts && typeof opts.tickFormatter === 'function') return;\n\n                    axis.tickFormatter = function (v, axis) {\n                        var d = dateGenerator(v, axis.options);\n\n                        // first check global format\n                        if (opts.timeformat != null) {\n                            return formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n                        }\n\n                        // possibly use quarters if quarters are mentioned in\n                        // any of these places\n                        var useQuarters = (axis.options.tickSize &&\n                                axis.options.tickSize[1] === \"quarter\") ||\n                            (axis.options.minTickSize &&\n                                axis.options.minTickSize[1] === \"quarter\");\n\n                        var timeUnitSize;\n                        if (opts.timeBase === 'seconds') {\n                            timeUnitSize = timeUnitSizeSeconds;\n                        } else if (opts.timeBase === 'microseconds') {\n                            timeUnitSize = timeUnitSizeMicroseconds;\n                        } else {\n                            timeUnitSize = timeUnitSizeMilliseconds;\n                        }\n\n                        var t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n                        var span = axis.max - axis.min;\n                        var suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n                        var hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n                        var factor;\n                        var fmt;\n\n                        if (opts.timeBase === 'seconds') {\n                            factor = 1;\n                        } else if (opts.timeBase === 'microseconds') {\n                            factor = 1000000\n                        } else {\n                            factor = 1000;\n                        }\n\n                        if (t < timeUnitSize.second) {\n                            var decimals = -Math.floor(Math.log10(t / factor))\n\n                            // the two-and-halves require an additional decimal\n                            if (String(t).indexOf('25') > -1) {\n                                decimals++;\n                            }\n\n                            fmt = \"%S.%\" + decimals + \"s\";\n                        } else\n                        if (t < timeUnitSize.minute) {\n                            fmt = hourCode + \":%M:%S\" + suffix;\n                        } else if (t < timeUnitSize.day) {\n                            if (span < 2 * timeUnitSize.day) {\n                                fmt = hourCode + \":%M\" + suffix;\n                            } else {\n                                fmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n                            }\n                        } else if (t < timeUnitSize.month) {\n                            fmt = \"%b %d\";\n                        } else if ((useQuarters && t < timeUnitSize.quarter) ||\n                            (!useQuarters && t < timeUnitSize.year)) {\n                            if (span < timeUnitSize.year) {\n                                fmt = \"%b\";\n                            } else {\n                                fmt = \"%b %Y\";\n                            }\n                        } else if (useQuarters && t < timeUnitSize.year) {\n                            if (span < timeUnitSize.year) {\n                                fmt = \"Q%q\";\n                            } else {\n                                fmt = \"Q%q %Y\";\n                            }\n                        } else {\n                            fmt = \"%Y\";\n                        }\n\n                        var rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n                        return rt;\n                    };\n                }\n            });\n        });\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'time',\n        version: '1.0'\n    });\n\n    // Time-axis support used to be in Flot core, which exposed the\n    // formatDate function on the plot object.  Various plugins depend\n    // on the function, so we need to re-expose it here.\n\n    $.plot.formatDate = formatDate;\n    $.plot.dateGenerator = dateGenerator;\n    $.plot.dateTickGenerator = dateTickGenerator;\n    $.plot.makeUtcWrapper = makeUtcWrapper;\n})(jQuery);\n","/*\nAxis label plugin for flot\n\nDerived from:\nAxis Labels Plugin for flot.\nhttp://github.com/markrcote/flot-axislabels\n\nOriginal code is Copyright (c) 2010 Xuan Luo.\nOriginal code was released under the GPLv3 license by Xuan Luo, September 2010.\nOriginal code was rereleased under the MIT license by Xuan Luo, April 2012.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n(function($) {\n    \"use strict\";\n\n    var options = {\n        axisLabels: {\n            show: true\n        }\n    };\n\n    function AxisLabel(axisName, position, padding, placeholder, axisLabel, surface) {\n        this.axisName = axisName;\n        this.position = position;\n        this.padding = padding;\n        this.placeholder = placeholder;\n        this.axisLabel = axisLabel;\n        this.surface = surface;\n        this.width = 0;\n        this.height = 0;\n        this.elem = null;\n    }\n\n    AxisLabel.prototype.calculateSize = function() {\n        var axisId = this.axisName + 'Label',\n            layerId = axisId + 'Layer',\n            className = axisId + ' axisLabels';\n\n        var info = this.surface.getTextInfo(layerId, this.axisLabel, className);\n        this.labelWidth = info.width;\n        this.labelHeight = info.height;\n\n        if (this.position === 'left' || this.position === 'right') {\n            this.width = this.labelHeight + this.padding;\n            this.height = 0;\n        } else {\n            this.width = 0;\n            this.height = this.labelHeight + this.padding;\n        }\n    };\n\n    AxisLabel.prototype.transforms = function(degrees, x, y, svgLayer) {\n        var transforms = [], translate, rotate;\n        if (x !== 0 || y !== 0) {\n            translate = svgLayer.createSVGTransform();\n            translate.setTranslate(x, y);\n            transforms.push(translate);\n        }\n        if (degrees !== 0) {\n            rotate = svgLayer.createSVGTransform();\n            var centerX = Math.round(this.labelWidth / 2),\n                centerY = 0;\n            rotate.setRotate(degrees, centerX, centerY);\n            transforms.push(rotate);\n        }\n\n        return transforms;\n    };\n\n    AxisLabel.prototype.calculateOffsets = function(box) {\n        var offsets = {\n            x: 0,\n            y: 0,\n            degrees: 0\n        };\n        if (this.position === 'bottom') {\n            offsets.x = box.left + box.width / 2 - this.labelWidth / 2;\n            offsets.y = box.top + box.height - this.labelHeight;\n        } else if (this.position === 'top') {\n            offsets.x = box.left + box.width / 2 - this.labelWidth / 2;\n            offsets.y = box.top;\n        } else if (this.position === 'left') {\n            offsets.degrees = -90;\n            offsets.x = box.left - this.labelWidth / 2;\n            offsets.y = box.height / 2 + box.top;\n        } else if (this.position === 'right') {\n            offsets.degrees = 90;\n            offsets.x = box.left + box.width - this.labelWidth / 2;\n            offsets.y = box.height / 2 + box.top;\n        }\n        offsets.x = Math.round(offsets.x);\n        offsets.y = Math.round(offsets.y);\n\n        return offsets;\n    };\n\n    AxisLabel.prototype.cleanup = function() {\n        var axisId = this.axisName + 'Label',\n            layerId = axisId + 'Layer',\n            className = axisId + ' axisLabels';\n        this.surface.removeText(layerId, 0, 0, this.axisLabel, className);\n    };\n\n    AxisLabel.prototype.draw = function(box) {\n        var axisId = this.axisName + 'Label',\n            layerId = axisId + 'Layer',\n            className = axisId + ' axisLabels',\n            offsets = this.calculateOffsets(box),\n            style = {\n                position: 'absolute',\n                bottom: '',\n                right: '',\n                display: 'inline-block',\n                'white-space': 'nowrap'\n            };\n\n        var layer = this.surface.getSVGLayer(layerId);\n        var transforms = this.transforms(offsets.degrees, offsets.x, offsets.y, layer.parentNode);\n\n        this.surface.addText(layerId, 0, 0, this.axisLabel, className, undefined, undefined, undefined, undefined, transforms);\n        this.surface.render();\n        Object.keys(style).forEach(function(key) {\n            layer.style[key] = style[key];\n        });\n    };\n\n    function init(plot) {\n        plot.hooks.processOptions.push(function(plot, options) {\n            if (!options.axisLabels.show) {\n                return;\n            }\n\n            var axisLabels = {};\n            var defaultPadding = 2; // padding between axis and tick labels\n\n            plot.hooks.axisReserveSpace.push(function(plot, axis) {\n                var opts = axis.options;\n                var axisName = axis.direction + axis.n;\n\n                axis.labelHeight += axis.boxPosition.centerY;\n                axis.labelWidth += axis.boxPosition.centerX;\n\n                if (!opts || !opts.axisLabel || !axis.show) {\n                    return;\n                }\n\n                var padding = opts.axisLabelPadding === undefined\n                    ? defaultPadding\n                    : opts.axisLabelPadding;\n\n                var axisLabel = axisLabels[axisName];\n                if (!axisLabel) {\n                    axisLabel = new AxisLabel(axisName,\n                        opts.position, padding,\n                        plot.getPlaceholder()[0], opts.axisLabel, plot.getSurface());\n                    axisLabels[axisName] = axisLabel;\n                }\n\n                axisLabel.calculateSize();\n\n                // Incrementing the sizes of the tick labels.\n                axis.labelHeight += axisLabel.height;\n                axis.labelWidth += axisLabel.width;\n            });\n\n            // TODO - use the drawAxis hook\n            plot.hooks.draw.push(function(plot, ctx) {\n                $.each(plot.getAxes(), function(flotAxisName, axis) {\n                    var opts = axis.options;\n                    if (!opts || !opts.axisLabel || !axis.show) {\n                        return;\n                    }\n\n                    var axisName = axis.direction + axis.n;\n                    axisLabels[axisName].draw(axis.box);\n                });\n            });\n\n            plot.hooks.shutdown.push(function(plot, eventHolder) {\n                for (var axisName in axisLabels) {\n                    axisLabels[axisName].cleanup();\n                }\n            });\n        });\n    };\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'axisLabels',\n        version: '3.0'\n    });\n})(jQuery);\n","/* Flot plugin for selecting regions of a plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\nselection: {\n    mode: null or \"x\" or \"y\" or \"xy\" or \"smart\",\n    color: color,\n    shape: \"round\" or \"miter\" or \"bevel\",\n    visualization: \"fill\" or \"focus\",\n    displaySelectionDecorations: true or false,\n    minSize: number of pixels\n}\n\nSelection support is enabled by setting the mode to one of \"x\", \"y\" or \"xy\".\nIn \"x\" mode, the user will only be able to specify the x range, similarly for\n\"y\" mode. For \"xy\", the selection becomes a rectangle where both ranges can be\nspecified. \"color\" is color of the selection (if you need to change the color\nlater on, you can get to it with plot.getOptions().selection.color). \"shape\"\nis the shape of the corners of the selection.\n\nThe way how the selection is visualized, can be changed by using the option\n\"visualization\". Flot currently supports two modes: \"focus\" and \"fill\". The\noption \"focus\" draws a colored bezel around the selected area while keeping\nthe selected area clear. The option \"fill\" highlights (i.e., fills) the\nselected area with a colored highlight.\n\nThere are optional selection decorations (handles) that are rendered with the\n\"focus\" visualization option. The selection decoration is rendered by default\nbut can be turned off by setting displaySelectionDecorations to false.\n\n\"minSize\" is the minimum size a selection can be in pixels. This value can\nbe customized to determine the smallest size a selection can be and still\nhave the selection rectangle be displayed. When customizing this value, the\nfact that it refers to pixels, not axis units must be taken into account.\nThus, for example, if there is a bar graph in time mode with BarWidth set to 1\nminute, setting \"minSize\" to 1 will not make the minimum selection size 1\nminute, but rather 1 pixel. Note also that setting \"minSize\" to 0 will prevent\n\"plotunselected\" events from being fired when the user clicks the mouse without\ndragging.\n\nWhen selection support is enabled, a \"plotselected\" event will be emitted on\nthe DOM element you passed into the plot function. The event handler gets a\nparameter with the ranges selected on the axes, like this:\n\n    placeholder.bind( \"plotselected\", function( event, ranges ) {\n        alert(\"You selected \" + ranges.xaxis.from + \" to \" + ranges.xaxis.to)\n        // similar for yaxis - with multiple axes, the extra ones are in\n        // x2axis, x3axis, ...\n    });\n\nThe \"plotselected\" event is only fired when the user has finished making the\nselection. A \"plotselecting\" event is fired during the process with the same\nparameters as the \"plotselected\" event, in case you want to know what's\nhappening while it's happening,\n\nA \"plotunselected\" event with no arguments is emitted when the user clicks the\nmouse to remove the selection. As stated above, setting \"minSize\" to 0 will\ndestroy this behavior.\n\nThe plugin allso adds the following methods to the plot object:\n\n- setSelection( ranges, preventEvent )\n\n  Set the selection rectangle. The passed in ranges is on the same form as\n  returned in the \"plotselected\" event. If the selection mode is \"x\", you\n  should put in either an xaxis range, if the mode is \"y\" you need to put in\n  an yaxis range and both xaxis and yaxis if the selection mode is \"xy\", like\n  this:\n\n    setSelection({ xaxis: { from: 0, to: 10 }, yaxis: { from: 40, to: 60 } });\n\n  setSelection will trigger the \"plotselected\" event when called. If you don't\n  want that to happen, e.g. if you're inside a \"plotselected\" handler, pass\n  true as the second parameter. If you are using multiple axes, you can\n  specify the ranges on any of those, e.g. as x2axis/x3axis/... instead of\n  xaxis, the plugin picks the first one it sees.\n\n- clearSelection( preventEvent )\n\n  Clear the selection rectangle. Pass in true to avoid getting a\n  \"plotunselected\" event.\n\n- getSelection()\n\n  Returns the current selection in the same format as the \"plotselected\"\n  event. If there's currently no selection, the function returns null.\n\n*/\n\n(function ($) {\n    function init(plot) {\n        var selection = {\n            first: {x: -1, y: -1},\n            second: {x: -1, y: -1},\n            show: false,\n            currentMode: 'xy',\n            active: false\n        };\n\n        var SNAPPING_CONSTANT = $.plot.uiConstants.SNAPPING_CONSTANT;\n\n        // FIXME: The drag handling implemented here should be\n        // abstracted out, there's some similar code from a library in\n        // the navigation plugin, this should be massaged a bit to fit\n        // the Flot cases here better and reused. Doing this would\n        // make this plugin much slimmer.\n        var savedhandlers = {};\n\n        var mouseUpHandler = null;\n\n        function onMouseMove(e) {\n            if (selection.active) {\n                updateSelection(e);\n\n                plot.getPlaceholder().trigger(\"plotselecting\", [ getSelection() ]);\n            }\n        }\n\n        function onMouseDown(e) {\n            var o = plot.getOptions();\n            // only accept left-click\n            if (e.which !== 1 || o.selection.mode === null) return;\n\n            // reinitialize currentMode\n            selection.currentMode = 'xy';\n\n            // cancel out any text selections\n            document.body.focus();\n\n            // prevent text selection and drag in old-school browsers\n            if (document.onselectstart !== undefined && savedhandlers.onselectstart == null) {\n                savedhandlers.onselectstart = document.onselectstart;\n                document.onselectstart = function () { return false; };\n            }\n            if (document.ondrag !== undefined && savedhandlers.ondrag == null) {\n                savedhandlers.ondrag = document.ondrag;\n                document.ondrag = function () { return false; };\n            }\n\n            setSelectionPos(selection.first, e);\n\n            selection.active = true;\n\n            // this is a bit silly, but we have to use a closure to be\n            // able to whack the same handler again\n            mouseUpHandler = function (e) { onMouseUp(e); };\n\n            $(document).one(\"mouseup\", mouseUpHandler);\n        }\n\n        function onMouseUp(e) {\n            mouseUpHandler = null;\n\n            // revert drag stuff for old-school browsers\n            if (document.onselectstart !== undefined) {\n                document.onselectstart = savedhandlers.onselectstart;\n            }\n\n            if (document.ondrag !== undefined) {\n                document.ondrag = savedhandlers.ondrag;\n            }\n\n            // no more dragging\n            selection.active = false;\n            updateSelection(e);\n\n            if (selectionIsSane()) {\n                triggerSelectedEvent();\n            } else {\n                // this counts as a clear\n                plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n                plot.getPlaceholder().trigger(\"plotselecting\", [ null ]);\n            }\n\n            return false;\n        }\n\n        function getSelection() {\n            if (!selectionIsSane()) return null;\n\n            if (!selection.show) return null;\n\n            var r = {},\n                c1 = {x: selection.first.x, y: selection.first.y},\n                c2 = {x: selection.second.x, y: selection.second.y};\n\n            if (selectionDirection(plot) === 'x') {\n                c1.y = 0;\n                c2.y = plot.height();\n            }\n\n            if (selectionDirection(plot) === 'y') {\n                c1.x = 0;\n                c2.x = plot.width();\n            }\n\n            $.each(plot.getAxes(), function (name, axis) {\n                if (axis.used) {\n                    var p1 = axis.c2p(c1[axis.direction]), p2 = axis.c2p(c2[axis.direction]);\n                    r[name] = { from: Math.min(p1, p2), to: Math.max(p1, p2) };\n                }\n            });\n            return r;\n        }\n\n        function triggerSelectedEvent() {\n            var r = getSelection();\n\n            plot.getPlaceholder().trigger(\"plotselected\", [ r ]);\n\n            // backwards-compat stuff, to be removed in future\n            if (r.xaxis && r.yaxis) {\n                plot.getPlaceholder().trigger(\"selected\", [ { x1: r.xaxis.from, y1: r.yaxis.from, x2: r.xaxis.to, y2: r.yaxis.to } ]);\n            }\n        }\n\n        function clamp(min, value, max) {\n            return value < min ? min : (value > max ? max : value);\n        }\n\n        function selectionDirection(plot) {\n            var o = plot.getOptions();\n\n            if (o.selection.mode === 'smart') {\n                return selection.currentMode;\n            } else {\n                return o.selection.mode;\n            }\n        }\n\n        function updateMode(pos) {\n            if (selection.first) {\n                var delta = {\n                    x: pos.x - selection.first.x,\n                    y: pos.y - selection.first.y\n                };\n\n                if (Math.abs(delta.x) < SNAPPING_CONSTANT) {\n                    selection.currentMode = 'y';\n                } else if (Math.abs(delta.y) < SNAPPING_CONSTANT) {\n                    selection.currentMode = 'x';\n                } else {\n                    selection.currentMode = 'xy';\n                }\n            }\n        }\n\n        function setSelectionPos(pos, e) {\n            var offset = plot.getPlaceholder().offset();\n            var plotOffset = plot.getPlotOffset();\n            pos.x = clamp(0, e.pageX - offset.left - plotOffset.left, plot.width());\n            pos.y = clamp(0, e.pageY - offset.top - plotOffset.top, plot.height());\n\n            if (pos !== selection.first) updateMode(pos);\n\n            if (selectionDirection(plot) === \"y\") {\n                pos.x = pos === selection.first ? 0 : plot.width();\n            }\n\n            if (selectionDirection(plot) === \"x\") {\n                pos.y = pos === selection.first ? 0 : plot.height();\n            }\n        }\n\n        function updateSelection(pos) {\n            if (pos.pageX == null) return;\n\n            setSelectionPos(selection.second, pos);\n            if (selectionIsSane()) {\n                selection.show = true;\n                plot.triggerRedrawOverlay();\n            } else clearSelection(true);\n        }\n\n        function clearSelection(preventEvent) {\n            if (selection.show) {\n                selection.show = false;\n                selection.currentMode = '';\n                plot.triggerRedrawOverlay();\n                if (!preventEvent) {\n                    plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n                }\n            }\n        }\n\n        // function taken from markings support in Flot\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = plot.getAxes();\n\n            for (var k in axes) {\n                axis = axes[k];\n                if (axis.direction === coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n === 1) {\n                        // support x1axis as xaxis\n                        key = coord + \"axis\";\n                    }\n\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord === \"x\" ? plot.getXAxes()[0] : plot.getYAxes()[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function setSelection(ranges, preventEvent) {\n            var range;\n\n            if (selectionDirection(plot) === \"y\") {\n                selection.first.x = 0;\n                selection.second.x = plot.width();\n            } else {\n                range = extractRange(ranges, \"x\");\n                selection.first.x = range.axis.p2c(range.from);\n                selection.second.x = range.axis.p2c(range.to);\n            }\n\n            if (selectionDirection(plot) === \"x\") {\n                selection.first.y = 0;\n                selection.second.y = plot.height();\n            } else {\n                range = extractRange(ranges, \"y\");\n                selection.first.y = range.axis.p2c(range.from);\n                selection.second.y = range.axis.p2c(range.to);\n            }\n\n            selection.show = true;\n            plot.triggerRedrawOverlay();\n            if (!preventEvent && selectionIsSane()) {\n                triggerSelectedEvent();\n            }\n        }\n\n        function selectionIsSane() {\n            var minSize = plot.getOptions().selection.minSize;\n            return Math.abs(selection.second.x - selection.first.x) >= minSize &&\n                Math.abs(selection.second.y - selection.first.y) >= minSize;\n        }\n\n        plot.clearSelection = clearSelection;\n        plot.setSelection = setSelection;\n        plot.getSelection = getSelection;\n\n        plot.hooks.bindEvents.push(function(plot, eventHolder) {\n            var o = plot.getOptions();\n            if (o.selection.mode != null) {\n                eventHolder.mousemove(onMouseMove);\n                eventHolder.mousedown(onMouseDown);\n            }\n        });\n\n        function drawSelectionDecorations(ctx, x, y, w, h, oX, oY, mode) {\n            var spacing = 3;\n            var fullEarWidth = 15;\n            var earWidth = Math.max(0, Math.min(fullEarWidth, w / 2 - 2, h / 2 - 2));\n            ctx.fillStyle = '#ffffff';\n\n            if (mode === 'xy') {\n                ctx.beginPath();\n                ctx.moveTo(x, y + earWidth);\n                ctx.lineTo(x - 3, y + earWidth);\n                ctx.lineTo(x - 3, y - 3);\n                ctx.lineTo(x + earWidth, y - 3);\n                ctx.lineTo(x + earWidth, y);\n                ctx.lineTo(x, y);\n                ctx.closePath();\n\n                ctx.moveTo(x, y + h - earWidth);\n                ctx.lineTo(x - 3, y + h - earWidth);\n                ctx.lineTo(x - 3, y + h + 3);\n                ctx.lineTo(x + earWidth, y + h + 3);\n                ctx.lineTo(x + earWidth, y + h);\n                ctx.lineTo(x, y + h);\n                ctx.closePath();\n\n                ctx.moveTo(x + w, y + earWidth);\n                ctx.lineTo(x + w + 3, y + earWidth);\n                ctx.lineTo(x + w + 3, y - 3);\n                ctx.lineTo(x + w - earWidth, y - 3);\n                ctx.lineTo(x + w - earWidth, y);\n                ctx.lineTo(x + w, y);\n                ctx.closePath();\n\n                ctx.moveTo(x + w, y + h - earWidth);\n                ctx.lineTo(x + w + 3, y + h - earWidth);\n                ctx.lineTo(x + w + 3, y + h + 3);\n                ctx.lineTo(x + w - earWidth, y + h + 3);\n                ctx.lineTo(x + w - earWidth, y + h);\n                ctx.lineTo(x + w, y + h);\n                ctx.closePath();\n\n                ctx.stroke();\n                ctx.fill();\n            }\n\n            x = oX;\n            y = oY;\n\n            if (mode === 'x') {\n                ctx.beginPath();\n                ctx.moveTo(x, y + fullEarWidth);\n                ctx.lineTo(x, y - fullEarWidth);\n                ctx.lineTo(x - spacing, y - fullEarWidth);\n                ctx.lineTo(x - spacing, y + fullEarWidth);\n                ctx.closePath();\n\n                ctx.moveTo(x + w, y + fullEarWidth);\n                ctx.lineTo(x + w, y - fullEarWidth);\n                ctx.lineTo(x + w + spacing, y - fullEarWidth);\n                ctx.lineTo(x + w + spacing, y + fullEarWidth);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n            }\n\n            if (mode === 'y') {\n                ctx.beginPath();\n\n                ctx.moveTo(x - fullEarWidth, y);\n                ctx.lineTo(x + fullEarWidth, y);\n                ctx.lineTo(x + fullEarWidth, y - spacing);\n                ctx.lineTo(x - fullEarWidth, y - spacing);\n                ctx.closePath();\n\n                ctx.moveTo(x - fullEarWidth, y + h);\n                ctx.lineTo(x + fullEarWidth, y + h);\n                ctx.lineTo(x + fullEarWidth, y + h + spacing);\n                ctx.lineTo(x - fullEarWidth, y + h + spacing);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n            }\n        }\n\n        plot.hooks.drawOverlay.push(function (plot, ctx) {\n            // draw selection\n            if (selection.show && selectionIsSane()) {\n                var plotOffset = plot.getPlotOffset();\n                var o = plot.getOptions();\n\n                ctx.save();\n                ctx.translate(plotOffset.left, plotOffset.top);\n\n                var c = $.color.parse(o.selection.color);\n                var visualization = o.selection.visualization;\n                var displaySelectionDecorations = o.selection.displaySelectionDecorations;\n\n                var scalingFactor = 1;\n\n                // use a dimmer scaling factor if visualization is \"fill\"\n                if (visualization === \"fill\") {\n                    scalingFactor = 0.8;\n                }\n\n                ctx.strokeStyle = c.scale('a', scalingFactor).toString();\n                ctx.lineWidth = 1;\n                ctx.lineJoin = o.selection.shape;\n                ctx.fillStyle = c.scale('a', 0.4).toString();\n\n                var x = Math.min(selection.first.x, selection.second.x) + 0.5,\n                    oX = x,\n                    y = Math.min(selection.first.y, selection.second.y) + 0.5,\n                    oY = y,\n                    w = Math.abs(selection.second.x - selection.first.x) - 1,\n                    h = Math.abs(selection.second.y - selection.first.y) - 1;\n\n                if (selectionDirection(plot) === 'x') {\n                    h += y;\n                    y = 0;\n                }\n\n                if (selectionDirection(plot) === 'y') {\n                    w += x;\n                    x = 0;\n                }\n\n                if (visualization === \"fill\") {\n                    ctx.fillRect(x, y, w, h);\n                    ctx.strokeRect(x, y, w, h);\n                } else {\n                    ctx.fillRect(0, 0, plot.width(), plot.height());\n                    ctx.clearRect(x, y, w, h);\n\n                    if (displaySelectionDecorations) {\n                        drawSelectionDecorations(ctx, x, y, w, h, oX, oY, selectionDirection(plot));\n                    }\n                }\n\n                ctx.restore();\n            }\n        });\n\n        plot.hooks.shutdown.push(function (plot, eventHolder) {\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mousedown\", onMouseDown);\n\n            if (mouseUpHandler) {\n                $(document).unbind(\"mouseup\", mouseUpHandler);\n            }\n        });\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: {\n            selection: {\n                mode: null, // one of null, \"x\", \"y\" or \"xy\"\n                visualization: \"focus\", // \"focus\" or \"fill\"\n                displaySelectionDecorations: true, // true or false (currently only relevant for the focus visualization)\n                color: \"#888888\",\n                shape: \"round\", // one of \"round\", \"miter\", or \"bevel\"\n                minSize: 5 // minimum number of pixels\n            }\n        },\n        name: 'selection',\n        version: '1.1'\n    });\n})(jQuery);\n","/** ## jquery.flot.composeImages.js\n\nThis plugin is used to expose a function used to overlap several canvases and\nSVGs, for the purpose of creating a snaphot out of them.\n\n### When composeImages is used:\nWhen multiple canvases and SVGs have to be overlapped into a single image\nand their offset on the page, must be preserved.\n\n### Where can be used:\nIn creating a downloadable snapshot of the plots, axes, cursors etc of a graph.\n\n### How it works:\nThe entry point is composeImages function. It expects an array of objects,\nwhich should be either canvases or SVGs (or a mix). It does a prevalidation\nof them, by verifying if they will be usable or not, later in the flow.\nAfter selecting only usable sources, it passes them to getGenerateTempImg\nfunction, which generates temporary images out of them. This function\nexpects that some of the passed sources (canvas or SVG) may still have\nproblems being converted to an image and makes sure the promises system,\nused by composeImages function, moves forward. As an example, SVGs with\nmissing information from header or with unsupported content, may lead to\nfailure in generating the temporary image. Temporary images are required\nmostly on extracting content from SVGs, but this is also where the x/y\noffsets are extracted for each image which will be added. For SVGs in\nparticular, their CSS rules have to be applied.\nAfter all temporary images are generated, they are overlapped using\ngetExecuteImgComposition function. This is where the destination canvas\nis set to the proper dimensions. It is then output by composeImages.\nThis function returns a promise, which can be used to wait for the whole\ncomposition process. It requires to be asynchronous, because this is how\ntemporary images load their data.\n*/\n\n(function($) {\n    \"use strict\";\n    const GENERALFAILURECALLBACKERROR = -100; //simply a negative number\n    const SUCCESSFULIMAGEPREPARATION = 0;\n    const EMPTYARRAYOFIMAGESOURCES = -1;\n    const NEGATIVEIMAGESIZE = -2;\n    var pixelRatio = 1;\n    var browser = $.plot.browser;\n    var getPixelRatio = browser.getPixelRatio;\n\n    function composeImages(canvasOrSvgSources, destinationCanvas) {\n        var validCanvasOrSvgSources = canvasOrSvgSources.filter(isValidSource);\n        pixelRatio = getPixelRatio(destinationCanvas.getContext('2d'));\n\n        var allImgCompositionPromises = validCanvasOrSvgSources.map(function(validCanvasOrSvgSource) {\n            var tempImg = new Image();\n            var currentPromise = new Promise(getGenerateTempImg(tempImg, validCanvasOrSvgSource));\n            return currentPromise;\n        });\n\n        var lastPromise = Promise.all(allImgCompositionPromises).then(getExecuteImgComposition(destinationCanvas), failureCallback);\n        return lastPromise;\n    }\n\n    function isValidSource(canvasOrSvgSource) {\n        var isValidFromCanvas = true;\n        var isValidFromContent = true;\n        if ((canvasOrSvgSource === null) || (canvasOrSvgSource === undefined)) {\n            isValidFromContent = false;\n        } else {\n            if (canvasOrSvgSource.tagName === 'CANVAS') {\n                if ((canvasOrSvgSource.getBoundingClientRect().right === canvasOrSvgSource.getBoundingClientRect().left) ||\n                    (canvasOrSvgSource.getBoundingClientRect().bottom === canvasOrSvgSource.getBoundingClientRect().top)) {\n                    isValidFromCanvas = false;\n                }\n            }\n        }\n        return isValidFromContent && isValidFromCanvas && (window.getComputedStyle(canvasOrSvgSource).visibility === 'visible');\n    }\n\n    function getGenerateTempImg(tempImg, canvasOrSvgSource) {\n        tempImg.sourceDescription = '<info className=\"' + canvasOrSvgSource.className + '\" tagName=\"' + canvasOrSvgSource.tagName + '\" id=\"' + canvasOrSvgSource.id + '\">';\n        tempImg.sourceComponent = canvasOrSvgSource;\n\n        return function doGenerateTempImg(successCallbackFunc, failureCallbackFunc) {\n            tempImg.onload = function(evt) {\n                tempImg.successfullyLoaded = true;\n                successCallbackFunc(tempImg);\n            };\n\n            tempImg.onabort = function(evt) {\n                tempImg.successfullyLoaded = false;\n                console.log('Can\\'t generate temp image from ' + tempImg.sourceDescription + '. It is possible that it is missing some properties or its content is not supported by this browser. Source component:', tempImg.sourceComponent);\n                successCallbackFunc(tempImg); //call successCallback, to allow snapshot of all working images\n            };\n\n            tempImg.onerror = function(evt) {\n                tempImg.successfullyLoaded = false;\n                console.log('Can\\'t generate temp image from ' + tempImg.sourceDescription + '. It is possible that it is missing some properties or its content is not supported by this browser. Source component:', tempImg.sourceComponent);\n                successCallbackFunc(tempImg); //call successCallback, to allow snapshot of all working images\n            };\n\n            generateTempImageFromCanvasOrSvg(canvasOrSvgSource, tempImg);\n        };\n    }\n\n    function getExecuteImgComposition(destinationCanvas) {\n        return function executeImgComposition(tempImgs) {\n            var compositionResult = copyImgsToCanvas(tempImgs, destinationCanvas);\n            return compositionResult;\n        };\n    }\n\n    function copyCanvasToImg(canvas, img) {\n        img.src = canvas.toDataURL('image/png');\n    }\n\n    function getCSSRules(document) {\n        var styleSheets = document.styleSheets,\n            rulesList = [];\n        for (var i = 0; i < styleSheets.length; i++) {\n            // CORS requests for style sheets throw and an exception on Chrome > 64\n            try {\n                // in Chrome, the external CSS files are empty when the page is directly loaded from disk\n                var rules = styleSheets[i].cssRules || [];\n                for (var j = 0; j < rules.length; j++) {\n                    var rule = rules[j];\n                    rulesList.push(rule.cssText);\n                }\n            } catch (e) {\n                console.log('Failed to get some css rules');\n            }\n        }\n        return rulesList;\n    }\n\n    function embedCSSRulesInSVG(rules, svg) {\n        var text = [\n            '<svg class=\"snapshot ' + svg.classList + '\" width=\"' + svg.width.baseVal.value * pixelRatio + '\" height=\"' + svg.height.baseVal.value * pixelRatio + '\" viewBox=\"0 0 ' + svg.width.baseVal.value + ' ' + svg.height.baseVal.value + '\" xmlns=\"http://www.w3.org/2000/svg\">',\n            '<style>',\n            '/* <![CDATA[ */',\n            rules.join('\\n'),\n            '/* ]]> */',\n            '</style>',\n            svg.innerHTML,\n            '</svg>'\n        ].join('\\n');\n        return text;\n    }\n\n    function copySVGToImgMostBrowsers(svg, img) {\n        var rules = getCSSRules(document),\n            source = embedCSSRulesInSVG(rules, svg);\n\n        source = patchSVGSource(source);\n\n        var blob = new Blob([source], {type: \"image/svg+xml;charset=utf-8\"}),\n            domURL = self.URL || self.webkitURL || self,\n            url = domURL.createObjectURL(blob);\n        img.src = url;\n    }\n\n    function copySVGToImgSafari(svg, img) {\n        // Use this method to convert a string buffer array to a binary string.\n        // Do so by breaking up large strings into smaller substrings; this is necessary to avoid the\n        // \"maximum call stack size exceeded\" exception that can happen when calling 'String.fromCharCode.apply'\n        // with a very long array.\n        function buildBinaryString (arrayBuffer) {\n            var binaryString = \"\";\n            const utf8Array = new Uint8Array(arrayBuffer);\n            const blockSize = 16384;\n            for (var i = 0; i < utf8Array.length; i = i + blockSize) {\n                const binarySubString = String.fromCharCode.apply(null, utf8Array.subarray(i, i + blockSize));\n                binaryString = binaryString + binarySubString;\n            }\n            return binaryString;\n        };\n\n        var rules = getCSSRules(document),\n            source = embedCSSRulesInSVG(rules, svg),\n            data,\n            utf8BinaryString;\n\n        source = patchSVGSource(source);\n\n        // Encode the string as UTF-8 and convert it to a binary string. The UTF-8 encoding is required to\n        // capture unicode characters correctly.\n        utf8BinaryString = buildBinaryString(new (TextEncoder || TextEncoderLite)('utf-8').encode(source));\n\n        data = \"data:image/svg+xml;base64,\" + btoa(utf8BinaryString);\n        img.src = data;\n    }\n\n    function patchSVGSource(svgSource) {\n        var source = '';\n        //add name spaces.\n        if (!svgSource.match(/^<svg[^>]+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)) {\n            source = svgSource.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        }\n        if (!svgSource.match(/^<svg[^>]+\"http:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)) {\n            source = svgSource.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n        }\n\n        //add xml declaration\n        return '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n    }\n\n    function copySVGToImg(svg, img) {\n        if (browser.isSafari() || browser.isMobileSafari()) {\n            copySVGToImgSafari(svg, img);\n        } else {\n            copySVGToImgMostBrowsers(svg, img);\n        }\n    }\n\n    function adaptDestSizeToZoom(destinationCanvas, sources) {\n        function containsSVGs(source) {\n            return source.srcImgTagName === 'svg';\n        }\n\n        if (sources.find(containsSVGs) !== undefined) {\n            if (pixelRatio < 1) {\n                destinationCanvas.width = destinationCanvas.width * pixelRatio;\n                destinationCanvas.height = destinationCanvas.height * pixelRatio;\n            }\n        }\n    }\n\n    function prepareImagesToBeComposed(sources, destination) {\n        var result = SUCCESSFULIMAGEPREPARATION;\n        if (sources.length === 0) {\n            result = EMPTYARRAYOFIMAGESOURCES; //nothing to do if called without sources\n        } else {\n            var minX = sources[0].genLeft;\n            var minY = sources[0].genTop;\n            var maxX = sources[0].genRight;\n            var maxY = sources[0].genBottom;\n            var i = 0;\n\n            for (i = 1; i < sources.length; i++) {\n                if (minX > sources[i].genLeft) {\n                    minX = sources[i].genLeft;\n                }\n\n                if (minY > sources[i].genTop) {\n                    minY = sources[i].genTop;\n                }\n            }\n\n            for (i = 1; i < sources.length; i++) {\n                if (maxX < sources[i].genRight) {\n                    maxX = sources[i].genRight;\n                }\n\n                if (maxY < sources[i].genBottom) {\n                    maxY = sources[i].genBottom;\n                }\n            }\n\n            if ((maxX - minX <= 0) || (maxY - minY <= 0)) {\n                result = NEGATIVEIMAGESIZE; //this might occur on hidden images\n            } else {\n                destination.width = Math.round(maxX - minX);\n                destination.height = Math.round(maxY - minY);\n\n                for (i = 0; i < sources.length; i++) {\n                    sources[i].xCompOffset = sources[i].genLeft - minX;\n                    sources[i].yCompOffset = sources[i].genTop - minY;\n                }\n\n                adaptDestSizeToZoom(destination, sources);\n            }\n        }\n        return result;\n    }\n\n    function copyImgsToCanvas(sources, destination) {\n        var prepareImagesResult = prepareImagesToBeComposed(sources, destination);\n        if (prepareImagesResult === SUCCESSFULIMAGEPREPARATION) {\n            var destinationCtx = destination.getContext('2d');\n\n            for (var i = 0; i < sources.length; i++) {\n                if (sources[i].successfullyLoaded === true) {\n                    destinationCtx.drawImage(sources[i], sources[i].xCompOffset * pixelRatio, sources[i].yCompOffset * pixelRatio);\n                }\n            }\n        }\n        return prepareImagesResult;\n    }\n\n    function adnotateDestImgWithBoundingClientRect(srcCanvasOrSvg, destImg) {\n        destImg.genLeft = srcCanvasOrSvg.getBoundingClientRect().left;\n        destImg.genTop = srcCanvasOrSvg.getBoundingClientRect().top;\n\n        if (srcCanvasOrSvg.tagName === 'CANVAS') {\n            destImg.genRight = destImg.genLeft + srcCanvasOrSvg.width;\n            destImg.genBottom = destImg.genTop + srcCanvasOrSvg.height;\n        }\n\n        if (srcCanvasOrSvg.tagName === 'svg') {\n            destImg.genRight = srcCanvasOrSvg.getBoundingClientRect().right;\n            destImg.genBottom = srcCanvasOrSvg.getBoundingClientRect().bottom;\n        }\n    }\n\n    function generateTempImageFromCanvasOrSvg(srcCanvasOrSvg, destImg) {\n        if (srcCanvasOrSvg.tagName === 'CANVAS') {\n            copyCanvasToImg(srcCanvasOrSvg, destImg);\n        }\n\n        if (srcCanvasOrSvg.tagName === 'svg') {\n            copySVGToImg(srcCanvasOrSvg, destImg);\n        }\n\n        destImg.srcImgTagName = srcCanvasOrSvg.tagName;\n        adnotateDestImgWithBoundingClientRect(srcCanvasOrSvg, destImg);\n    }\n\n    function failureCallback() {\n        return GENERALFAILURECALLBACKERROR;\n    }\n\n    // used for testing\n    $.plot.composeImages = composeImages;\n\n    function init(plot) {\n        // used to extend the public API of the plot\n        plot.composeImages = composeImages;\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        name: 'composeImages',\n        version: '1.0'\n    });\n})(jQuery);\n","/* Flot plugin for drawing legends.\n\n*/\n\n(function($) {\n    var defaultOptions = {\n        legend: {\n            show: false,\n            noColumns: 1,\n            labelFormatter: null, // fn: string -> string\n            container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n            position: 'ne', // position of default legend container within plot\n            margin: 5, // distance from grid edge to default legend container within plot\n            sorted: null // default to no legend sorting\n        }\n    };\n\n    function insertLegend(plot, options, placeholder, legendEntries) {\n        // clear before redraw\n        if (options.legend.container != null) {\n            $(options.legend.container).html('');\n        } else {\n            placeholder.find('.legend').remove();\n        }\n\n        if (!options.legend.show) {\n            return;\n        }\n\n        // Save the legend entries in legend options\n        var entries = options.legend.legendEntries = legendEntries,\n            plotOffset = options.legend.plotOffset = plot.getPlotOffset(),\n            html = [],\n            entry, labelHtml, iconHtml,\n            j = 0,\n            i,\n            pos = \"\",\n            p = options.legend.position,\n            m = options.legend.margin,\n            shape = {\n                name: '',\n                label: '',\n                xPos: '',\n                yPos: ''\n            };\n\n        html[j++] = '<svg class=\"legendLayer\" style=\"width:inherit;height:inherit;\">';\n        html[j++] = '<rect class=\"background\" width=\"100%\" height=\"100%\"/>';\n        html[j++] = svgShapeDefs;\n\n        var left = 0;\n        var columnWidths = [];\n        var style = window.getComputedStyle(document.querySelector('body'));\n        for (i = 0; i < entries.length; ++i) {\n            let columnIndex = i % options.legend.noColumns;\n            entry = entries[i];\n            shape.label = entry.label;\n            var info = plot.getSurface().getTextInfo('', shape.label, {\n                style: style.fontStyle,\n                variant: style.fontVariant,\n                weight: style.fontWeight,\n                size: parseInt(style.fontSize),\n                lineHeight: parseInt(style.lineHeight),\n                family: style.fontFamily\n            });\n\n            var labelWidth = info.width;\n            // 36px = 1.5em + 6px margin\n            var iconWidth = 48;\n            if (columnWidths[columnIndex]) {\n                if (labelWidth > columnWidths[columnIndex]) {\n                    columnWidths[columnIndex] = labelWidth + iconWidth;\n                }\n            } else {\n                columnWidths[columnIndex] = labelWidth + iconWidth;\n            }\n        }\n\n        // Generate html for icons and labels from a list of entries\n        for (i = 0; i < entries.length; ++i) {\n            let columnIndex = i % options.legend.noColumns;\n            entry = entries[i];\n            iconHtml = '';\n            shape.label = entry.label;\n            shape.xPos = (left + 3) + 'px';\n            left += columnWidths[columnIndex];\n            if ((i + 1) % options.legend.noColumns === 0) {\n                left = 0;\n            }\n            shape.yPos = Math.floor(i / options.legend.noColumns) * 1.5 + 'em';\n            // area\n            if (entry.options.lines.show && entry.options.lines.fill) {\n                shape.name = 'area';\n                shape.fillColor = entry.color;\n                iconHtml += getEntryIconHtml(shape);\n            }\n            // bars\n            if (entry.options.bars.show) {\n                shape.name = 'bar';\n                shape.fillColor = entry.color;\n                iconHtml += getEntryIconHtml(shape);\n            }\n            // lines\n            if (entry.options.lines.show && !entry.options.lines.fill) {\n                shape.name = 'line';\n                shape.strokeColor = entry.color;\n                shape.strokeWidth = entry.options.lines.lineWidth;\n                iconHtml += getEntryIconHtml(shape);\n            }\n            // points\n            if (entry.options.points.show) {\n                shape.name = entry.options.points.symbol;\n                shape.strokeColor = entry.color;\n                shape.fillColor = entry.options.points.fillColor;\n                shape.strokeWidth = entry.options.points.lineWidth;\n                iconHtml += getEntryIconHtml(shape);\n            }\n\n            labelHtml = '<text x=\"' + shape.xPos + '\" y=\"' + shape.yPos + '\" text-anchor=\"start\"><tspan dx=\"2em\" dy=\"1.2em\">' + shape.label + '</tspan></text>'\n            html[j++] = '<g>' + iconHtml + labelHtml + '</g>';\n        }\n\n        html[j++] = '</svg>';\n        if (m[0] == null) {\n            m = [m, m];\n        }\n\n        if (p.charAt(0) === 'n') {\n            pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n        } else if (p.charAt(0) === 's') {\n            pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n        }\n\n        if (p.charAt(1) === 'e') {\n            pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n        } else if (p.charAt(1) === 'w') {\n            pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n        }\n\n        var width = 6;\n        for (i = 0; i < columnWidths.length; ++i) {\n            width += columnWidths[i];\n        }\n\n        var legendEl,\n            height = Math.ceil(entries.length / options.legend.noColumns) * 1.6;\n        if (!options.legend.container) {\n            legendEl = $('<div class=\"legend\" style=\"position:absolute;' + pos + '\">' + html.join('') + '</div>').appendTo(placeholder);\n            legendEl.css('width', width + 'px');\n            legendEl.css('height', height + 'em');\n            legendEl.css('pointerEvents', 'none');\n        } else {\n            legendEl = $(html.join('')).appendTo(options.legend.container)[0];\n            options.legend.container.style.width = width + 'px';\n            options.legend.container.style.height = height + 'em';\n        }\n    }\n\n    // Generate html for a shape\n    function getEntryIconHtml(shape) {\n        var html = '',\n            name = shape.name,\n            x = shape.xPos,\n            y = shape.yPos,\n            fill = shape.fillColor,\n            stroke = shape.strokeColor,\n            width = shape.strokeWidth;\n        switch (name) {\n            case 'circle':\n                html = '<use xlink:href=\"#circle\" class=\"legendIcon\" ' +\n                    'x=\"' + x + '\" ' +\n                    'y=\"' + y + '\" ' +\n                    'fill=\"' + fill + '\" ' +\n                    'stroke=\"' + stroke + '\" ' +\n                    'stroke-width=\"' + width + '\" ' +\n                    'width=\"1.5em\" height=\"1.5em\"' +\n                    '/>';\n                break;\n            case 'diamond':\n                html = '<use xlink:href=\"#diamond\" class=\"legendIcon\" ' +\n                    'x=\"' + x + '\" ' +\n                    'y=\"' + y + '\" ' +\n                    'fill=\"' + fill + '\" ' +\n                    'stroke=\"' + stroke + '\" ' +\n                    'stroke-width=\"' + width + '\" ' +\n                    'width=\"1.5em\" height=\"1.5em\"' +\n                    '/>';\n                break;\n            case 'cross':\n                html = '<use xlink:href=\"#cross\" class=\"legendIcon\" ' +\n                    'x=\"' + x + '\" ' +\n                    'y=\"' + y + '\" ' +\n                    // 'fill=\"' + fill + '\" ' +\n                    'stroke=\"' + stroke + '\" ' +\n                    'stroke-width=\"' + width + '\" ' +\n                    'width=\"1.5em\" height=\"1.5em\"' +\n                    '/>';\n                break;\n            case 'rectangle':\n                html = '<use xlink:href=\"#rectangle\" class=\"legendIcon\" ' +\n                    'x=\"' + x + '\" ' +\n                    'y=\"' + y + '\" ' +\n                    'fill=\"' + fill + '\" ' +\n                    'stroke=\"' + stroke + '\" ' +\n                    'stroke-width=\"' + width + '\" ' +\n                    'width=\"1.5em\" height=\"1.5em\"' +\n                    '/>';\n                break;\n            case 'plus':\n                html = '<use xlink:href=\"#plus\" class=\"legendIcon\" ' +\n                    'x=\"' + x + '\" ' +\n                    'y=\"' + y + '\" ' +\n                    // 'fill=\"' + fill + '\" ' +\n                    'stroke=\"' + stroke + '\" ' +\n                    'stroke-width=\"' + width + '\" ' +\n                    'width=\"1.5em\" height=\"1.5em\"' +\n                    '/>';\n                break;\n            case 'bar':\n                html = '<use xlink:href=\"#bars\" class=\"legendIcon\" ' +\n                    'x=\"' + x + '\" ' +\n                    'y=\"' + y + '\" ' +\n                    'fill=\"' + fill + '\" ' +\n                    // 'stroke=\"' + stroke + '\" ' +\n                    // 'stroke-width=\"' + width + '\" ' +\n                    'width=\"1.5em\" height=\"1.5em\"' +\n                    '/>';\n                break;\n            case 'area':\n                html = '<use xlink:href=\"#area\" class=\"legendIcon\" ' +\n                    'x=\"' + x + '\" ' +\n                    'y=\"' + y + '\" ' +\n                    'fill=\"' + fill + '\" ' +\n                    // 'stroke=\"' + stroke + '\" ' +\n                    // 'stroke-width=\"' + width + '\" ' +\n                    'width=\"1.5em\" height=\"1.5em\"' +\n                    '/>';\n                break;\n            case 'line':\n                html = '<use xlink:href=\"#line\" class=\"legendIcon\" ' +\n                    'x=\"' + x + '\" ' +\n                    'y=\"' + y + '\" ' +\n                    // 'fill=\"' + fill + '\" ' +\n                    'stroke=\"' + stroke + '\" ' +\n                    'stroke-width=\"' + width + '\" ' +\n                    'width=\"1.5em\" height=\"1.5em\"' +\n                    '/>';\n                break;\n            default:\n                // default is circle\n                html = '<use xlink:href=\"#circle\" class=\"legendIcon\" ' +\n                    'x=\"' + x + '\" ' +\n                    'y=\"' + y + '\" ' +\n                    'fill=\"' + fill + '\" ' +\n                    'stroke=\"' + stroke + '\" ' +\n                    'stroke-width=\"' + width + '\" ' +\n                    'width=\"1.5em\" height=\"1.5em\"' +\n                    '/>';\n        }\n\n        return html;\n    }\n\n    // Define svg symbols for shapes\n    var svgShapeDefs = '' +\n        '<defs>' +\n            '<symbol id=\"line\" fill=\"none\" viewBox=\"-5 -5 25 25\">' +\n                '<polyline points=\"0,15 5,5 10,10 15,0\"/>' +\n            '</symbol>' +\n\n            '<symbol id=\"area\" stroke-width=\"1\" viewBox=\"-5 -5 25 25\">' +\n                '<polyline points=\"0,15 5,5 10,10 15,0, 15,15, 0,15\"/>' +\n            '</symbol>' +\n\n            '<symbol id=\"bars\" stroke-width=\"1\" viewBox=\"-5 -5 25 25\">' +\n                '<polyline points=\"1.5,15.5 1.5,12.5, 4.5,12.5 4.5,15.5 6.5,15.5 6.5,3.5, 9.5,3.5 9.5,15.5 11.5,15.5 11.5,7.5 14.5,7.5 14.5,15.5 1.5,15.5\"/>' +\n            '</symbol>' +\n\n            '<symbol id=\"circle\" viewBox=\"-5 -5 25 25\">' +\n                '<circle cx=\"0\" cy=\"15\" r=\"2.5\"/>' +\n                '<circle cx=\"5\" cy=\"5\" r=\"2.5\"/>' +\n                '<circle cx=\"10\" cy=\"10\" r=\"2.5\"/>' +\n                '<circle cx=\"15\" cy=\"0\" r=\"2.5\"/>' +\n            '</symbol>' +\n\n            '<symbol id=\"rectangle\" viewBox=\"-5 -5 25 25\">' +\n                '<rect x=\"-2.1\" y=\"12.9\" width=\"4.2\" height=\"4.2\"/>' +\n                '<rect x=\"2.9\" y=\"2.9\" width=\"4.2\" height=\"4.2\"/>' +\n                '<rect x=\"7.9\" y=\"7.9\" width=\"4.2\" height=\"4.2\"/>' +\n                '<rect x=\"12.9\" y=\"-2.1\" width=\"4.2\" height=\"4.2\"/>' +\n            '</symbol>' +\n\n            '<symbol id=\"diamond\" viewBox=\"-5 -5 25 25\">' +\n                '<path d=\"M-3,15 L0,12 L3,15, L0,18 Z\"/>' +\n                '<path d=\"M2,5 L5,2 L8,5, L5,8 Z\"/>' +\n                '<path d=\"M7,10 L10,7 L13,10, L10,13 Z\"/>' +\n                '<path d=\"M12,0 L15,-3 L18,0, L15,3 Z\"/>' +\n            '</symbol>' +\n\n            '<symbol id=\"cross\" fill=\"none\" viewBox=\"-5 -5 25 25\">' +\n                '<path d=\"M-2.1,12.9 L2.1,17.1, M2.1,12.9 L-2.1,17.1 Z\"/>' +\n                '<path d=\"M2.9,2.9 L7.1,7.1 M7.1,2.9 L2.9,7.1 Z\"/>' +\n                '<path d=\"M7.9,7.9 L12.1,12.1 M12.1,7.9 L7.9,12.1 Z\"/>' +\n                '<path d=\"M12.9,-2.1 L17.1,2.1 M17.1,-2.1 L12.9,2.1 Z\"/>' +\n            '</symbol>' +\n\n            '<symbol id=\"plus\" fill=\"none\" viewBox=\"-5 -5 25 25\">' +\n                '<path d=\"M0,12 L0,18, M-3,15 L3,15 Z\"/>' +\n                '<path d=\"M5,2 L5,8 M2,5 L8,5 Z\"/>' +\n                '<path d=\"M10,7 L10,13 M7,10 L13,10 Z\"/>' +\n                '<path d=\"M15,-3 L15,3 M12,0 L18,0 Z\"/>' +\n            '</symbol>' +\n        '</defs>';\n\n    // Generate a list of legend entries in their final order\n    function getLegendEntries(series, labelFormatter, sorted) {\n        var lf = labelFormatter,\n            legendEntries = series.reduce(function(validEntries, s, i) {\n                var labelEval = (lf ? lf(s.label, s) : s.label)\n                if (s.hasOwnProperty(\"label\") ? labelEval : true) {\n                    var entry = {\n                        label: labelEval || 'Plot ' + (i + 1),\n                        color: s.color,\n                        options: {\n                            lines: s.lines,\n                            points: s.points,\n                            bars: s.bars\n                        }\n                    }\n                    validEntries.push(entry)\n                }\n                return validEntries;\n            }, []);\n\n        // Sort the legend using either the default or a custom comparator\n        if (sorted) {\n            if ($.isFunction(sorted)) {\n                legendEntries.sort(sorted);\n            } else if (sorted === 'reverse') {\n                legendEntries.reverse();\n            } else {\n                var ascending = (sorted !== 'descending');\n                legendEntries.sort(function(a, b) {\n                    return a.label === b.label\n                        ? 0\n                        : ((a.label < b.label) !== ascending ? 1 : -1 // Logical XOR\n                        );\n                });\n            }\n        }\n\n        return legendEntries;\n    }\n\n    // return false if opts1 same as opts2\n    function checkOptions(opts1, opts2) {\n        for (var prop in opts1) {\n            if (opts1.hasOwnProperty(prop)) {\n                if (opts1[prop] !== opts2[prop]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    // Compare two lists of legend entries\n    function shouldRedraw(oldEntries, newEntries) {\n        if (!oldEntries || !newEntries) {\n            return true;\n        }\n\n        if (oldEntries.length !== newEntries.length) {\n            return true;\n        }\n        var i, newEntry, oldEntry, newOpts, oldOpts;\n        for (i = 0; i < newEntries.length; i++) {\n            newEntry = newEntries[i];\n            oldEntry = oldEntries[i];\n\n            if (newEntry.label !== oldEntry.label) {\n                return true;\n            }\n\n            if (newEntry.color !== oldEntry.color) {\n                return true;\n            }\n\n            // check for changes in lines options\n            newOpts = newEntry.options.lines;\n            oldOpts = oldEntry.options.lines;\n            if (checkOptions(newOpts, oldOpts)) {\n                return true;\n            }\n\n            // check for changes in points options\n            newOpts = newEntry.options.points;\n            oldOpts = oldEntry.options.points;\n            if (checkOptions(newOpts, oldOpts)) {\n                return true;\n            }\n\n            // check for changes in bars options\n            newOpts = newEntry.options.bars;\n            oldOpts = oldEntry.options.bars;\n            if (checkOptions(newOpts, oldOpts)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function init(plot) {\n        plot.hooks.setupGrid.push(function (plot) {\n            var options = plot.getOptions();\n            var series = plot.getData(),\n                labelFormatter = options.legend.labelFormatter,\n                oldEntries = options.legend.legendEntries,\n                oldPlotOffset = options.legend.plotOffset,\n                newEntries = getLegendEntries(series, labelFormatter, options.legend.sorted),\n                newPlotOffset = plot.getPlotOffset();\n\n            if (shouldRedraw(oldEntries, newEntries) ||\n                checkOptions(oldPlotOffset, newPlotOffset)) {\n                insertLegend(plot, options, plot.getPlaceholder(), newEntries);\n            }\n        });\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: defaultOptions,\n        name: 'legend',\n        version: '1.0'\n    });\n})(jQuery);\n"]}